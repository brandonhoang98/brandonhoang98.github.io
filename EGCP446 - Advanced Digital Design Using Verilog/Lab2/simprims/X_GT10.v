// $Header: /devl/xcs/repo/env/Databases/CAEInterfaces/versclibs/data/X_GT10.v,v 1.7 2003/05/22 00:48:01 wloo Exp $
//**************************************************************
//  Copyright (c) 2002 Xilinx Inc.  All Rights Reserved
//  File Name    : X_GT10.v
//  Module Name  : X_GT10
//  Function     : Gigabit Transceiver
//  Site         : GT10
//  Spec Version : 1.3
//  Generated by : write_verilog
//**************************************************************

`timescale 1 ps / 1 ps 

module X_GT10 (
	CHBONDDONE,
	CHBONDO,
	PMARXLOCK,
	RXBUFSTATUS,
	RXCHARISCOMMA,
	RXCHARISK,
	RXCLKCORCNT,
	RXCOMMADET,
	RXDATA,
	RXDISPERR,
	RXLOSSOFSYNC,
	RXNOTINTABLE,
	RXREALIGN,
	RXRECCLK,
	RXRUNDISP,
	TXBUFERR,
	TXKERR,
	TXN,
	TXOUTCLK,
	TXP,
	TXRUNDISP,

	BREFCLKNIN,
	BREFCLKPIN,
	CHBONDI,
	ENCHANSYNC,
	ENMCOMMAALIGN,
	ENPCOMMAALIGN,
	GSR,
	LOOPBACK,
	PMAINIT,
	PMAREGADDR,
	PMAREGDATAIN,
	PMAREGRW,
	PMAREGSTROBE,
	PMARXLOCKSEL,
	POWERDOWN,
	REFCLK,
	REFCLK2,
	REFCLKBSEL,
	REFCLKSEL,
	RXBLOCKSYNC64B66BUSE,
	RXCOMMADETUSE,
	RXDATAWIDTH,
	RXDEC64B66BUSE,
	RXDEC8B10BUSE,
	RXDESCRAM64B66BUSE,
	RXIGNOREBTF,
	RXINTDATAWIDTH,
	RXN,
	RXP,
	RXPOLARITY,
	RXRESET,
	RXSLIDE,
	RXUSRCLK,
	RXUSRCLK2,
	TXBYPASS8B10B,
	TXCHARDISPMODE,
	TXCHARDISPVAL,
	TXCHARISK,
	TXDATA,
	TXDATAWIDTH,
	TXENC64B66BUSE,
	TXENC8B10BUSE,
	TXGEARBOX64B66BUSE,
	TXINHIBIT,
	TXINTDATAWIDTH,
	TXPOLARITY,
	TXRESET,
	TXSCRAM64B66BUSE,
	TXUSRCLK,
	TXUSRCLK2
);

parameter ALIGN_COMMA_WORD = 1;
parameter CHAN_BOND_LIMIT = 16;
parameter CHAN_BOND_MODE = "OFF";
parameter CHAN_BOND_ONE_SHOT = "FALSE";
parameter CHAN_BOND_SEQ_1_1 = 11'b00000000000;
parameter CHAN_BOND_SEQ_1_2 = 11'b00000000000;
parameter CHAN_BOND_SEQ_1_3 = 11'b00000000000;
parameter CHAN_BOND_SEQ_1_4 = 11'b00000000000;
parameter CHAN_BOND_SEQ_1_MASK = 4'b0000;
parameter CHAN_BOND_SEQ_2_1 = 11'b00000000000;
parameter CHAN_BOND_SEQ_2_2 = 11'b00000000000;
parameter CHAN_BOND_SEQ_2_3 = 11'b00000000000;
parameter CHAN_BOND_SEQ_2_4 = 11'b00000000000;
parameter CHAN_BOND_SEQ_2_MASK = 4'b0000;
parameter CHAN_BOND_SEQ_2_USE = "FALSE";
parameter CHAN_BOND_SEQ_LEN = 1;
parameter CHAN_BOND_64B66B_SV = "FALSE";
parameter CLK_COR_8B10B_DE = "FALSE";
parameter CLK_COR_MAX_LAT = 36;
parameter CLK_COR_MIN_LAT = 28;
parameter CLK_COR_SEQ_1_1 = 11'b00000000000;
parameter CLK_COR_SEQ_1_2 = 11'b00000000000;
parameter CLK_COR_SEQ_1_3 = 11'b00000000000;
parameter CLK_COR_SEQ_1_4 = 11'b00000000000;
parameter CLK_COR_SEQ_1_MASK = 4'b0000;
parameter CLK_COR_SEQ_2_1 = 11'b00000000000;
parameter CLK_COR_SEQ_2_2 = 11'b00000000000;
parameter CLK_COR_SEQ_2_3 = 11'b00000000000;
parameter CLK_COR_SEQ_2_4 = 11'b00000000000;
parameter CLK_COR_SEQ_2_MASK = 4'b0000;
parameter CLK_COR_SEQ_2_USE = "FALSE";
parameter CLK_COR_SEQ_DROP = "FALSE";
parameter CLK_COR_SEQ_LEN = 1;
parameter CLK_CORRECT_USE = "TRUE";
parameter COMMA_10B_MASK = 10'b0001111111;
parameter DEC_MCOMMA_DETECT = "TRUE";
parameter DEC_PCOMMA_DETECT = "TRUE";
parameter DEC_VALID_COMMA_ONLY = "TRUE";
parameter MCOMMA_10B_VALUE = 10'b1010000011;
parameter MCOMMA_DETECT = "TRUE";
parameter PCOMMA_10B_VALUE = 10'b0101111100;
parameter PCOMMA_DETECT = "TRUE";
parameter PMA_PWR_CNTRL = 8'b11111111;
parameter PMA_SPEED = "0_32";
parameter RX_BUFFER_USE = "TRUE";
parameter RX_LOS_INVALID_INCR = 1;
parameter RX_LOS_THRESHOLD = 4;
parameter RX_LOSS_OF_SYNC_FSM = "TRUE";
parameter SH_CNT_MAX = 64;
parameter SH_INVALID_CNT_MAX = 16;
parameter TX_BUFFER_USE = "TRUE";

output CHBONDDONE;
output [4:0] CHBONDO;
output PMARXLOCK;
output [1:0] RXBUFSTATUS;
output [7:0] RXCHARISCOMMA;
output [7:0] RXCHARISK;
output [2:0] RXCLKCORCNT;
output RXCOMMADET;
output [63:0] RXDATA;
output [7:0] RXDISPERR;
output [1:0] RXLOSSOFSYNC;
output [7:0] RXNOTINTABLE;
output RXREALIGN;
output RXRECCLK;
output [7:0] RXRUNDISP;
output TXBUFERR;
output [7:0] TXKERR;
output TXN;
output TXOUTCLK;
output TXP;
output [7:0] TXRUNDISP;

input BREFCLKNIN;
input BREFCLKPIN;
input [4:0] CHBONDI;
input ENCHANSYNC;
input ENMCOMMAALIGN;
input ENPCOMMAALIGN;
input GSR;
input [1:0] LOOPBACK;
input PMAINIT;
input [5:0] PMAREGADDR;
input [7:0] PMAREGDATAIN;
input PMAREGRW;
input PMAREGSTROBE;
input [1:0] PMARXLOCKSEL;
input POWERDOWN;
input REFCLK;
input REFCLK2;
input REFCLKBSEL;
input REFCLKSEL;
input RXBLOCKSYNC64B66BUSE;
input RXCOMMADETUSE;
input [1:0] RXDATAWIDTH;
input RXDEC64B66BUSE;
input RXDEC8B10BUSE;
input RXDESCRAM64B66BUSE;
input RXIGNOREBTF;
input [1:0] RXINTDATAWIDTH;
input RXN;
input RXP;
input RXPOLARITY;
input RXRESET;
input RXSLIDE;
input RXUSRCLK;
input RXUSRCLK2;
input [7:0] TXBYPASS8B10B;
input [7:0] TXCHARDISPMODE;
input [7:0] TXCHARDISPVAL;
input [7:0] TXCHARISK;
input [63:0] TXDATA;
input [1:0] TXDATAWIDTH;
input TXENC64B66BUSE;
input TXENC8B10BUSE;
input TXGEARBOX64B66BUSE;
input TXINHIBIT;
input [1:0] TXINTDATAWIDTH;
input TXPOLARITY;
input TXRESET;
input TXSCRAM64B66BUSE;
input TXUSRCLK;
input TXUSRCLK2;

reg [1:0] ALIGN_COMMA_WORD_BINARY;
reg [5:0] CHAN_BOND_LIMIT_BINARY;
reg [1:0] CHAN_BOND_MODE_BINARY;
reg CHAN_BOND_ONE_SHOT_BINARY;
reg CHAN_BOND_SEQ_2_USE_BINARY;
reg [2:0] CHAN_BOND_SEQ_LEN_BINARY;
reg CHAN_BOND_64B66B_SV_BINARY;
reg CLK_COR_8B10B_DE_BINARY;
reg [5:0] CLK_COR_MAX_LAT_BINARY;
reg [5:0] CLK_COR_MIN_LAT_BINARY;
reg CLK_COR_SEQ_2_USE_BINARY;
reg CLK_COR_SEQ_DROP_BINARY;
reg [2:0] CLK_COR_SEQ_LEN_BINARY;
reg CLK_CORRECT_USE_BINARY;
reg DEC_MCOMMA_DETECT_BINARY;
reg DEC_PCOMMA_DETECT_BINARY;
reg DEC_VALID_COMMA_ONLY_BINARY;
reg MCOMMA_DETECT_BINARY;
reg PCOMMA_DETECT_BINARY;
reg [119:0] PMA_SPEED_BINARY;
reg RX_BUFFER_USE_BINARY;
reg [7:0] RX_LOS_INVALID_INCR_BINARY;
reg [7:0] RX_LOS_THRESHOLD_BINARY;
reg RX_LOSS_OF_SYNC_FSM_BINARY;
reg [7:0] SH_CNT_MAX_BINARY;
reg [7:0] SH_INVALID_CNT_MAX_BINARY;
reg TX_BUFFER_USE_BINARY;

reg notifier;

wire CHBONDDONE_OUT;
wire [4:0] CHBONDO_OUT;
wire PMARXLOCK_OUT;
wire [1:0] RXBUFSTATUS_OUT;
wire [7:0] RXCHARISCOMMA_OUT;
wire [7:0] RXCHARISK_OUT;
wire [2:0] RXCLKCORCNT_OUT;
wire RXCOMMADET_OUT;
wire [63:0] RXDATA_OUT;
wire [7:0] RXDISPERR_OUT;
wire [1:0] RXLOSSOFSYNC_OUT;
wire [7:0] RXNOTINTABLE_OUT;
wire RXREALIGN_OUT;
wire RXRECCLK_OUT;
wire [7:0] RXRUNDISP_OUT;
wire TXBUFERR_OUT;
wire [7:0] TXKERR_OUT;
// wire TXN_OUT;
wire TXOUTCLK_OUT;
// wire TXP_OUT;
wire [7:0] TXRUNDISP_OUT;
wire BREFCLKNIN_IN;
wire BREFCLKPIN_IN;
wire [4:0] CHBONDI_IN;
wire ENCHANSYNC_IN;
wire ENMCOMMAALIGN_IN;
wire ENPCOMMAALIGN_IN;
wire [1:0] LOOPBACK_IN;
wire PMAINIT_IN;
wire [5:0] PMAREGADDR_IN;
wire [7:0] PMAREGDATAIN_IN;
wire PMAREGRW_IN;
wire PMAREGSTROBE_IN;
wire [1:0] PMARXLOCKSEL_IN;
wire POWERDOWN_IN;
wire REFCLK_IN;
wire REFCLK2_IN;
wire REFCLKBSEL_IN;
wire REFCLKSEL_IN;
wire RXBLOCKSYNC64B66BUSE_IN;
wire RXCOMMADETUSE_IN;
wire [1:0] RXDATAWIDTH_IN;
wire RXDEC64B66BUSE_IN;
wire RXDEC8B10BUSE_IN;
wire RXDESCRAM64B66BUSE_IN;
wire RXIGNOREBTF_IN;
wire [1:0] RXINTDATAWIDTH_IN;
wire RXN_IN;
wire RXP_IN;
wire RXPOLARITY_IN;
wire RXRESET_IN;
wire RXSLIDE_IN;
wire RXUSRCLK_IN;
wire RXUSRCLK2_IN;
wire [7:0] TXBYPASS8B10B_IN;
wire [7:0] TXCHARDISPMODE_IN;
wire [7:0] TXCHARDISPVAL_IN;
wire [7:0] TXCHARISK_IN;
wire [63:0] TXDATA_IN;
wire [1:0] TXDATAWIDTH_IN;
wire TXENC64B66BUSE_IN;
wire TXENC8B10BUSE_IN;
wire TXGEARBOX64B66BUSE_IN;
wire TXINHIBIT_IN;
wire [1:0] TXINTDATAWIDTH_IN;
wire TXPOLARITY_IN;
wire TXRESET_IN;
wire TXSCRAM64B66BUSE_IN;
wire TXUSRCLK_IN;
wire TXUSRCLK2_IN;

initial begin
	case (ALIGN_COMMA_WORD)
		1 : ALIGN_COMMA_WORD_BINARY <= 2'b00;
		2 : ALIGN_COMMA_WORD_BINARY <= 2'b01;
		4 : ALIGN_COMMA_WORD_BINARY <= 2'b10;
		default : begin
			$display("Attribute Syntax Error : The Attribute ALIGN_COMMA_WORD on X_GT10 instance %m is set to %d.  Legal values for this attribute are 1, 2 or 4.", ALIGN_COMMA_WORD);
			$finish;
		end
	endcase

	case (CHAN_BOND_LIMIT)
		0 : CHAN_BOND_LIMIT_BINARY <= 6'b000000;
		1 : CHAN_BOND_LIMIT_BINARY <= 6'b000001;
		2 : CHAN_BOND_LIMIT_BINARY <= 6'b000010;
		3 : CHAN_BOND_LIMIT_BINARY <= 6'b000011;
		4 : CHAN_BOND_LIMIT_BINARY <= 6'b000100;
		5 : CHAN_BOND_LIMIT_BINARY <= 6'b000101;
		6 : CHAN_BOND_LIMIT_BINARY <= 6'b000110;
		7 : CHAN_BOND_LIMIT_BINARY <= 6'b000111;
		8 : CHAN_BOND_LIMIT_BINARY <= 6'b001000;
		9 : CHAN_BOND_LIMIT_BINARY <= 6'b001001;
		10 : CHAN_BOND_LIMIT_BINARY <= 6'b001010;
		11 : CHAN_BOND_LIMIT_BINARY <= 6'b001011;
		12 : CHAN_BOND_LIMIT_BINARY <= 6'b001100;
		13 : CHAN_BOND_LIMIT_BINARY <= 6'b001101;
		14 : CHAN_BOND_LIMIT_BINARY <= 6'b001110;
		15 : CHAN_BOND_LIMIT_BINARY <= 6'b001111;
		16 : CHAN_BOND_LIMIT_BINARY <= 6'b010000;
		17 : CHAN_BOND_LIMIT_BINARY <= 6'b010001;
		18 : CHAN_BOND_LIMIT_BINARY <= 6'b010010;
		19 : CHAN_BOND_LIMIT_BINARY <= 6'b010011;
		20 : CHAN_BOND_LIMIT_BINARY <= 6'b010100;
		21 : CHAN_BOND_LIMIT_BINARY <= 6'b010101;
		22 : CHAN_BOND_LIMIT_BINARY <= 6'b010110;
		23 : CHAN_BOND_LIMIT_BINARY <= 6'b010111;
		24 : CHAN_BOND_LIMIT_BINARY <= 6'b011000;
		25 : CHAN_BOND_LIMIT_BINARY <= 6'b011001;
		26 : CHAN_BOND_LIMIT_BINARY <= 6'b011010;
		27 : CHAN_BOND_LIMIT_BINARY <= 6'b011011;
		28 : CHAN_BOND_LIMIT_BINARY <= 6'b011100;
		29 : CHAN_BOND_LIMIT_BINARY <= 6'b011101;
		30 : CHAN_BOND_LIMIT_BINARY <= 6'b011110;
		31 : CHAN_BOND_LIMIT_BINARY <= 6'b011111;
		default : begin
			$display("Attribute Syntax Error : The Attribute CHAN_BOND_LIMIT on X_GT10 instance %m is set to %d.  Legal values for this attribute are 0 to 31.", CHAN_BOND_LIMIT);
			$finish;
		end
	endcase

	case (CHAN_BOND_MODE)
		"OFF" : CHAN_BOND_MODE_BINARY <= 2'b00;
		"MASTER" : CHAN_BOND_MODE_BINARY <= 2'b01;
		"SLAVE_1_HOP" : CHAN_BOND_MODE_BINARY <= 2'b10;
		"SLAVE_2_HOPS" : CHAN_BOND_MODE_BINARY <= 2'b11;
		default : begin
			$display("Attribute Syntax Error : The Attribute CHAN_BOND_MODE on X_GT10 instance %m is set to %s.  Legal values for this attribute are OFF, MASTER, SLAVE_1_HOP or SLAVE_2_HOPS.", CHAN_BOND_MODE);
			$finish;
		end
	endcase

	case (CHAN_BOND_ONE_SHOT)
		"FALSE" : CHAN_BOND_ONE_SHOT_BINARY <= 0;
		"TRUE" : CHAN_BOND_ONE_SHOT_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute CHAN_BOND_ONE_SHOT on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", CHAN_BOND_ONE_SHOT);
			$finish;
		end
	endcase

	case (CHAN_BOND_SEQ_2_USE)
		"FALSE" : CHAN_BOND_SEQ_2_USE_BINARY <= 0;
		"TRUE" : CHAN_BOND_SEQ_2_USE_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute CHAN_BOND_SEQ_2_USE on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", CHAN_BOND_SEQ_2_USE);
			$finish;
		end
	endcase

	case (CHAN_BOND_SEQ_LEN)
		1 : CHAN_BOND_SEQ_LEN_BINARY <= 3'b000;
		2 : CHAN_BOND_SEQ_LEN_BINARY <= 3'b001;
		3 : CHAN_BOND_SEQ_LEN_BINARY <= 3'b010;
		4 : CHAN_BOND_SEQ_LEN_BINARY <= 3'b011;
		8 : CHAN_BOND_SEQ_LEN_BINARY <= 3'b111;
		default : begin
			$display("Attribute Syntax Error : The Attribute CHAN_BOND_SEQ_LEN on X_GT10 instance %m is set to %d.  Legal values for this attribute are 1, 2, 3, 4 or 8.", CHAN_BOND_SEQ_LEN);
			$finish;
		end
	endcase

	case (CHAN_BOND_64B66B_SV)
		"FALSE" : CHAN_BOND_64B66B_SV_BINARY <= 0;
		"TRUE" : CHAN_BOND_64B66B_SV_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute CHAN_BOND_64B66B_SV on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", CHAN_BOND_64B66B_SV);
			$finish;
		end
	endcase

	case (CLK_COR_8B10B_DE)
		"FALSE" : CLK_COR_8B10B_DE_BINARY <= 0;
		"TRUE" : CLK_COR_8B10B_DE_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute CLK_COR_8B10B_DE on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", CLK_COR_8B10B_DE);
			$finish;
		end
	endcase

	case (CLK_COR_MAX_LAT)
		0 : CLK_COR_MAX_LAT_BINARY <= 6'b000000;
		1 : CLK_COR_MAX_LAT_BINARY <= 6'b000001;
		2 : CLK_COR_MAX_LAT_BINARY <= 6'b000010;
		3 : CLK_COR_MAX_LAT_BINARY <= 6'b000011;
		4 : CLK_COR_MAX_LAT_BINARY <= 6'b000100;
		5 : CLK_COR_MAX_LAT_BINARY <= 6'b000101;
		6 : CLK_COR_MAX_LAT_BINARY <= 6'b000110;
		7 : CLK_COR_MAX_LAT_BINARY <= 6'b000111;
		8 : CLK_COR_MAX_LAT_BINARY <= 6'b001000;
		9 : CLK_COR_MAX_LAT_BINARY <= 6'b001001;
		10 : CLK_COR_MAX_LAT_BINARY <= 6'b001010;
		11 : CLK_COR_MAX_LAT_BINARY <= 6'b001011;
		12 : CLK_COR_MAX_LAT_BINARY <= 6'b001100;
		13 : CLK_COR_MAX_LAT_BINARY <= 6'b001101;
		14 : CLK_COR_MAX_LAT_BINARY <= 6'b001110;
		15 : CLK_COR_MAX_LAT_BINARY <= 6'b001111;
		16 : CLK_COR_MAX_LAT_BINARY <= 6'b010000;
		17 : CLK_COR_MAX_LAT_BINARY <= 6'b010001;
		18 : CLK_COR_MAX_LAT_BINARY <= 6'b010010;
		19 : CLK_COR_MAX_LAT_BINARY <= 6'b010011;
		20 : CLK_COR_MAX_LAT_BINARY <= 6'b010100;
		21 : CLK_COR_MAX_LAT_BINARY <= 6'b010101;
		22 : CLK_COR_MAX_LAT_BINARY <= 6'b010110;
		23 : CLK_COR_MAX_LAT_BINARY <= 6'b010111;
		24 : CLK_COR_MAX_LAT_BINARY <= 6'b011000;
		25 : CLK_COR_MAX_LAT_BINARY <= 6'b011001;
		26 : CLK_COR_MAX_LAT_BINARY <= 6'b011010;
		27 : CLK_COR_MAX_LAT_BINARY <= 6'b011011;
		28 : CLK_COR_MAX_LAT_BINARY <= 6'b011100;
		29 : CLK_COR_MAX_LAT_BINARY <= 6'b011101;
		30 : CLK_COR_MAX_LAT_BINARY <= 6'b011110;
		31 : CLK_COR_MAX_LAT_BINARY <= 6'b011111;
		32 : CLK_COR_MAX_LAT_BINARY <= 6'b100000;
		33 : CLK_COR_MAX_LAT_BINARY <= 6'b100001;
		34 : CLK_COR_MAX_LAT_BINARY <= 6'b100010;
		35 : CLK_COR_MAX_LAT_BINARY <= 6'b100011;
		36 : CLK_COR_MAX_LAT_BINARY <= 6'b100100;
		37 : CLK_COR_MAX_LAT_BINARY <= 6'b100101;
		38 : CLK_COR_MAX_LAT_BINARY <= 6'b100110;
		39 : CLK_COR_MAX_LAT_BINARY <= 6'b100111;
		40 : CLK_COR_MAX_LAT_BINARY <= 6'b101000;
		41 : CLK_COR_MAX_LAT_BINARY <= 6'b101001;
		42 : CLK_COR_MAX_LAT_BINARY <= 6'b101010;
		43 : CLK_COR_MAX_LAT_BINARY <= 6'b101011;
		44 : CLK_COR_MAX_LAT_BINARY <= 6'b101100;
		45 : CLK_COR_MAX_LAT_BINARY <= 6'b101101;
		46 : CLK_COR_MAX_LAT_BINARY <= 6'b101110;
		47 : CLK_COR_MAX_LAT_BINARY <= 6'b101111;
		48 : CLK_COR_MAX_LAT_BINARY <= 6'b110000;
		49 : CLK_COR_MAX_LAT_BINARY <= 6'b110001;
		50 : CLK_COR_MAX_LAT_BINARY <= 6'b110010;
		51 : CLK_COR_MAX_LAT_BINARY <= 6'b110011;
		52 : CLK_COR_MAX_LAT_BINARY <= 6'b110100;
		53 : CLK_COR_MAX_LAT_BINARY <= 6'b110101;
		54 : CLK_COR_MAX_LAT_BINARY <= 6'b110110;
		55 : CLK_COR_MAX_LAT_BINARY <= 6'b110111;
		56 : CLK_COR_MAX_LAT_BINARY <= 6'b111000;
		57 : CLK_COR_MAX_LAT_BINARY <= 6'b111001;
		58 : CLK_COR_MAX_LAT_BINARY <= 6'b111010;
		59 : CLK_COR_MAX_LAT_BINARY <= 6'b111011;
		60 : CLK_COR_MAX_LAT_BINARY <= 6'b111100;
		61 : CLK_COR_MAX_LAT_BINARY <= 6'b111101;
		62 : CLK_COR_MAX_LAT_BINARY <= 6'b111110;
		63 : CLK_COR_MAX_LAT_BINARY <= 6'b111111;
		default : begin
			$display("Attribute Syntax Error : The Attribute CLK_COR_MAX_LAT on X_GT10 instance %m is set to %d.  Legal values for this attribute are 0 to 63.", CLK_COR_MAX_LAT);
			$finish;
		end
	endcase

	case (CLK_COR_MIN_LAT)
		0 : CLK_COR_MIN_LAT_BINARY <= 6'b000000;
		1 : CLK_COR_MIN_LAT_BINARY <= 6'b000001;
		2 : CLK_COR_MIN_LAT_BINARY <= 6'b000010;
		3 : CLK_COR_MIN_LAT_BINARY <= 6'b000011;
		4 : CLK_COR_MIN_LAT_BINARY <= 6'b000100;
		5 : CLK_COR_MIN_LAT_BINARY <= 6'b000101;
		6 : CLK_COR_MIN_LAT_BINARY <= 6'b000110;
		7 : CLK_COR_MIN_LAT_BINARY <= 6'b000111;
		8 : CLK_COR_MIN_LAT_BINARY <= 6'b001000;
		9 : CLK_COR_MIN_LAT_BINARY <= 6'b001001;
		10 : CLK_COR_MIN_LAT_BINARY <= 6'b001010;
		11 : CLK_COR_MIN_LAT_BINARY <= 6'b001011;
		12 : CLK_COR_MIN_LAT_BINARY <= 6'b001100;
		13 : CLK_COR_MIN_LAT_BINARY <= 6'b001101;
		14 : CLK_COR_MIN_LAT_BINARY <= 6'b001110;
		15 : CLK_COR_MIN_LAT_BINARY <= 6'b001111;
		16 : CLK_COR_MIN_LAT_BINARY <= 6'b010000;
		17 : CLK_COR_MIN_LAT_BINARY <= 6'b010001;
		18 : CLK_COR_MIN_LAT_BINARY <= 6'b010010;
		19 : CLK_COR_MIN_LAT_BINARY <= 6'b010011;
		20 : CLK_COR_MIN_LAT_BINARY <= 6'b010100;
		21 : CLK_COR_MIN_LAT_BINARY <= 6'b010101;
		22 : CLK_COR_MIN_LAT_BINARY <= 6'b010110;
		23 : CLK_COR_MIN_LAT_BINARY <= 6'b010111;
		24 : CLK_COR_MIN_LAT_BINARY <= 6'b011000;
		25 : CLK_COR_MIN_LAT_BINARY <= 6'b011001;
		26 : CLK_COR_MIN_LAT_BINARY <= 6'b011010;
		27 : CLK_COR_MIN_LAT_BINARY <= 6'b011011;
		28 : CLK_COR_MIN_LAT_BINARY <= 6'b011100;
		29 : CLK_COR_MIN_LAT_BINARY <= 6'b011101;
		30 : CLK_COR_MIN_LAT_BINARY <= 6'b011110;
		31 : CLK_COR_MIN_LAT_BINARY <= 6'b011111;
		32 : CLK_COR_MIN_LAT_BINARY <= 6'b100000;
		33 : CLK_COR_MIN_LAT_BINARY <= 6'b100001;
		34 : CLK_COR_MIN_LAT_BINARY <= 6'b100010;
		35 : CLK_COR_MIN_LAT_BINARY <= 6'b100011;
		36 : CLK_COR_MIN_LAT_BINARY <= 6'b100100;
		37 : CLK_COR_MIN_LAT_BINARY <= 6'b100101;
		38 : CLK_COR_MIN_LAT_BINARY <= 6'b100110;
		39 : CLK_COR_MIN_LAT_BINARY <= 6'b100111;
		40 : CLK_COR_MIN_LAT_BINARY <= 6'b101000;
		41 : CLK_COR_MIN_LAT_BINARY <= 6'b101001;
		42 : CLK_COR_MIN_LAT_BINARY <= 6'b101010;
		43 : CLK_COR_MIN_LAT_BINARY <= 6'b101011;
		44 : CLK_COR_MIN_LAT_BINARY <= 6'b101100;
		45 : CLK_COR_MIN_LAT_BINARY <= 6'b101101;
		46 : CLK_COR_MIN_LAT_BINARY <= 6'b101110;
		47 : CLK_COR_MIN_LAT_BINARY <= 6'b101111;
		48 : CLK_COR_MIN_LAT_BINARY <= 6'b110000;
		49 : CLK_COR_MIN_LAT_BINARY <= 6'b110001;
		50 : CLK_COR_MIN_LAT_BINARY <= 6'b110010;
		51 : CLK_COR_MIN_LAT_BINARY <= 6'b110011;
		52 : CLK_COR_MIN_LAT_BINARY <= 6'b110100;
		53 : CLK_COR_MIN_LAT_BINARY <= 6'b110101;
		54 : CLK_COR_MIN_LAT_BINARY <= 6'b110110;
		55 : CLK_COR_MIN_LAT_BINARY <= 6'b110111;
		56 : CLK_COR_MIN_LAT_BINARY <= 6'b111000;
		57 : CLK_COR_MIN_LAT_BINARY <= 6'b111001;
		58 : CLK_COR_MIN_LAT_BINARY <= 6'b111010;
		59 : CLK_COR_MIN_LAT_BINARY <= 6'b111011;
		60 : CLK_COR_MIN_LAT_BINARY <= 6'b111100;
		61 : CLK_COR_MIN_LAT_BINARY <= 6'b111101;
		62 : CLK_COR_MIN_LAT_BINARY <= 6'b111110;
		63 : CLK_COR_MIN_LAT_BINARY <= 6'b111111;
		default : begin
			$display("Attribute Syntax Error : The Attribute CLK_COR_MIN_LAT on X_GT10 instance %m is set to %d.  Legal values for this attribute are 0 to 63.", CLK_COR_MIN_LAT);
			$finish;
		end
	endcase

	case (CLK_COR_SEQ_2_USE)
		"FALSE" : CLK_COR_SEQ_2_USE_BINARY <= 0;
		"TRUE" : CLK_COR_SEQ_2_USE_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute CLK_COR_SEQ_2_USE on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", CLK_COR_SEQ_2_USE);
			$finish;
		end
	endcase

	case (CLK_COR_SEQ_DROP)
		"FALSE" : CLK_COR_SEQ_DROP_BINARY <= 0;
		"TRUE" : CLK_COR_SEQ_DROP_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute CLK_COR_SEQ_DROP on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", CLK_COR_SEQ_DROP);
			$finish;
		end
	endcase

	case (CLK_COR_SEQ_LEN)
		1 : CLK_COR_SEQ_LEN_BINARY <= 3'b000;
		2 : CLK_COR_SEQ_LEN_BINARY <= 3'b001;
		3 : CLK_COR_SEQ_LEN_BINARY <= 3'b010;
		4 : CLK_COR_SEQ_LEN_BINARY <= 3'b011;
		8 : CLK_COR_SEQ_LEN_BINARY <= 3'b111;
		default : begin
			$display("Attribute Syntax Error : The Attribute CLK_COR_SEQ_LEN on X_GT10 instance %m is set to %d.  Legal values for this attribute are 1, 2, 3, 4 or 8.", CLK_COR_SEQ_LEN);
			$finish;
		end
	endcase

	case (CLK_CORRECT_USE)
		"FALSE" : CLK_CORRECT_USE_BINARY <= 0;
		"TRUE" : CLK_CORRECT_USE_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute CLK_CORRECT_USE on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", CLK_CORRECT_USE);
			$finish;
		end
	endcase

	case (DEC_MCOMMA_DETECT)
		"FALSE" : DEC_MCOMMA_DETECT_BINARY <= 0;
		"TRUE" : DEC_MCOMMA_DETECT_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute DEC_MCOMMA_DETECT on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", DEC_MCOMMA_DETECT);
			$finish;
		end
	endcase

	case (DEC_PCOMMA_DETECT)
		"FALSE" : DEC_PCOMMA_DETECT_BINARY <= 0;
		"TRUE" : DEC_PCOMMA_DETECT_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute DEC_PCOMMA_DETECT on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", DEC_PCOMMA_DETECT);
			$finish;
		end
	endcase

	case (DEC_VALID_COMMA_ONLY)
		"FALSE" : DEC_VALID_COMMA_ONLY_BINARY <= 0;
		"TRUE" : DEC_VALID_COMMA_ONLY_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute DEC_VALID_COMMA_ONLY on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", DEC_VALID_COMMA_ONLY);
			$finish;
		end
	endcase

	case (MCOMMA_DETECT)
		"FALSE" : MCOMMA_DETECT_BINARY <= 0;
		"TRUE" : MCOMMA_DETECT_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute MCOMMA_DETECT on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", MCOMMA_DETECT);
			$finish;
		end
	endcase

	case (PCOMMA_DETECT)
		"FALSE" : PCOMMA_DETECT_BINARY <= 0;
		"TRUE" : PCOMMA_DETECT_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute PCOMMA_DETECT on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", PCOMMA_DETECT);
			$finish;
		end
	endcase

	case (PMA_SPEED)
		"0_32" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d00208c9050d4068;
		"0_64" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d00208c9050d4068;
		"1_32" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d10208c9050d4168;
		"1_64" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d10208c9050d4168;
		"2_32" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d40208c9060d4468;
		"2_64" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d40208c9060d4468;
		"3_32" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d50208c9060d4568;
		"3_64" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d50208c9060d4568;
		"4_32" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d80208c9020d4868;
		"4_64" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d80208c9020d4868;
		"5_32" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d90208c9020d4968;
		"5_64" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1504d90208c9020d4968;
		"6_32" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d00208c9050d4068;
		"6_64" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d00208c9050d4068;
		"7_32" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d10208c9050d4168;
		"7_64" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d10208c9050d4168;
		"8_32" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d40208c9050d4468;
		"8_64" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d40208c9050d4468;
		"9_32" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d50208c9050d4568;
		"9_64" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d50208c9050d4568;
		"10_32" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d80208c9020d4868;
		"10_64" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d80208c9020d4868;
		"11_32" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d90208c9020d4968;
		"11_64" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504d90208c9020d4968;
		"12_40" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1506e20208c9050da268;
		"12_80" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1506e20208c9050da268;
		"13_40" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1506e60208c9050da668;
		"13_80" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1506e60208c9050da668;
		"14_40" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1506ea0208c9020daa68;
		"14_80" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1506ea0208c9020daa68;
		"15_32" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504c00208c9050d0068;
		"15_64" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504c00208c9050d0068;
		"16_32" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504c40208c9050d0468;
		"16_64" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504c40208c9050d0468;
		"17_32" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504c80208c9010d0868;
		"17_64" : PMA_SPEED_BINARY <= 120'h00ffcd54ca1504c80208c9010d0868;
		"18_40" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1106e21208c9050da228;
		"18_80" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1106e21208c9050da228;
		"19_40" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1106e21208c9050da228;
		"19_80" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1106e21208c9050da228;
		"20_40" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1106e21208c9050da228;
		"20_80" : PMA_SPEED_BINARY <= 120'h00ffcd50ca1106e21208c9050da228;
		"21_40" : PMA_SPEED_BINARY <= 120'h00ffcd50ca0d06e21208c9050da228;
		"21_80" : PMA_SPEED_BINARY <= 120'h00ffcd50ca0d06e21208c9050da228;
		"22_40" : PMA_SPEED_BINARY <= 120'h00ffcd50ca0d06e61208c9010da628;
		"22_80" : PMA_SPEED_BINARY <= 120'h00ffcd50ca0d06e61208c9010da628;
		"23_10" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132263068090104a628;
		"23_20" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132663068090105a628;
		"23_40" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132663068090105a628;
		"24_10" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132223068090504a228;
		"24_20" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132623068090505a228;
		"24_40" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132623068090505a228;
		"25_10" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132263068090104a628;
		"25_20" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132663068090105a628;
		"25_40" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132663068090105a628;
		"26_10" : PMA_SPEED_BINARY <= 120'h00ffcd500b01322a3068090104aa28;
		"26_20" : PMA_SPEED_BINARY <= 120'h00ffcd500b01326a3068090105aa28;
		"26_40" : PMA_SPEED_BINARY <= 120'h00ffcd500b01326a3068090105aa28;
		"27_10" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132223068090504a220;
		"27_20" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132623068090505a220;
		"27_40" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132623068090505a220;
		"28_10" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132263068090104a620;
		"28_20" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132663068090105a620;
		"28_40" : PMA_SPEED_BINARY <= 120'h00ffcd500b0132663068090105a620;
		"29_10" : PMA_SPEED_BINARY <= 120'h00ffcd500b01322a3068090104aa20;
		"29_20" : PMA_SPEED_BINARY <= 120'h00ffcd500b01326a3068090105aa20;
		"29_40" : PMA_SPEED_BINARY <= 120'h00ffcd500b01326a3068090105aa20;
		"30_16" : PMA_SPEED_BINARY <= 120'h00ffcd500b01304430680901050420;
		"30_32" : PMA_SPEED_BINARY <= 120'h00ffcd500b01304430680901050420;
		"30_8" : PMA_SPEED_BINARY <= 120'h00ffcd500b01300430680901040420;
		"31_16" : PMA_SPEED_BINARY <= 120'h00ffcd500b01304830680901050820;
		"31_32" : PMA_SPEED_BINARY <= 120'h00ffcd500b01304830680901050820;
		"31_8" : PMA_SPEED_BINARY <= 120'h00ffcd500b01300830680901040820;
		default : begin
			$display("Attribute Syntax Error : The Attribute PMA_SPEED on X_GT10 instance %m is set to %s.  Legal values for this attribute are 0_32, 0_64, 1_32, 1_64, 2_32, 2_64, 3_32, 3_64, 4_32, 4_64, 5_32, 5_64, 6_32, 6_64, 7_32, 7_64, 8_32, 8_64, 9_32, 9_64, 10_32, 10_64, 11_32, 11_64, 12_40, 12_80, 13_40, 13_80, 14_40, 14_80, 15_32, 15_64, 16_32, 16_64, 17_32, 17_64, 18_40, 18_80, 19_40, 19_80, 20_40, 20_80, 21_40, 21_80, 22_40, 22_80, 23_10, 23_20, 23_40, 24_10, 24_20, 24_40, 25_10, 25_20, 25_40, 26_10, 26_20, 26_40, 27_10, 27_20, 27_40, 28_10, 28_20, 28_40, 29_10, 29_20, 29_40, 30_16, 30_32, 30_8, 31_16, 31_32 or 31_8.", PMA_SPEED);
			$finish;
		end
	endcase

	case (RX_BUFFER_USE)
		"FALSE" : RX_BUFFER_USE_BINARY <= 0;
		"TRUE" : RX_BUFFER_USE_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute RX_BUFFER_USE on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", RX_BUFFER_USE);
			$finish;
		end
	endcase

	case (RX_LOS_INVALID_INCR)
		1 : RX_LOS_INVALID_INCR_BINARY <= 8'b00000001;
		2 : RX_LOS_INVALID_INCR_BINARY <= 8'b00000010;
		4 : RX_LOS_INVALID_INCR_BINARY <= 8'b00000100;
		8 : RX_LOS_INVALID_INCR_BINARY <= 8'b00001000;
		16 : RX_LOS_INVALID_INCR_BINARY <= 8'b00010000;
		32 : RX_LOS_INVALID_INCR_BINARY <= 8'b00100000;
		64 : RX_LOS_INVALID_INCR_BINARY <= 8'b01000000;
		128 : RX_LOS_INVALID_INCR_BINARY <= 8'b10000000;
		default : begin
			$display("Attribute Syntax Error : The Attribute RX_LOS_INVALID_INCR on X_GT10 instance %m is set to %d.  Legal values for this attribute are 1, 2, 4, 8, 16, 32, 64 or 128.", RX_LOS_INVALID_INCR);
			$finish;
		end
	endcase

	case (RX_LOS_THRESHOLD)
		4 : RX_LOS_THRESHOLD_BINARY <= 8'b00000001;
		8 : RX_LOS_THRESHOLD_BINARY <= 8'b00000010;
		16 : RX_LOS_THRESHOLD_BINARY <= 8'b00000100;
		32 : RX_LOS_THRESHOLD_BINARY <= 8'b00001000;
		64 : RX_LOS_THRESHOLD_BINARY <= 8'b00010000;
		128 : RX_LOS_THRESHOLD_BINARY <= 8'b00100000;
		256 : RX_LOS_THRESHOLD_BINARY <= 8'b01000000;
		512 : RX_LOS_THRESHOLD_BINARY <= 8'b10000000;
		default : begin
			$display("Attribute Syntax Error : The Attribute RX_LOS_THRESHOLD on X_GT10 instance %m is set to %d.  Legal values for this attribute are 4, 8, 16, 32, 64, 128, 256 or 512.", RX_LOS_THRESHOLD);
			$finish;
		end
	endcase

	case (RX_LOSS_OF_SYNC_FSM)
		"FALSE" : RX_LOSS_OF_SYNC_FSM_BINARY <= 0;
		"TRUE" : RX_LOSS_OF_SYNC_FSM_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute RX_LOSS_OF_SYNC_FSM on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", RX_LOSS_OF_SYNC_FSM);
			$finish;
		end
	endcase

	case (SH_CNT_MAX)
		0 : SH_CNT_MAX_BINARY <= 8'b00000000;
		1 : SH_CNT_MAX_BINARY <= 8'b00000001;
		2 : SH_CNT_MAX_BINARY <= 8'b00000010;
		3 : SH_CNT_MAX_BINARY <= 8'b00000011;
		4 : SH_CNT_MAX_BINARY <= 8'b00000100;
		5 : SH_CNT_MAX_BINARY <= 8'b00000101;
		6 : SH_CNT_MAX_BINARY <= 8'b00000110;
		7 : SH_CNT_MAX_BINARY <= 8'b00000111;
		8 : SH_CNT_MAX_BINARY <= 8'b00001000;
		9 : SH_CNT_MAX_BINARY <= 8'b00001001;
		10 : SH_CNT_MAX_BINARY <= 8'b00001010;
		11 : SH_CNT_MAX_BINARY <= 8'b00001011;
		12 : SH_CNT_MAX_BINARY <= 8'b00001100;
		13 : SH_CNT_MAX_BINARY <= 8'b00001101;
		14 : SH_CNT_MAX_BINARY <= 8'b00001110;
		15 : SH_CNT_MAX_BINARY <= 8'b00001111;
		16 : SH_CNT_MAX_BINARY <= 8'b00010000;
		17 : SH_CNT_MAX_BINARY <= 8'b00010001;
		18 : SH_CNT_MAX_BINARY <= 8'b00010010;
		19 : SH_CNT_MAX_BINARY <= 8'b00010011;
		20 : SH_CNT_MAX_BINARY <= 8'b00010100;
		21 : SH_CNT_MAX_BINARY <= 8'b00010101;
		22 : SH_CNT_MAX_BINARY <= 8'b00010110;
		23 : SH_CNT_MAX_BINARY <= 8'b00010111;
		24 : SH_CNT_MAX_BINARY <= 8'b00011000;
		25 : SH_CNT_MAX_BINARY <= 8'b00011001;
		26 : SH_CNT_MAX_BINARY <= 8'b00011010;
		27 : SH_CNT_MAX_BINARY <= 8'b00011011;
		28 : SH_CNT_MAX_BINARY <= 8'b00011100;
		29 : SH_CNT_MAX_BINARY <= 8'b00011101;
		30 : SH_CNT_MAX_BINARY <= 8'b00011110;
		31 : SH_CNT_MAX_BINARY <= 8'b00011111;
		32 : SH_CNT_MAX_BINARY <= 8'b00100000;
		33 : SH_CNT_MAX_BINARY <= 8'b00100001;
		34 : SH_CNT_MAX_BINARY <= 8'b00100010;
		35 : SH_CNT_MAX_BINARY <= 8'b00100011;
		36 : SH_CNT_MAX_BINARY <= 8'b00100100;
		37 : SH_CNT_MAX_BINARY <= 8'b00100101;
		38 : SH_CNT_MAX_BINARY <= 8'b00100110;
		39 : SH_CNT_MAX_BINARY <= 8'b00100111;
		40 : SH_CNT_MAX_BINARY <= 8'b00101000;
		41 : SH_CNT_MAX_BINARY <= 8'b00101001;
		42 : SH_CNT_MAX_BINARY <= 8'b00101010;
		43 : SH_CNT_MAX_BINARY <= 8'b00101011;
		44 : SH_CNT_MAX_BINARY <= 8'b00101100;
		45 : SH_CNT_MAX_BINARY <= 8'b00101101;
		46 : SH_CNT_MAX_BINARY <= 8'b00101110;
		47 : SH_CNT_MAX_BINARY <= 8'b00101111;
		48 : SH_CNT_MAX_BINARY <= 8'b00110000;
		49 : SH_CNT_MAX_BINARY <= 8'b00110001;
		50 : SH_CNT_MAX_BINARY <= 8'b00110010;
		51 : SH_CNT_MAX_BINARY <= 8'b00110011;
		52 : SH_CNT_MAX_BINARY <= 8'b00110100;
		53 : SH_CNT_MAX_BINARY <= 8'b00110101;
		54 : SH_CNT_MAX_BINARY <= 8'b00110110;
		55 : SH_CNT_MAX_BINARY <= 8'b00110111;
		56 : SH_CNT_MAX_BINARY <= 8'b00111000;
		57 : SH_CNT_MAX_BINARY <= 8'b00111001;
		58 : SH_CNT_MAX_BINARY <= 8'b00111010;
		59 : SH_CNT_MAX_BINARY <= 8'b00111011;
		60 : SH_CNT_MAX_BINARY <= 8'b00111100;
		61 : SH_CNT_MAX_BINARY <= 8'b00111101;
		62 : SH_CNT_MAX_BINARY <= 8'b00111110;
		63 : SH_CNT_MAX_BINARY <= 8'b00111111;
		64 : SH_CNT_MAX_BINARY <= 8'b01000000;
		65 : SH_CNT_MAX_BINARY <= 8'b01000001;
		66 : SH_CNT_MAX_BINARY <= 8'b01000010;
		67 : SH_CNT_MAX_BINARY <= 8'b01000011;
		68 : SH_CNT_MAX_BINARY <= 8'b01000100;
		69 : SH_CNT_MAX_BINARY <= 8'b01000101;
		70 : SH_CNT_MAX_BINARY <= 8'b01000110;
		71 : SH_CNT_MAX_BINARY <= 8'b01000111;
		72 : SH_CNT_MAX_BINARY <= 8'b01001000;
		73 : SH_CNT_MAX_BINARY <= 8'b01001001;
		74 : SH_CNT_MAX_BINARY <= 8'b01001010;
		75 : SH_CNT_MAX_BINARY <= 8'b01001011;
		76 : SH_CNT_MAX_BINARY <= 8'b01001100;
		77 : SH_CNT_MAX_BINARY <= 8'b01001101;
		78 : SH_CNT_MAX_BINARY <= 8'b01001110;
		79 : SH_CNT_MAX_BINARY <= 8'b01001111;
		80 : SH_CNT_MAX_BINARY <= 8'b01010000;
		81 : SH_CNT_MAX_BINARY <= 8'b01010001;
		82 : SH_CNT_MAX_BINARY <= 8'b01010010;
		83 : SH_CNT_MAX_BINARY <= 8'b01010011;
		84 : SH_CNT_MAX_BINARY <= 8'b01010100;
		85 : SH_CNT_MAX_BINARY <= 8'b01010101;
		86 : SH_CNT_MAX_BINARY <= 8'b01010110;
		87 : SH_CNT_MAX_BINARY <= 8'b01010111;
		88 : SH_CNT_MAX_BINARY <= 8'b01011000;
		89 : SH_CNT_MAX_BINARY <= 8'b01011001;
		90 : SH_CNT_MAX_BINARY <= 8'b01011010;
		91 : SH_CNT_MAX_BINARY <= 8'b01011011;
		92 : SH_CNT_MAX_BINARY <= 8'b01011100;
		93 : SH_CNT_MAX_BINARY <= 8'b01011101;
		94 : SH_CNT_MAX_BINARY <= 8'b01011110;
		95 : SH_CNT_MAX_BINARY <= 8'b01011111;
		96 : SH_CNT_MAX_BINARY <= 8'b01100000;
		97 : SH_CNT_MAX_BINARY <= 8'b01100001;
		98 : SH_CNT_MAX_BINARY <= 8'b01100010;
		99 : SH_CNT_MAX_BINARY <= 8'b01100011;
		100 : SH_CNT_MAX_BINARY <= 8'b01100100;
		101 : SH_CNT_MAX_BINARY <= 8'b01100101;
		102 : SH_CNT_MAX_BINARY <= 8'b01100110;
		103 : SH_CNT_MAX_BINARY <= 8'b01100111;
		104 : SH_CNT_MAX_BINARY <= 8'b01101000;
		105 : SH_CNT_MAX_BINARY <= 8'b01101001;
		106 : SH_CNT_MAX_BINARY <= 8'b01101010;
		107 : SH_CNT_MAX_BINARY <= 8'b01101011;
		108 : SH_CNT_MAX_BINARY <= 8'b01101100;
		109 : SH_CNT_MAX_BINARY <= 8'b01101101;
		110 : SH_CNT_MAX_BINARY <= 8'b01101110;
		111 : SH_CNT_MAX_BINARY <= 8'b01101111;
		112 : SH_CNT_MAX_BINARY <= 8'b01110000;
		113 : SH_CNT_MAX_BINARY <= 8'b01110001;
		114 : SH_CNT_MAX_BINARY <= 8'b01110010;
		115 : SH_CNT_MAX_BINARY <= 8'b01110011;
		116 : SH_CNT_MAX_BINARY <= 8'b01110100;
		117 : SH_CNT_MAX_BINARY <= 8'b01110101;
		118 : SH_CNT_MAX_BINARY <= 8'b01110110;
		119 : SH_CNT_MAX_BINARY <= 8'b01110111;
		120 : SH_CNT_MAX_BINARY <= 8'b01111000;
		121 : SH_CNT_MAX_BINARY <= 8'b01111001;
		122 : SH_CNT_MAX_BINARY <= 8'b01111010;
		123 : SH_CNT_MAX_BINARY <= 8'b01111011;
		124 : SH_CNT_MAX_BINARY <= 8'b01111100;
		125 : SH_CNT_MAX_BINARY <= 8'b01111101;
		126 : SH_CNT_MAX_BINARY <= 8'b01111110;
		127 : SH_CNT_MAX_BINARY <= 8'b01111111;
		128 : SH_CNT_MAX_BINARY <= 8'b10000000;
		129 : SH_CNT_MAX_BINARY <= 8'b10000001;
		130 : SH_CNT_MAX_BINARY <= 8'b10000010;
		131 : SH_CNT_MAX_BINARY <= 8'b10000011;
		132 : SH_CNT_MAX_BINARY <= 8'b10000100;
		133 : SH_CNT_MAX_BINARY <= 8'b10000101;
		134 : SH_CNT_MAX_BINARY <= 8'b10000110;
		135 : SH_CNT_MAX_BINARY <= 8'b10000111;
		136 : SH_CNT_MAX_BINARY <= 8'b10001000;
		137 : SH_CNT_MAX_BINARY <= 8'b10001001;
		138 : SH_CNT_MAX_BINARY <= 8'b10001010;
		139 : SH_CNT_MAX_BINARY <= 8'b10001011;
		140 : SH_CNT_MAX_BINARY <= 8'b10001100;
		141 : SH_CNT_MAX_BINARY <= 8'b10001101;
		142 : SH_CNT_MAX_BINARY <= 8'b10001110;
		143 : SH_CNT_MAX_BINARY <= 8'b10001111;
		144 : SH_CNT_MAX_BINARY <= 8'b10010000;
		145 : SH_CNT_MAX_BINARY <= 8'b10010001;
		146 : SH_CNT_MAX_BINARY <= 8'b10010010;
		147 : SH_CNT_MAX_BINARY <= 8'b10010011;
		148 : SH_CNT_MAX_BINARY <= 8'b10010100;
		149 : SH_CNT_MAX_BINARY <= 8'b10010101;
		150 : SH_CNT_MAX_BINARY <= 8'b10010110;
		151 : SH_CNT_MAX_BINARY <= 8'b10010111;
		152 : SH_CNT_MAX_BINARY <= 8'b10011000;
		153 : SH_CNT_MAX_BINARY <= 8'b10011001;
		154 : SH_CNT_MAX_BINARY <= 8'b10011010;
		155 : SH_CNT_MAX_BINARY <= 8'b10011011;
		156 : SH_CNT_MAX_BINARY <= 8'b10011100;
		157 : SH_CNT_MAX_BINARY <= 8'b10011101;
		158 : SH_CNT_MAX_BINARY <= 8'b10011110;
		159 : SH_CNT_MAX_BINARY <= 8'b10011111;
		160 : SH_CNT_MAX_BINARY <= 8'b10100000;
		161 : SH_CNT_MAX_BINARY <= 8'b10100001;
		162 : SH_CNT_MAX_BINARY <= 8'b10100010;
		163 : SH_CNT_MAX_BINARY <= 8'b10100011;
		164 : SH_CNT_MAX_BINARY <= 8'b10100100;
		165 : SH_CNT_MAX_BINARY <= 8'b10100101;
		166 : SH_CNT_MAX_BINARY <= 8'b10100110;
		167 : SH_CNT_MAX_BINARY <= 8'b10100111;
		168 : SH_CNT_MAX_BINARY <= 8'b10101000;
		169 : SH_CNT_MAX_BINARY <= 8'b10101001;
		170 : SH_CNT_MAX_BINARY <= 8'b10101010;
		171 : SH_CNT_MAX_BINARY <= 8'b10101011;
		172 : SH_CNT_MAX_BINARY <= 8'b10101100;
		173 : SH_CNT_MAX_BINARY <= 8'b10101101;
		174 : SH_CNT_MAX_BINARY <= 8'b10101110;
		175 : SH_CNT_MAX_BINARY <= 8'b10101111;
		176 : SH_CNT_MAX_BINARY <= 8'b10110000;
		177 : SH_CNT_MAX_BINARY <= 8'b10110001;
		178 : SH_CNT_MAX_BINARY <= 8'b10110010;
		179 : SH_CNT_MAX_BINARY <= 8'b10110011;
		180 : SH_CNT_MAX_BINARY <= 8'b10110100;
		181 : SH_CNT_MAX_BINARY <= 8'b10110101;
		182 : SH_CNT_MAX_BINARY <= 8'b10110110;
		183 : SH_CNT_MAX_BINARY <= 8'b10110111;
		184 : SH_CNT_MAX_BINARY <= 8'b10111000;
		185 : SH_CNT_MAX_BINARY <= 8'b10111001;
		186 : SH_CNT_MAX_BINARY <= 8'b10111010;
		187 : SH_CNT_MAX_BINARY <= 8'b10111011;
		188 : SH_CNT_MAX_BINARY <= 8'b10111100;
		189 : SH_CNT_MAX_BINARY <= 8'b10111101;
		190 : SH_CNT_MAX_BINARY <= 8'b10111110;
		191 : SH_CNT_MAX_BINARY <= 8'b10111111;
		192 : SH_CNT_MAX_BINARY <= 8'b11000000;
		193 : SH_CNT_MAX_BINARY <= 8'b11000001;
		194 : SH_CNT_MAX_BINARY <= 8'b11000010;
		195 : SH_CNT_MAX_BINARY <= 8'b11000011;
		196 : SH_CNT_MAX_BINARY <= 8'b11000100;
		197 : SH_CNT_MAX_BINARY <= 8'b11000101;
		198 : SH_CNT_MAX_BINARY <= 8'b11000110;
		199 : SH_CNT_MAX_BINARY <= 8'b11000111;
		200 : SH_CNT_MAX_BINARY <= 8'b11001000;
		201 : SH_CNT_MAX_BINARY <= 8'b11001001;
		202 : SH_CNT_MAX_BINARY <= 8'b11001010;
		203 : SH_CNT_MAX_BINARY <= 8'b11001011;
		204 : SH_CNT_MAX_BINARY <= 8'b11001100;
		205 : SH_CNT_MAX_BINARY <= 8'b11001101;
		206 : SH_CNT_MAX_BINARY <= 8'b11001110;
		207 : SH_CNT_MAX_BINARY <= 8'b11001111;
		208 : SH_CNT_MAX_BINARY <= 8'b11010000;
		209 : SH_CNT_MAX_BINARY <= 8'b11010001;
		210 : SH_CNT_MAX_BINARY <= 8'b11010010;
		211 : SH_CNT_MAX_BINARY <= 8'b11010011;
		212 : SH_CNT_MAX_BINARY <= 8'b11010100;
		213 : SH_CNT_MAX_BINARY <= 8'b11010101;
		214 : SH_CNT_MAX_BINARY <= 8'b11010110;
		215 : SH_CNT_MAX_BINARY <= 8'b11010111;
		216 : SH_CNT_MAX_BINARY <= 8'b11011000;
		217 : SH_CNT_MAX_BINARY <= 8'b11011001;
		218 : SH_CNT_MAX_BINARY <= 8'b11011010;
		219 : SH_CNT_MAX_BINARY <= 8'b11011011;
		220 : SH_CNT_MAX_BINARY <= 8'b11011100;
		221 : SH_CNT_MAX_BINARY <= 8'b11011101;
		222 : SH_CNT_MAX_BINARY <= 8'b11011110;
		223 : SH_CNT_MAX_BINARY <= 8'b11011111;
		224 : SH_CNT_MAX_BINARY <= 8'b11100000;
		225 : SH_CNT_MAX_BINARY <= 8'b11100001;
		226 : SH_CNT_MAX_BINARY <= 8'b11100010;
		227 : SH_CNT_MAX_BINARY <= 8'b11100011;
		228 : SH_CNT_MAX_BINARY <= 8'b11100100;
		229 : SH_CNT_MAX_BINARY <= 8'b11100101;
		230 : SH_CNT_MAX_BINARY <= 8'b11100110;
		231 : SH_CNT_MAX_BINARY <= 8'b11100111;
		232 : SH_CNT_MAX_BINARY <= 8'b11101000;
		233 : SH_CNT_MAX_BINARY <= 8'b11101001;
		234 : SH_CNT_MAX_BINARY <= 8'b11101010;
		235 : SH_CNT_MAX_BINARY <= 8'b11101011;
		236 : SH_CNT_MAX_BINARY <= 8'b11101100;
		237 : SH_CNT_MAX_BINARY <= 8'b11101101;
		238 : SH_CNT_MAX_BINARY <= 8'b11101110;
		239 : SH_CNT_MAX_BINARY <= 8'b11101111;
		240 : SH_CNT_MAX_BINARY <= 8'b11110000;
		241 : SH_CNT_MAX_BINARY <= 8'b11110001;
		242 : SH_CNT_MAX_BINARY <= 8'b11110010;
		243 : SH_CNT_MAX_BINARY <= 8'b11110011;
		244 : SH_CNT_MAX_BINARY <= 8'b11110100;
		245 : SH_CNT_MAX_BINARY <= 8'b11110101;
		246 : SH_CNT_MAX_BINARY <= 8'b11110110;
		247 : SH_CNT_MAX_BINARY <= 8'b11110111;
		248 : SH_CNT_MAX_BINARY <= 8'b11111000;
		249 : SH_CNT_MAX_BINARY <= 8'b11111001;
		250 : SH_CNT_MAX_BINARY <= 8'b11111010;
		251 : SH_CNT_MAX_BINARY <= 8'b11111011;
		252 : SH_CNT_MAX_BINARY <= 8'b11111100;
		253 : SH_CNT_MAX_BINARY <= 8'b11111101;
		254 : SH_CNT_MAX_BINARY <= 8'b11111110;
		255 : SH_CNT_MAX_BINARY <= 8'b11111111;
		default : begin
			$display("Attribute Syntax Error : The Attribute SH_CNT_MAX on X_GT10 instance %m is set to %d.  Legal values for this attribute are 0 to 255.", SH_CNT_MAX);
			$finish;
		end
	endcase

	case (SH_INVALID_CNT_MAX)
		0 : SH_INVALID_CNT_MAX_BINARY <= 8'b00000000;
		1 : SH_INVALID_CNT_MAX_BINARY <= 8'b00000001;
		2 : SH_INVALID_CNT_MAX_BINARY <= 8'b00000010;
		3 : SH_INVALID_CNT_MAX_BINARY <= 8'b00000011;
		4 : SH_INVALID_CNT_MAX_BINARY <= 8'b00000100;
		5 : SH_INVALID_CNT_MAX_BINARY <= 8'b00000101;
		6 : SH_INVALID_CNT_MAX_BINARY <= 8'b00000110;
		7 : SH_INVALID_CNT_MAX_BINARY <= 8'b00000111;
		8 : SH_INVALID_CNT_MAX_BINARY <= 8'b00001000;
		9 : SH_INVALID_CNT_MAX_BINARY <= 8'b00001001;
		10 : SH_INVALID_CNT_MAX_BINARY <= 8'b00001010;
		11 : SH_INVALID_CNT_MAX_BINARY <= 8'b00001011;
		12 : SH_INVALID_CNT_MAX_BINARY <= 8'b00001100;
		13 : SH_INVALID_CNT_MAX_BINARY <= 8'b00001101;
		14 : SH_INVALID_CNT_MAX_BINARY <= 8'b00001110;
		15 : SH_INVALID_CNT_MAX_BINARY <= 8'b00001111;
		16 : SH_INVALID_CNT_MAX_BINARY <= 8'b00010000;
		17 : SH_INVALID_CNT_MAX_BINARY <= 8'b00010001;
		18 : SH_INVALID_CNT_MAX_BINARY <= 8'b00010010;
		19 : SH_INVALID_CNT_MAX_BINARY <= 8'b00010011;
		20 : SH_INVALID_CNT_MAX_BINARY <= 8'b00010100;
		21 : SH_INVALID_CNT_MAX_BINARY <= 8'b00010101;
		22 : SH_INVALID_CNT_MAX_BINARY <= 8'b00010110;
		23 : SH_INVALID_CNT_MAX_BINARY <= 8'b00010111;
		24 : SH_INVALID_CNT_MAX_BINARY <= 8'b00011000;
		25 : SH_INVALID_CNT_MAX_BINARY <= 8'b00011001;
		26 : SH_INVALID_CNT_MAX_BINARY <= 8'b00011010;
		27 : SH_INVALID_CNT_MAX_BINARY <= 8'b00011011;
		28 : SH_INVALID_CNT_MAX_BINARY <= 8'b00011100;
		29 : SH_INVALID_CNT_MAX_BINARY <= 8'b00011101;
		30 : SH_INVALID_CNT_MAX_BINARY <= 8'b00011110;
		31 : SH_INVALID_CNT_MAX_BINARY <= 8'b00011111;
		32 : SH_INVALID_CNT_MAX_BINARY <= 8'b00100000;
		33 : SH_INVALID_CNT_MAX_BINARY <= 8'b00100001;
		34 : SH_INVALID_CNT_MAX_BINARY <= 8'b00100010;
		35 : SH_INVALID_CNT_MAX_BINARY <= 8'b00100011;
		36 : SH_INVALID_CNT_MAX_BINARY <= 8'b00100100;
		37 : SH_INVALID_CNT_MAX_BINARY <= 8'b00100101;
		38 : SH_INVALID_CNT_MAX_BINARY <= 8'b00100110;
		39 : SH_INVALID_CNT_MAX_BINARY <= 8'b00100111;
		40 : SH_INVALID_CNT_MAX_BINARY <= 8'b00101000;
		41 : SH_INVALID_CNT_MAX_BINARY <= 8'b00101001;
		42 : SH_INVALID_CNT_MAX_BINARY <= 8'b00101010;
		43 : SH_INVALID_CNT_MAX_BINARY <= 8'b00101011;
		44 : SH_INVALID_CNT_MAX_BINARY <= 8'b00101100;
		45 : SH_INVALID_CNT_MAX_BINARY <= 8'b00101101;
		46 : SH_INVALID_CNT_MAX_BINARY <= 8'b00101110;
		47 : SH_INVALID_CNT_MAX_BINARY <= 8'b00101111;
		48 : SH_INVALID_CNT_MAX_BINARY <= 8'b00110000;
		49 : SH_INVALID_CNT_MAX_BINARY <= 8'b00110001;
		50 : SH_INVALID_CNT_MAX_BINARY <= 8'b00110010;
		51 : SH_INVALID_CNT_MAX_BINARY <= 8'b00110011;
		52 : SH_INVALID_CNT_MAX_BINARY <= 8'b00110100;
		53 : SH_INVALID_CNT_MAX_BINARY <= 8'b00110101;
		54 : SH_INVALID_CNT_MAX_BINARY <= 8'b00110110;
		55 : SH_INVALID_CNT_MAX_BINARY <= 8'b00110111;
		56 : SH_INVALID_CNT_MAX_BINARY <= 8'b00111000;
		57 : SH_INVALID_CNT_MAX_BINARY <= 8'b00111001;
		58 : SH_INVALID_CNT_MAX_BINARY <= 8'b00111010;
		59 : SH_INVALID_CNT_MAX_BINARY <= 8'b00111011;
		60 : SH_INVALID_CNT_MAX_BINARY <= 8'b00111100;
		61 : SH_INVALID_CNT_MAX_BINARY <= 8'b00111101;
		62 : SH_INVALID_CNT_MAX_BINARY <= 8'b00111110;
		63 : SH_INVALID_CNT_MAX_BINARY <= 8'b00111111;
		64 : SH_INVALID_CNT_MAX_BINARY <= 8'b01000000;
		65 : SH_INVALID_CNT_MAX_BINARY <= 8'b01000001;
		66 : SH_INVALID_CNT_MAX_BINARY <= 8'b01000010;
		67 : SH_INVALID_CNT_MAX_BINARY <= 8'b01000011;
		68 : SH_INVALID_CNT_MAX_BINARY <= 8'b01000100;
		69 : SH_INVALID_CNT_MAX_BINARY <= 8'b01000101;
		70 : SH_INVALID_CNT_MAX_BINARY <= 8'b01000110;
		71 : SH_INVALID_CNT_MAX_BINARY <= 8'b01000111;
		72 : SH_INVALID_CNT_MAX_BINARY <= 8'b01001000;
		73 : SH_INVALID_CNT_MAX_BINARY <= 8'b01001001;
		74 : SH_INVALID_CNT_MAX_BINARY <= 8'b01001010;
		75 : SH_INVALID_CNT_MAX_BINARY <= 8'b01001011;
		76 : SH_INVALID_CNT_MAX_BINARY <= 8'b01001100;
		77 : SH_INVALID_CNT_MAX_BINARY <= 8'b01001101;
		78 : SH_INVALID_CNT_MAX_BINARY <= 8'b01001110;
		79 : SH_INVALID_CNT_MAX_BINARY <= 8'b01001111;
		80 : SH_INVALID_CNT_MAX_BINARY <= 8'b01010000;
		81 : SH_INVALID_CNT_MAX_BINARY <= 8'b01010001;
		82 : SH_INVALID_CNT_MAX_BINARY <= 8'b01010010;
		83 : SH_INVALID_CNT_MAX_BINARY <= 8'b01010011;
		84 : SH_INVALID_CNT_MAX_BINARY <= 8'b01010100;
		85 : SH_INVALID_CNT_MAX_BINARY <= 8'b01010101;
		86 : SH_INVALID_CNT_MAX_BINARY <= 8'b01010110;
		87 : SH_INVALID_CNT_MAX_BINARY <= 8'b01010111;
		88 : SH_INVALID_CNT_MAX_BINARY <= 8'b01011000;
		89 : SH_INVALID_CNT_MAX_BINARY <= 8'b01011001;
		90 : SH_INVALID_CNT_MAX_BINARY <= 8'b01011010;
		91 : SH_INVALID_CNT_MAX_BINARY <= 8'b01011011;
		92 : SH_INVALID_CNT_MAX_BINARY <= 8'b01011100;
		93 : SH_INVALID_CNT_MAX_BINARY <= 8'b01011101;
		94 : SH_INVALID_CNT_MAX_BINARY <= 8'b01011110;
		95 : SH_INVALID_CNT_MAX_BINARY <= 8'b01011111;
		96 : SH_INVALID_CNT_MAX_BINARY <= 8'b01100000;
		97 : SH_INVALID_CNT_MAX_BINARY <= 8'b01100001;
		98 : SH_INVALID_CNT_MAX_BINARY <= 8'b01100010;
		99 : SH_INVALID_CNT_MAX_BINARY <= 8'b01100011;
		100 : SH_INVALID_CNT_MAX_BINARY <= 8'b01100100;
		101 : SH_INVALID_CNT_MAX_BINARY <= 8'b01100101;
		102 : SH_INVALID_CNT_MAX_BINARY <= 8'b01100110;
		103 : SH_INVALID_CNT_MAX_BINARY <= 8'b01100111;
		104 : SH_INVALID_CNT_MAX_BINARY <= 8'b01101000;
		105 : SH_INVALID_CNT_MAX_BINARY <= 8'b01101001;
		106 : SH_INVALID_CNT_MAX_BINARY <= 8'b01101010;
		107 : SH_INVALID_CNT_MAX_BINARY <= 8'b01101011;
		108 : SH_INVALID_CNT_MAX_BINARY <= 8'b01101100;
		109 : SH_INVALID_CNT_MAX_BINARY <= 8'b01101101;
		110 : SH_INVALID_CNT_MAX_BINARY <= 8'b01101110;
		111 : SH_INVALID_CNT_MAX_BINARY <= 8'b01101111;
		112 : SH_INVALID_CNT_MAX_BINARY <= 8'b01110000;
		113 : SH_INVALID_CNT_MAX_BINARY <= 8'b01110001;
		114 : SH_INVALID_CNT_MAX_BINARY <= 8'b01110010;
		115 : SH_INVALID_CNT_MAX_BINARY <= 8'b01110011;
		116 : SH_INVALID_CNT_MAX_BINARY <= 8'b01110100;
		117 : SH_INVALID_CNT_MAX_BINARY <= 8'b01110101;
		118 : SH_INVALID_CNT_MAX_BINARY <= 8'b01110110;
		119 : SH_INVALID_CNT_MAX_BINARY <= 8'b01110111;
		120 : SH_INVALID_CNT_MAX_BINARY <= 8'b01111000;
		121 : SH_INVALID_CNT_MAX_BINARY <= 8'b01111001;
		122 : SH_INVALID_CNT_MAX_BINARY <= 8'b01111010;
		123 : SH_INVALID_CNT_MAX_BINARY <= 8'b01111011;
		124 : SH_INVALID_CNT_MAX_BINARY <= 8'b01111100;
		125 : SH_INVALID_CNT_MAX_BINARY <= 8'b01111101;
		126 : SH_INVALID_CNT_MAX_BINARY <= 8'b01111110;
		127 : SH_INVALID_CNT_MAX_BINARY <= 8'b01111111;
		128 : SH_INVALID_CNT_MAX_BINARY <= 8'b10000000;
		129 : SH_INVALID_CNT_MAX_BINARY <= 8'b10000001;
		130 : SH_INVALID_CNT_MAX_BINARY <= 8'b10000010;
		131 : SH_INVALID_CNT_MAX_BINARY <= 8'b10000011;
		132 : SH_INVALID_CNT_MAX_BINARY <= 8'b10000100;
		133 : SH_INVALID_CNT_MAX_BINARY <= 8'b10000101;
		134 : SH_INVALID_CNT_MAX_BINARY <= 8'b10000110;
		135 : SH_INVALID_CNT_MAX_BINARY <= 8'b10000111;
		136 : SH_INVALID_CNT_MAX_BINARY <= 8'b10001000;
		137 : SH_INVALID_CNT_MAX_BINARY <= 8'b10001001;
		138 : SH_INVALID_CNT_MAX_BINARY <= 8'b10001010;
		139 : SH_INVALID_CNT_MAX_BINARY <= 8'b10001011;
		140 : SH_INVALID_CNT_MAX_BINARY <= 8'b10001100;
		141 : SH_INVALID_CNT_MAX_BINARY <= 8'b10001101;
		142 : SH_INVALID_CNT_MAX_BINARY <= 8'b10001110;
		143 : SH_INVALID_CNT_MAX_BINARY <= 8'b10001111;
		144 : SH_INVALID_CNT_MAX_BINARY <= 8'b10010000;
		145 : SH_INVALID_CNT_MAX_BINARY <= 8'b10010001;
		146 : SH_INVALID_CNT_MAX_BINARY <= 8'b10010010;
		147 : SH_INVALID_CNT_MAX_BINARY <= 8'b10010011;
		148 : SH_INVALID_CNT_MAX_BINARY <= 8'b10010100;
		149 : SH_INVALID_CNT_MAX_BINARY <= 8'b10010101;
		150 : SH_INVALID_CNT_MAX_BINARY <= 8'b10010110;
		151 : SH_INVALID_CNT_MAX_BINARY <= 8'b10010111;
		152 : SH_INVALID_CNT_MAX_BINARY <= 8'b10011000;
		153 : SH_INVALID_CNT_MAX_BINARY <= 8'b10011001;
		154 : SH_INVALID_CNT_MAX_BINARY <= 8'b10011010;
		155 : SH_INVALID_CNT_MAX_BINARY <= 8'b10011011;
		156 : SH_INVALID_CNT_MAX_BINARY <= 8'b10011100;
		157 : SH_INVALID_CNT_MAX_BINARY <= 8'b10011101;
		158 : SH_INVALID_CNT_MAX_BINARY <= 8'b10011110;
		159 : SH_INVALID_CNT_MAX_BINARY <= 8'b10011111;
		160 : SH_INVALID_CNT_MAX_BINARY <= 8'b10100000;
		161 : SH_INVALID_CNT_MAX_BINARY <= 8'b10100001;
		162 : SH_INVALID_CNT_MAX_BINARY <= 8'b10100010;
		163 : SH_INVALID_CNT_MAX_BINARY <= 8'b10100011;
		164 : SH_INVALID_CNT_MAX_BINARY <= 8'b10100100;
		165 : SH_INVALID_CNT_MAX_BINARY <= 8'b10100101;
		166 : SH_INVALID_CNT_MAX_BINARY <= 8'b10100110;
		167 : SH_INVALID_CNT_MAX_BINARY <= 8'b10100111;
		168 : SH_INVALID_CNT_MAX_BINARY <= 8'b10101000;
		169 : SH_INVALID_CNT_MAX_BINARY <= 8'b10101001;
		170 : SH_INVALID_CNT_MAX_BINARY <= 8'b10101010;
		171 : SH_INVALID_CNT_MAX_BINARY <= 8'b10101011;
		172 : SH_INVALID_CNT_MAX_BINARY <= 8'b10101100;
		173 : SH_INVALID_CNT_MAX_BINARY <= 8'b10101101;
		174 : SH_INVALID_CNT_MAX_BINARY <= 8'b10101110;
		175 : SH_INVALID_CNT_MAX_BINARY <= 8'b10101111;
		176 : SH_INVALID_CNT_MAX_BINARY <= 8'b10110000;
		177 : SH_INVALID_CNT_MAX_BINARY <= 8'b10110001;
		178 : SH_INVALID_CNT_MAX_BINARY <= 8'b10110010;
		179 : SH_INVALID_CNT_MAX_BINARY <= 8'b10110011;
		180 : SH_INVALID_CNT_MAX_BINARY <= 8'b10110100;
		181 : SH_INVALID_CNT_MAX_BINARY <= 8'b10110101;
		182 : SH_INVALID_CNT_MAX_BINARY <= 8'b10110110;
		183 : SH_INVALID_CNT_MAX_BINARY <= 8'b10110111;
		184 : SH_INVALID_CNT_MAX_BINARY <= 8'b10111000;
		185 : SH_INVALID_CNT_MAX_BINARY <= 8'b10111001;
		186 : SH_INVALID_CNT_MAX_BINARY <= 8'b10111010;
		187 : SH_INVALID_CNT_MAX_BINARY <= 8'b10111011;
		188 : SH_INVALID_CNT_MAX_BINARY <= 8'b10111100;
		189 : SH_INVALID_CNT_MAX_BINARY <= 8'b10111101;
		190 : SH_INVALID_CNT_MAX_BINARY <= 8'b10111110;
		191 : SH_INVALID_CNT_MAX_BINARY <= 8'b10111111;
		192 : SH_INVALID_CNT_MAX_BINARY <= 8'b11000000;
		193 : SH_INVALID_CNT_MAX_BINARY <= 8'b11000001;
		194 : SH_INVALID_CNT_MAX_BINARY <= 8'b11000010;
		195 : SH_INVALID_CNT_MAX_BINARY <= 8'b11000011;
		196 : SH_INVALID_CNT_MAX_BINARY <= 8'b11000100;
		197 : SH_INVALID_CNT_MAX_BINARY <= 8'b11000101;
		198 : SH_INVALID_CNT_MAX_BINARY <= 8'b11000110;
		199 : SH_INVALID_CNT_MAX_BINARY <= 8'b11000111;
		200 : SH_INVALID_CNT_MAX_BINARY <= 8'b11001000;
		201 : SH_INVALID_CNT_MAX_BINARY <= 8'b11001001;
		202 : SH_INVALID_CNT_MAX_BINARY <= 8'b11001010;
		203 : SH_INVALID_CNT_MAX_BINARY <= 8'b11001011;
		204 : SH_INVALID_CNT_MAX_BINARY <= 8'b11001100;
		205 : SH_INVALID_CNT_MAX_BINARY <= 8'b11001101;
		206 : SH_INVALID_CNT_MAX_BINARY <= 8'b11001110;
		207 : SH_INVALID_CNT_MAX_BINARY <= 8'b11001111;
		208 : SH_INVALID_CNT_MAX_BINARY <= 8'b11010000;
		209 : SH_INVALID_CNT_MAX_BINARY <= 8'b11010001;
		210 : SH_INVALID_CNT_MAX_BINARY <= 8'b11010010;
		211 : SH_INVALID_CNT_MAX_BINARY <= 8'b11010011;
		212 : SH_INVALID_CNT_MAX_BINARY <= 8'b11010100;
		213 : SH_INVALID_CNT_MAX_BINARY <= 8'b11010101;
		214 : SH_INVALID_CNT_MAX_BINARY <= 8'b11010110;
		215 : SH_INVALID_CNT_MAX_BINARY <= 8'b11010111;
		216 : SH_INVALID_CNT_MAX_BINARY <= 8'b11011000;
		217 : SH_INVALID_CNT_MAX_BINARY <= 8'b11011001;
		218 : SH_INVALID_CNT_MAX_BINARY <= 8'b11011010;
		219 : SH_INVALID_CNT_MAX_BINARY <= 8'b11011011;
		220 : SH_INVALID_CNT_MAX_BINARY <= 8'b11011100;
		221 : SH_INVALID_CNT_MAX_BINARY <= 8'b11011101;
		222 : SH_INVALID_CNT_MAX_BINARY <= 8'b11011110;
		223 : SH_INVALID_CNT_MAX_BINARY <= 8'b11011111;
		224 : SH_INVALID_CNT_MAX_BINARY <= 8'b11100000;
		225 : SH_INVALID_CNT_MAX_BINARY <= 8'b11100001;
		226 : SH_INVALID_CNT_MAX_BINARY <= 8'b11100010;
		227 : SH_INVALID_CNT_MAX_BINARY <= 8'b11100011;
		228 : SH_INVALID_CNT_MAX_BINARY <= 8'b11100100;
		229 : SH_INVALID_CNT_MAX_BINARY <= 8'b11100101;
		230 : SH_INVALID_CNT_MAX_BINARY <= 8'b11100110;
		231 : SH_INVALID_CNT_MAX_BINARY <= 8'b11100111;
		232 : SH_INVALID_CNT_MAX_BINARY <= 8'b11101000;
		233 : SH_INVALID_CNT_MAX_BINARY <= 8'b11101001;
		234 : SH_INVALID_CNT_MAX_BINARY <= 8'b11101010;
		235 : SH_INVALID_CNT_MAX_BINARY <= 8'b11101011;
		236 : SH_INVALID_CNT_MAX_BINARY <= 8'b11101100;
		237 : SH_INVALID_CNT_MAX_BINARY <= 8'b11101101;
		238 : SH_INVALID_CNT_MAX_BINARY <= 8'b11101110;
		239 : SH_INVALID_CNT_MAX_BINARY <= 8'b11101111;
		240 : SH_INVALID_CNT_MAX_BINARY <= 8'b11110000;
		241 : SH_INVALID_CNT_MAX_BINARY <= 8'b11110001;
		242 : SH_INVALID_CNT_MAX_BINARY <= 8'b11110010;
		243 : SH_INVALID_CNT_MAX_BINARY <= 8'b11110011;
		244 : SH_INVALID_CNT_MAX_BINARY <= 8'b11110100;
		245 : SH_INVALID_CNT_MAX_BINARY <= 8'b11110101;
		246 : SH_INVALID_CNT_MAX_BINARY <= 8'b11110110;
		247 : SH_INVALID_CNT_MAX_BINARY <= 8'b11110111;
		248 : SH_INVALID_CNT_MAX_BINARY <= 8'b11111000;
		249 : SH_INVALID_CNT_MAX_BINARY <= 8'b11111001;
		250 : SH_INVALID_CNT_MAX_BINARY <= 8'b11111010;
		251 : SH_INVALID_CNT_MAX_BINARY <= 8'b11111011;
		252 : SH_INVALID_CNT_MAX_BINARY <= 8'b11111100;
		253 : SH_INVALID_CNT_MAX_BINARY <= 8'b11111101;
		254 : SH_INVALID_CNT_MAX_BINARY <= 8'b11111110;
		255 : SH_INVALID_CNT_MAX_BINARY <= 8'b11111111;
		default : begin
			$display("Attribute Syntax Error : The Attribute SH_INVALID_CNT_MAX on X_GT10 instance %m is set to %d.  Legal values for this attribute are 0 to 255.", SH_INVALID_CNT_MAX);
			$finish;
		end
	endcase

	case (TX_BUFFER_USE)
		"FALSE" : TX_BUFFER_USE_BINARY <= 0;
		"TRUE" : TX_BUFFER_USE_BINARY <= 1;
		default : begin
			$display("Attribute Syntax Error : The Attribute TX_BUFFER_USE on X_GT10 instance %m is set to %s.  Legal values for this attribute are TRUE or FALSE.", TX_BUFFER_USE);
			$finish;
		end
	endcase

end

buf B_CHBONDDONE (CHBONDDONE, CHBONDDONE_OUT);
buf B_CHBONDO0 (CHBONDO[0], CHBONDO_OUT[0]);
buf B_CHBONDO1 (CHBONDO[1], CHBONDO_OUT[1]);
buf B_CHBONDO2 (CHBONDO[2], CHBONDO_OUT[2]);
buf B_CHBONDO3 (CHBONDO[3], CHBONDO_OUT[3]);
buf B_CHBONDO4 (CHBONDO[4], CHBONDO_OUT[4]);
buf B_PMARXLOCK (PMARXLOCK, PMARXLOCK_OUT);
buf B_RXBUFSTATUS0 (RXBUFSTATUS[0], RXBUFSTATUS_OUT[0]);
buf B_RXBUFSTATUS1 (RXBUFSTATUS[1], RXBUFSTATUS_OUT[1]);
buf B_RXCHARISCOMMA0 (RXCHARISCOMMA[0], RXCHARISCOMMA_OUT[0]);
buf B_RXCHARISCOMMA1 (RXCHARISCOMMA[1], RXCHARISCOMMA_OUT[1]);
buf B_RXCHARISCOMMA2 (RXCHARISCOMMA[2], RXCHARISCOMMA_OUT[2]);
buf B_RXCHARISCOMMA3 (RXCHARISCOMMA[3], RXCHARISCOMMA_OUT[3]);
buf B_RXCHARISCOMMA4 (RXCHARISCOMMA[4], RXCHARISCOMMA_OUT[4]);
buf B_RXCHARISCOMMA5 (RXCHARISCOMMA[5], RXCHARISCOMMA_OUT[5]);
buf B_RXCHARISCOMMA6 (RXCHARISCOMMA[6], RXCHARISCOMMA_OUT[6]);
buf B_RXCHARISCOMMA7 (RXCHARISCOMMA[7], RXCHARISCOMMA_OUT[7]);
buf B_RXCHARISK0 (RXCHARISK[0], RXCHARISK_OUT[0]);
buf B_RXCHARISK1 (RXCHARISK[1], RXCHARISK_OUT[1]);
buf B_RXCHARISK2 (RXCHARISK[2], RXCHARISK_OUT[2]);
buf B_RXCHARISK3 (RXCHARISK[3], RXCHARISK_OUT[3]);
buf B_RXCHARISK4 (RXCHARISK[4], RXCHARISK_OUT[4]);
buf B_RXCHARISK5 (RXCHARISK[5], RXCHARISK_OUT[5]);
buf B_RXCHARISK6 (RXCHARISK[6], RXCHARISK_OUT[6]);
buf B_RXCHARISK7 (RXCHARISK[7], RXCHARISK_OUT[7]);
buf B_RXCLKCORCNT0 (RXCLKCORCNT[0], RXCLKCORCNT_OUT[0]);
buf B_RXCLKCORCNT1 (RXCLKCORCNT[1], RXCLKCORCNT_OUT[1]);
buf B_RXCLKCORCNT2 (RXCLKCORCNT[2], RXCLKCORCNT_OUT[2]);
buf B_RXCOMMADET (RXCOMMADET, RXCOMMADET_OUT);
buf B_RXDATA0 (RXDATA[0], RXDATA_OUT[0]);
buf B_RXDATA1 (RXDATA[1], RXDATA_OUT[1]);
buf B_RXDATA2 (RXDATA[2], RXDATA_OUT[2]);
buf B_RXDATA3 (RXDATA[3], RXDATA_OUT[3]);
buf B_RXDATA4 (RXDATA[4], RXDATA_OUT[4]);
buf B_RXDATA5 (RXDATA[5], RXDATA_OUT[5]);
buf B_RXDATA6 (RXDATA[6], RXDATA_OUT[6]);
buf B_RXDATA7 (RXDATA[7], RXDATA_OUT[7]);
buf B_RXDATA8 (RXDATA[8], RXDATA_OUT[8]);
buf B_RXDATA9 (RXDATA[9], RXDATA_OUT[9]);
buf B_RXDATA10 (RXDATA[10], RXDATA_OUT[10]);
buf B_RXDATA11 (RXDATA[11], RXDATA_OUT[11]);
buf B_RXDATA12 (RXDATA[12], RXDATA_OUT[12]);
buf B_RXDATA13 (RXDATA[13], RXDATA_OUT[13]);
buf B_RXDATA14 (RXDATA[14], RXDATA_OUT[14]);
buf B_RXDATA15 (RXDATA[15], RXDATA_OUT[15]);
buf B_RXDATA16 (RXDATA[16], RXDATA_OUT[16]);
buf B_RXDATA17 (RXDATA[17], RXDATA_OUT[17]);
buf B_RXDATA18 (RXDATA[18], RXDATA_OUT[18]);
buf B_RXDATA19 (RXDATA[19], RXDATA_OUT[19]);
buf B_RXDATA20 (RXDATA[20], RXDATA_OUT[20]);
buf B_RXDATA21 (RXDATA[21], RXDATA_OUT[21]);
buf B_RXDATA22 (RXDATA[22], RXDATA_OUT[22]);
buf B_RXDATA23 (RXDATA[23], RXDATA_OUT[23]);
buf B_RXDATA24 (RXDATA[24], RXDATA_OUT[24]);
buf B_RXDATA25 (RXDATA[25], RXDATA_OUT[25]);
buf B_RXDATA26 (RXDATA[26], RXDATA_OUT[26]);
buf B_RXDATA27 (RXDATA[27], RXDATA_OUT[27]);
buf B_RXDATA28 (RXDATA[28], RXDATA_OUT[28]);
buf B_RXDATA29 (RXDATA[29], RXDATA_OUT[29]);
buf B_RXDATA30 (RXDATA[30], RXDATA_OUT[30]);
buf B_RXDATA31 (RXDATA[31], RXDATA_OUT[31]);
buf B_RXDATA32 (RXDATA[32], RXDATA_OUT[32]);
buf B_RXDATA33 (RXDATA[33], RXDATA_OUT[33]);
buf B_RXDATA34 (RXDATA[34], RXDATA_OUT[34]);
buf B_RXDATA35 (RXDATA[35], RXDATA_OUT[35]);
buf B_RXDATA36 (RXDATA[36], RXDATA_OUT[36]);
buf B_RXDATA37 (RXDATA[37], RXDATA_OUT[37]);
buf B_RXDATA38 (RXDATA[38], RXDATA_OUT[38]);
buf B_RXDATA39 (RXDATA[39], RXDATA_OUT[39]);
buf B_RXDATA40 (RXDATA[40], RXDATA_OUT[40]);
buf B_RXDATA41 (RXDATA[41], RXDATA_OUT[41]);
buf B_RXDATA42 (RXDATA[42], RXDATA_OUT[42]);
buf B_RXDATA43 (RXDATA[43], RXDATA_OUT[43]);
buf B_RXDATA44 (RXDATA[44], RXDATA_OUT[44]);
buf B_RXDATA45 (RXDATA[45], RXDATA_OUT[45]);
buf B_RXDATA46 (RXDATA[46], RXDATA_OUT[46]);
buf B_RXDATA47 (RXDATA[47], RXDATA_OUT[47]);
buf B_RXDATA48 (RXDATA[48], RXDATA_OUT[48]);
buf B_RXDATA49 (RXDATA[49], RXDATA_OUT[49]);
buf B_RXDATA50 (RXDATA[50], RXDATA_OUT[50]);
buf B_RXDATA51 (RXDATA[51], RXDATA_OUT[51]);
buf B_RXDATA52 (RXDATA[52], RXDATA_OUT[52]);
buf B_RXDATA53 (RXDATA[53], RXDATA_OUT[53]);
buf B_RXDATA54 (RXDATA[54], RXDATA_OUT[54]);
buf B_RXDATA55 (RXDATA[55], RXDATA_OUT[55]);
buf B_RXDATA56 (RXDATA[56], RXDATA_OUT[56]);
buf B_RXDATA57 (RXDATA[57], RXDATA_OUT[57]);
buf B_RXDATA58 (RXDATA[58], RXDATA_OUT[58]);
buf B_RXDATA59 (RXDATA[59], RXDATA_OUT[59]);
buf B_RXDATA60 (RXDATA[60], RXDATA_OUT[60]);
buf B_RXDATA61 (RXDATA[61], RXDATA_OUT[61]);
buf B_RXDATA62 (RXDATA[62], RXDATA_OUT[62]);
buf B_RXDATA63 (RXDATA[63], RXDATA_OUT[63]);
buf B_RXDISPERR0 (RXDISPERR[0], RXDISPERR_OUT[0]);
buf B_RXDISPERR1 (RXDISPERR[1], RXDISPERR_OUT[1]);
buf B_RXDISPERR2 (RXDISPERR[2], RXDISPERR_OUT[2]);
buf B_RXDISPERR3 (RXDISPERR[3], RXDISPERR_OUT[3]);
buf B_RXDISPERR4 (RXDISPERR[4], RXDISPERR_OUT[4]);
buf B_RXDISPERR5 (RXDISPERR[5], RXDISPERR_OUT[5]);
buf B_RXDISPERR6 (RXDISPERR[6], RXDISPERR_OUT[6]);
buf B_RXDISPERR7 (RXDISPERR[7], RXDISPERR_OUT[7]);
buf B_RXLOSSOFSYNC0 (RXLOSSOFSYNC[0], RXLOSSOFSYNC_OUT[0]);
buf B_RXLOSSOFSYNC1 (RXLOSSOFSYNC[1], RXLOSSOFSYNC_OUT[1]);
buf B_RXNOTINTABLE0 (RXNOTINTABLE[0], RXNOTINTABLE_OUT[0]);
buf B_RXNOTINTABLE1 (RXNOTINTABLE[1], RXNOTINTABLE_OUT[1]);
buf B_RXNOTINTABLE2 (RXNOTINTABLE[2], RXNOTINTABLE_OUT[2]);
buf B_RXNOTINTABLE3 (RXNOTINTABLE[3], RXNOTINTABLE_OUT[3]);
buf B_RXNOTINTABLE4 (RXNOTINTABLE[4], RXNOTINTABLE_OUT[4]);
buf B_RXNOTINTABLE5 (RXNOTINTABLE[5], RXNOTINTABLE_OUT[5]);
buf B_RXNOTINTABLE6 (RXNOTINTABLE[6], RXNOTINTABLE_OUT[6]);
buf B_RXNOTINTABLE7 (RXNOTINTABLE[7], RXNOTINTABLE_OUT[7]);
buf B_RXREALIGN (RXREALIGN, RXREALIGN_OUT);
buf B_RXRECCLK (RXRECCLK, RXRECCLK_OUT);
buf B_RXRUNDISP0 (RXRUNDISP[0], RXRUNDISP_OUT[0]);
buf B_RXRUNDISP1 (RXRUNDISP[1], RXRUNDISP_OUT[1]);
buf B_RXRUNDISP2 (RXRUNDISP[2], RXRUNDISP_OUT[2]);
buf B_RXRUNDISP3 (RXRUNDISP[3], RXRUNDISP_OUT[3]);
buf B_RXRUNDISP4 (RXRUNDISP[4], RXRUNDISP_OUT[4]);
buf B_RXRUNDISP5 (RXRUNDISP[5], RXRUNDISP_OUT[5]);
buf B_RXRUNDISP6 (RXRUNDISP[6], RXRUNDISP_OUT[6]);
buf B_RXRUNDISP7 (RXRUNDISP[7], RXRUNDISP_OUT[7]);
buf B_TXBUFERR (TXBUFERR, TXBUFERR_OUT);
buf B_TXKERR0 (TXKERR[0], TXKERR_OUT[0]);
buf B_TXKERR1 (TXKERR[1], TXKERR_OUT[1]);
buf B_TXKERR2 (TXKERR[2], TXKERR_OUT[2]);
buf B_TXKERR3 (TXKERR[3], TXKERR_OUT[3]);
buf B_TXKERR4 (TXKERR[4], TXKERR_OUT[4]);
buf B_TXKERR5 (TXKERR[5], TXKERR_OUT[5]);
buf B_TXKERR6 (TXKERR[6], TXKERR_OUT[6]);
buf B_TXKERR7 (TXKERR[7], TXKERR_OUT[7]);
// buf B_TXN (TXN, TXN_OUT);
buf B_TXOUTCLK (TXOUTCLK, TXOUTCLK_OUT);
// buf B_TXP (TXP, TXP_OUT);
buf B_TXRUNDISP0 (TXRUNDISP[0], TXRUNDISP_OUT[0]);
buf B_TXRUNDISP1 (TXRUNDISP[1], TXRUNDISP_OUT[1]);
buf B_TXRUNDISP2 (TXRUNDISP[2], TXRUNDISP_OUT[2]);
buf B_TXRUNDISP3 (TXRUNDISP[3], TXRUNDISP_OUT[3]);
buf B_TXRUNDISP4 (TXRUNDISP[4], TXRUNDISP_OUT[4]);
buf B_TXRUNDISP5 (TXRUNDISP[5], TXRUNDISP_OUT[5]);
buf B_TXRUNDISP6 (TXRUNDISP[6], TXRUNDISP_OUT[6]);
buf B_TXRUNDISP7 (TXRUNDISP[7], TXRUNDISP_OUT[7]);

buf B_BREFCLKNIN (BREFCLKNIN_IN, BREFCLKNIN);
buf B_BREFCLKPIN (BREFCLKPIN_IN, BREFCLKPIN);
buf B_CHBONDI0 (CHBONDI_IN[0], CHBONDI[0]);
buf B_CHBONDI1 (CHBONDI_IN[1], CHBONDI[1]);
buf B_CHBONDI2 (CHBONDI_IN[2], CHBONDI[2]);
buf B_CHBONDI3 (CHBONDI_IN[3], CHBONDI[3]);
buf B_CHBONDI4 (CHBONDI_IN[4], CHBONDI[4]);
buf B_ENCHANSYNC (ENCHANSYNC_IN, ENCHANSYNC);
buf B_ENMCOMMAALIGN (ENMCOMMAALIGN_IN, ENMCOMMAALIGN);
buf B_ENPCOMMAALIGN (ENPCOMMAALIGN_IN, ENPCOMMAALIGN);
buf B_LOOPBACK0 (LOOPBACK_IN[0], LOOPBACK[0]);
buf B_LOOPBACK1 (LOOPBACK_IN[1], LOOPBACK[1]);
buf B_PMAINIT (PMAINIT_IN, PMAINIT);
buf B_PMAREGADDR0 (PMAREGADDR_IN[0], PMAREGADDR[0]);
buf B_PMAREGADDR1 (PMAREGADDR_IN[1], PMAREGADDR[1]);
buf B_PMAREGADDR2 (PMAREGADDR_IN[2], PMAREGADDR[2]);
buf B_PMAREGADDR3 (PMAREGADDR_IN[3], PMAREGADDR[3]);
buf B_PMAREGADDR4 (PMAREGADDR_IN[4], PMAREGADDR[4]);
buf B_PMAREGADDR5 (PMAREGADDR_IN[5], PMAREGADDR[5]);
buf B_PMAREGDATAIN0 (PMAREGDATAIN_IN[0], PMAREGDATAIN[0]);
buf B_PMAREGDATAIN1 (PMAREGDATAIN_IN[1], PMAREGDATAIN[1]);
buf B_PMAREGDATAIN2 (PMAREGDATAIN_IN[2], PMAREGDATAIN[2]);
buf B_PMAREGDATAIN3 (PMAREGDATAIN_IN[3], PMAREGDATAIN[3]);
buf B_PMAREGDATAIN4 (PMAREGDATAIN_IN[4], PMAREGDATAIN[4]);
buf B_PMAREGDATAIN5 (PMAREGDATAIN_IN[5], PMAREGDATAIN[5]);
buf B_PMAREGDATAIN6 (PMAREGDATAIN_IN[6], PMAREGDATAIN[6]);
buf B_PMAREGDATAIN7 (PMAREGDATAIN_IN[7], PMAREGDATAIN[7]);
buf B_PMAREGRW (PMAREGRW_IN, PMAREGRW);
buf B_PMAREGSTROBE (PMAREGSTROBE_IN, PMAREGSTROBE);
buf B_PMARXLOCKSEL0 (PMARXLOCKSEL_IN[0], PMARXLOCKSEL[0]);
buf B_PMARXLOCKSEL1 (PMARXLOCKSEL_IN[1], PMARXLOCKSEL[1]);
buf B_POWERDOWN (POWERDOWN_IN, POWERDOWN);
buf B_REFCLK (REFCLK_IN, REFCLK);
buf B_REFCLK2 (REFCLK2_IN, REFCLK2);
buf B_REFCLKBSEL (REFCLKBSEL_IN, REFCLKBSEL);
buf B_REFCLKSEL (REFCLKSEL_IN, REFCLKSEL);
buf B_RXBLOCKSYNC64B66BUSE (RXBLOCKSYNC64B66BUSE_IN, RXBLOCKSYNC64B66BUSE);
buf B_RXCOMMADETUSE (RXCOMMADETUSE_IN, RXCOMMADETUSE);
buf B_RXDATAWIDTH0 (RXDATAWIDTH_IN[0], RXDATAWIDTH[0]);
buf B_RXDATAWIDTH1 (RXDATAWIDTH_IN[1], RXDATAWIDTH[1]);
buf B_RXDEC64B66BUSE (RXDEC64B66BUSE_IN, RXDEC64B66BUSE);
buf B_RXDEC8B10BUSE (RXDEC8B10BUSE_IN, RXDEC8B10BUSE);
buf B_RXDESCRAM64B66BUSE (RXDESCRAM64B66BUSE_IN, RXDESCRAM64B66BUSE);
buf B_RXIGNOREBTF (RXIGNOREBTF_IN, RXIGNOREBTF);
buf B_RXINTDATAWIDTH0 (RXINTDATAWIDTH_IN[0], RXINTDATAWIDTH[0]);
buf B_RXINTDATAWIDTH1 (RXINTDATAWIDTH_IN[1], RXINTDATAWIDTH[1]);
buf B_RXN (RXN_IN, RXN);
buf B_RXP (RXP_IN, RXP);
buf B_RXPOLARITY (RXPOLARITY_IN, RXPOLARITY);
buf B_RXRESET (RXRESET_IN, RXRESET);
buf B_RXSLIDE (RXSLIDE_IN, RXSLIDE);
buf B_RXUSRCLK (RXUSRCLK_IN, RXUSRCLK);
buf B_RXUSRCLK2 (RXUSRCLK2_IN, RXUSRCLK2);
buf B_TXBYPASS8B10B0 (TXBYPASS8B10B_IN[0], TXBYPASS8B10B[0]);
buf B_TXBYPASS8B10B1 (TXBYPASS8B10B_IN[1], TXBYPASS8B10B[1]);
buf B_TXBYPASS8B10B2 (TXBYPASS8B10B_IN[2], TXBYPASS8B10B[2]);
buf B_TXBYPASS8B10B3 (TXBYPASS8B10B_IN[3], TXBYPASS8B10B[3]);
buf B_TXBYPASS8B10B4 (TXBYPASS8B10B_IN[4], TXBYPASS8B10B[4]);
buf B_TXBYPASS8B10B5 (TXBYPASS8B10B_IN[5], TXBYPASS8B10B[5]);
buf B_TXBYPASS8B10B6 (TXBYPASS8B10B_IN[6], TXBYPASS8B10B[6]);
buf B_TXBYPASS8B10B7 (TXBYPASS8B10B_IN[7], TXBYPASS8B10B[7]);
buf B_TXCHARDISPMODE0 (TXCHARDISPMODE_IN[0], TXCHARDISPMODE[0]);
buf B_TXCHARDISPMODE1 (TXCHARDISPMODE_IN[1], TXCHARDISPMODE[1]);
buf B_TXCHARDISPMODE2 (TXCHARDISPMODE_IN[2], TXCHARDISPMODE[2]);
buf B_TXCHARDISPMODE3 (TXCHARDISPMODE_IN[3], TXCHARDISPMODE[3]);
buf B_TXCHARDISPMODE4 (TXCHARDISPMODE_IN[4], TXCHARDISPMODE[4]);
buf B_TXCHARDISPMODE5 (TXCHARDISPMODE_IN[5], TXCHARDISPMODE[5]);
buf B_TXCHARDISPMODE6 (TXCHARDISPMODE_IN[6], TXCHARDISPMODE[6]);
buf B_TXCHARDISPMODE7 (TXCHARDISPMODE_IN[7], TXCHARDISPMODE[7]);
buf B_TXCHARDISPVAL0 (TXCHARDISPVAL_IN[0], TXCHARDISPVAL[0]);
buf B_TXCHARDISPVAL1 (TXCHARDISPVAL_IN[1], TXCHARDISPVAL[1]);
buf B_TXCHARDISPVAL2 (TXCHARDISPVAL_IN[2], TXCHARDISPVAL[2]);
buf B_TXCHARDISPVAL3 (TXCHARDISPVAL_IN[3], TXCHARDISPVAL[3]);
buf B_TXCHARDISPVAL4 (TXCHARDISPVAL_IN[4], TXCHARDISPVAL[4]);
buf B_TXCHARDISPVAL5 (TXCHARDISPVAL_IN[5], TXCHARDISPVAL[5]);
buf B_TXCHARDISPVAL6 (TXCHARDISPVAL_IN[6], TXCHARDISPVAL[6]);
buf B_TXCHARDISPVAL7 (TXCHARDISPVAL_IN[7], TXCHARDISPVAL[7]);
buf B_TXCHARISK0 (TXCHARISK_IN[0], TXCHARISK[0]);
buf B_TXCHARISK1 (TXCHARISK_IN[1], TXCHARISK[1]);
buf B_TXCHARISK2 (TXCHARISK_IN[2], TXCHARISK[2]);
buf B_TXCHARISK3 (TXCHARISK_IN[3], TXCHARISK[3]);
buf B_TXCHARISK4 (TXCHARISK_IN[4], TXCHARISK[4]);
buf B_TXCHARISK5 (TXCHARISK_IN[5], TXCHARISK[5]);
buf B_TXCHARISK6 (TXCHARISK_IN[6], TXCHARISK[6]);
buf B_TXCHARISK7 (TXCHARISK_IN[7], TXCHARISK[7]);
buf B_TXDATA0 (TXDATA_IN[0], TXDATA[0]);
buf B_TXDATA1 (TXDATA_IN[1], TXDATA[1]);
buf B_TXDATA2 (TXDATA_IN[2], TXDATA[2]);
buf B_TXDATA3 (TXDATA_IN[3], TXDATA[3]);
buf B_TXDATA4 (TXDATA_IN[4], TXDATA[4]);
buf B_TXDATA5 (TXDATA_IN[5], TXDATA[5]);
buf B_TXDATA6 (TXDATA_IN[6], TXDATA[6]);
buf B_TXDATA7 (TXDATA_IN[7], TXDATA[7]);
buf B_TXDATA8 (TXDATA_IN[8], TXDATA[8]);
buf B_TXDATA9 (TXDATA_IN[9], TXDATA[9]);
buf B_TXDATA10 (TXDATA_IN[10], TXDATA[10]);
buf B_TXDATA11 (TXDATA_IN[11], TXDATA[11]);
buf B_TXDATA12 (TXDATA_IN[12], TXDATA[12]);
buf B_TXDATA13 (TXDATA_IN[13], TXDATA[13]);
buf B_TXDATA14 (TXDATA_IN[14], TXDATA[14]);
buf B_TXDATA15 (TXDATA_IN[15], TXDATA[15]);
buf B_TXDATA16 (TXDATA_IN[16], TXDATA[16]);
buf B_TXDATA17 (TXDATA_IN[17], TXDATA[17]);
buf B_TXDATA18 (TXDATA_IN[18], TXDATA[18]);
buf B_TXDATA19 (TXDATA_IN[19], TXDATA[19]);
buf B_TXDATA20 (TXDATA_IN[20], TXDATA[20]);
buf B_TXDATA21 (TXDATA_IN[21], TXDATA[21]);
buf B_TXDATA22 (TXDATA_IN[22], TXDATA[22]);
buf B_TXDATA23 (TXDATA_IN[23], TXDATA[23]);
buf B_TXDATA24 (TXDATA_IN[24], TXDATA[24]);
buf B_TXDATA25 (TXDATA_IN[25], TXDATA[25]);
buf B_TXDATA26 (TXDATA_IN[26], TXDATA[26]);
buf B_TXDATA27 (TXDATA_IN[27], TXDATA[27]);
buf B_TXDATA28 (TXDATA_IN[28], TXDATA[28]);
buf B_TXDATA29 (TXDATA_IN[29], TXDATA[29]);
buf B_TXDATA30 (TXDATA_IN[30], TXDATA[30]);
buf B_TXDATA31 (TXDATA_IN[31], TXDATA[31]);
buf B_TXDATA32 (TXDATA_IN[32], TXDATA[32]);
buf B_TXDATA33 (TXDATA_IN[33], TXDATA[33]);
buf B_TXDATA34 (TXDATA_IN[34], TXDATA[34]);
buf B_TXDATA35 (TXDATA_IN[35], TXDATA[35]);
buf B_TXDATA36 (TXDATA_IN[36], TXDATA[36]);
buf B_TXDATA37 (TXDATA_IN[37], TXDATA[37]);
buf B_TXDATA38 (TXDATA_IN[38], TXDATA[38]);
buf B_TXDATA39 (TXDATA_IN[39], TXDATA[39]);
buf B_TXDATA40 (TXDATA_IN[40], TXDATA[40]);
buf B_TXDATA41 (TXDATA_IN[41], TXDATA[41]);
buf B_TXDATA42 (TXDATA_IN[42], TXDATA[42]);
buf B_TXDATA43 (TXDATA_IN[43], TXDATA[43]);
buf B_TXDATA44 (TXDATA_IN[44], TXDATA[44]);
buf B_TXDATA45 (TXDATA_IN[45], TXDATA[45]);
buf B_TXDATA46 (TXDATA_IN[46], TXDATA[46]);
buf B_TXDATA47 (TXDATA_IN[47], TXDATA[47]);
buf B_TXDATA48 (TXDATA_IN[48], TXDATA[48]);
buf B_TXDATA49 (TXDATA_IN[49], TXDATA[49]);
buf B_TXDATA50 (TXDATA_IN[50], TXDATA[50]);
buf B_TXDATA51 (TXDATA_IN[51], TXDATA[51]);
buf B_TXDATA52 (TXDATA_IN[52], TXDATA[52]);
buf B_TXDATA53 (TXDATA_IN[53], TXDATA[53]);
buf B_TXDATA54 (TXDATA_IN[54], TXDATA[54]);
buf B_TXDATA55 (TXDATA_IN[55], TXDATA[55]);
buf B_TXDATA56 (TXDATA_IN[56], TXDATA[56]);
buf B_TXDATA57 (TXDATA_IN[57], TXDATA[57]);
buf B_TXDATA58 (TXDATA_IN[58], TXDATA[58]);
buf B_TXDATA59 (TXDATA_IN[59], TXDATA[59]);
buf B_TXDATA60 (TXDATA_IN[60], TXDATA[60]);
buf B_TXDATA61 (TXDATA_IN[61], TXDATA[61]);
buf B_TXDATA62 (TXDATA_IN[62], TXDATA[62]);
buf B_TXDATA63 (TXDATA_IN[63], TXDATA[63]);
buf B_TXDATAWIDTH0 (TXDATAWIDTH_IN[0], TXDATAWIDTH[0]);
buf B_TXDATAWIDTH1 (TXDATAWIDTH_IN[1], TXDATAWIDTH[1]);
buf B_TXENC64B66BUSE (TXENC64B66BUSE_IN, TXENC64B66BUSE);
buf B_TXENC8B10BUSE (TXENC8B10BUSE_IN, TXENC8B10BUSE);
buf B_TXGEARBOX64B66BUSE (TXGEARBOX64B66BUSE_IN, TXGEARBOX64B66BUSE);
buf B_TXINHIBIT (TXINHIBIT_IN, TXINHIBIT);
buf B_TXINTDATAWIDTH0 (TXINTDATAWIDTH_IN[0], TXINTDATAWIDTH[0]);
buf B_TXINTDATAWIDTH1 (TXINTDATAWIDTH_IN[1], TXINTDATAWIDTH[1]);
buf B_TXPOLARITY (TXPOLARITY_IN, TXPOLARITY);
buf B_TXRESET (TXRESET_IN, TXRESET);
buf B_TXSCRAM64B66BUSE (TXSCRAM64B66BUSE_IN, TXSCRAM64B66BUSE);
buf B_TXUSRCLK (TXUSRCLK_IN, TXUSRCLK);
buf B_TXUSRCLK2 (TXUSRCLK2_IN, TXUSRCLK2);

GT10_SWIFT gt10_swift_1 (
	.ALIGN_COMMA_WORD (ALIGN_COMMA_WORD_BINARY),
	.BREFCLKNIN (BREFCLKNIN_IN),
	.BREFCLKPIN (BREFCLKPIN_IN),
	.CHAN_BOND_64B66B_SV (CHAN_BOND_64B66B_SV_BINARY),
	.CHAN_BOND_LIMIT (CHAN_BOND_LIMIT_BINARY),
	.CHAN_BOND_MODE (CHAN_BOND_MODE_BINARY),
	.CHAN_BOND_ONE_SHOT (CHAN_BOND_ONE_SHOT_BINARY),
	.CHAN_BOND_SEQ_1_1 (CHAN_BOND_SEQ_1_1),
	.CHAN_BOND_SEQ_1_2 (CHAN_BOND_SEQ_1_2),
	.CHAN_BOND_SEQ_1_3 (CHAN_BOND_SEQ_1_3),
	.CHAN_BOND_SEQ_1_4 (CHAN_BOND_SEQ_1_4),
	.CHAN_BOND_SEQ_1_MASK (CHAN_BOND_SEQ_1_MASK),
	.CHAN_BOND_SEQ_2_1 (CHAN_BOND_SEQ_2_1),
	.CHAN_BOND_SEQ_2_2 (CHAN_BOND_SEQ_2_2),
	.CHAN_BOND_SEQ_2_3 (CHAN_BOND_SEQ_2_3),
	.CHAN_BOND_SEQ_2_4 (CHAN_BOND_SEQ_2_4),
	.CHAN_BOND_SEQ_2_MASK (CHAN_BOND_SEQ_2_MASK),
	.CHAN_BOND_SEQ_2_USE (CHAN_BOND_SEQ_2_USE_BINARY),
	.CHAN_BOND_SEQ_LEN (CHAN_BOND_SEQ_LEN_BINARY),
	.CHBONDDONE (CHBONDDONE_OUT),
	.CHBONDI (CHBONDI_IN),
	.CHBONDO (CHBONDO_OUT),
	.CLK_CORRECT_USE (CLK_CORRECT_USE_BINARY),
	.CLK_COR_8B10B_DE (CLK_COR_8B10B_DE_BINARY),
	.CLK_COR_MAX_LAT (CLK_COR_MAX_LAT_BINARY),
	.CLK_COR_MIN_LAT (CLK_COR_MIN_LAT_BINARY),
	.CLK_COR_SEQ_1_1 (CLK_COR_SEQ_1_1),
	.CLK_COR_SEQ_1_2 (CLK_COR_SEQ_1_2),
	.CLK_COR_SEQ_1_3 (CLK_COR_SEQ_1_3),
	.CLK_COR_SEQ_1_4 (CLK_COR_SEQ_1_4),
	.CLK_COR_SEQ_1_MASK (CLK_COR_SEQ_1_MASK),
	.CLK_COR_SEQ_2_1 (CLK_COR_SEQ_2_1),
	.CLK_COR_SEQ_2_2 (CLK_COR_SEQ_2_2),
	.CLK_COR_SEQ_2_3 (CLK_COR_SEQ_2_3),
	.CLK_COR_SEQ_2_4 (CLK_COR_SEQ_2_4),
	.CLK_COR_SEQ_2_MASK (CLK_COR_SEQ_2_MASK),
	.CLK_COR_SEQ_2_USE (CLK_COR_SEQ_2_USE_BINARY),
	.CLK_COR_SEQ_DROP (CLK_COR_SEQ_DROP_BINARY),
	.CLK_COR_SEQ_LEN (CLK_COR_SEQ_LEN_BINARY),
	.COMMA_10B_MASK (COMMA_10B_MASK),
	.DEC_MCOMMA_DETECT (DEC_MCOMMA_DETECT_BINARY),
	.DEC_PCOMMA_DETECT (DEC_PCOMMA_DETECT_BINARY),
	.DEC_VALID_COMMA_ONLY (DEC_VALID_COMMA_ONLY_BINARY),
	.ENCHANSYNC (ENCHANSYNC_IN),
	.ENMCOMMAALIGN (ENMCOMMAALIGN_IN),
	.ENPCOMMAALIGN (ENPCOMMAALIGN_IN),
	.GSR (GSR),
	.LOOPBACK (LOOPBACK_IN),
	.MCOMMA_10B_VALUE (MCOMMA_10B_VALUE),
	.MCOMMA_DETECT (MCOMMA_DETECT_BINARY),
	.PCOMMA_10B_VALUE (PCOMMA_10B_VALUE),
	.PCOMMA_DETECT (PCOMMA_DETECT_BINARY),
	.PMAINIT (PMAINIT_IN),
	.PMAREGADDR (PMAREGADDR_IN),
	.PMAREGDATAIN (PMAREGDATAIN_IN),
	.PMAREGRW (PMAREGRW_IN),
	.PMAREGSTROBE (PMAREGSTROBE_IN),
	.PMARXLOCK (PMARXLOCK_OUT),
	.PMARXLOCKSEL (PMARXLOCKSEL_IN),
	.PMA_PWR_CNTRL (PMA_PWR_CNTRL),
	.PMA_SPEED (PMA_SPEED_BINARY),
	.POWERDOWN (POWERDOWN_IN),
	.REFCLK (REFCLK_IN),
	.REFCLK2 (REFCLK2_IN),
	.REFCLKBSEL (REFCLKBSEL_IN),
	.REFCLKSEL (REFCLKSEL_IN),
	.RXBLOCKSYNC64B66BUSE (RXBLOCKSYNC64B66BUSE_IN),
	.RXBUFSTATUS (RXBUFSTATUS_OUT),
	.RXCHARISCOMMA (RXCHARISCOMMA_OUT),
	.RXCHARISK (RXCHARISK_OUT),
	.RXCLKCORCNT (RXCLKCORCNT_OUT),
	.RXCOMMADET (RXCOMMADET_OUT),
	.RXCOMMADETUSE (RXCOMMADETUSE_IN),
	.RXDATA (RXDATA_OUT),
	.RXDATAWIDTH (RXDATAWIDTH_IN),
	.RXDEC64B66BUSE (RXDEC64B66BUSE_IN),
	.RXDEC8B10BUSE (RXDEC8B10BUSE_IN),
	.RXDESCRAM64B66BUSE (RXDESCRAM64B66BUSE_IN),
	.RXDISPERR (RXDISPERR_OUT),
	.RXIGNOREBTF (RXIGNOREBTF_IN),
	.RXINTDATAWIDTH (RXINTDATAWIDTH_IN),
	.RXLOSSOFSYNC (RXLOSSOFSYNC_OUT),
	.RXN (RXN_IN),
	.RXNOTINTABLE (RXNOTINTABLE_OUT),
	.RXP (RXP_IN),
	.RXPOLARITY (RXPOLARITY_IN),
	.RXREALIGN (RXREALIGN_OUT),
	.RXRECCLK (RXRECCLK_OUT),
	.RXRESET (RXRESET_IN),
	.RXRUNDISP (RXRUNDISP_OUT),
	.RXSLIDE (RXSLIDE_IN),
	.RXUSRCLK (RXUSRCLK_IN),
	.RXUSRCLK2 (RXUSRCLK2_IN),
	.RX_BUFFER_USE (RX_BUFFER_USE_BINARY),
	.RX_LOSS_OF_SYNC_FSM (RX_LOSS_OF_SYNC_FSM_BINARY),
	.RX_LOS_INVALID_INCR (RX_LOS_INVALID_INCR_BINARY),
	.RX_LOS_THRESHOLD (RX_LOS_THRESHOLD_BINARY),
	.SH_CNT_MAX (SH_CNT_MAX_BINARY),
	.SH_INVALID_CNT_MAX (SH_INVALID_CNT_MAX_BINARY),
	.TXBUFERR (TXBUFERR_OUT),
	.TXBYPASS8B10B (TXBYPASS8B10B_IN),
	.TXCHARDISPMODE (TXCHARDISPMODE_IN),
	.TXCHARDISPVAL (TXCHARDISPVAL_IN),
	.TXCHARISK (TXCHARISK_IN),
	.TXDATA (TXDATA_IN),
	.TXDATAWIDTH (TXDATAWIDTH_IN),
	.TXENC64B66BUSE (TXENC64B66BUSE_IN),
	.TXENC8B10BUSE (TXENC8B10BUSE_IN),
	.TXGEARBOX64B66BUSE (TXGEARBOX64B66BUSE_IN),
	.TXINHIBIT (TXINHIBIT_IN),
	.TXINTDATAWIDTH (TXINTDATAWIDTH_IN),
	.TXKERR (TXKERR_OUT),
	.TXN (TXN),
	.TXOUTCLK (TXOUTCLK_OUT),
	.TXP (TXP),
	.TXPOLARITY (TXPOLARITY_IN),
	.TXRESET (TXRESET_IN),
	.TXRUNDISP (TXRUNDISP_OUT),
	.TXSCRAM64B66BUSE (TXSCRAM64B66BUSE_IN),
	.TXUSRCLK (TXUSRCLK_IN),
	.TXUSRCLK2 (TXUSRCLK2_IN),
	.TX_BUFFER_USE (TX_BUFFER_USE_BINARY)
);

specify
	specparam BREFCLKNINDLYLH = 0:0:0, BREFCLKNINDLYHL = 0:0:0;
	specparam BREFCLKPINDLYLH = 0:0:0, BREFCLKPINDLYHL = 0:0:0;
	specparam CHBONDDONEDLYLH = 0:0:0, CHBONDDONEDLYHL = 0:0:0;
	specparam CHBONDI0DLYLH = 0:0:0, CHBONDI0DLYHL = 0:0:0;
	specparam CHBONDI1DLYLH = 0:0:0, CHBONDI1DLYHL = 0:0:0;
	specparam CHBONDI2DLYLH = 0:0:0, CHBONDI2DLYHL = 0:0:0;
	specparam CHBONDI3DLYLH = 0:0:0, CHBONDI3DLYHL = 0:0:0;
	specparam CHBONDI4DLYLH = 0:0:0, CHBONDI4DLYHL = 0:0:0;
	specparam CHBONDO0DLYLH = 0:0:0, CHBONDO0DLYHL = 0:0:0;
	specparam CHBONDO1DLYLH = 0:0:0, CHBONDO1DLYHL = 0:0:0;
	specparam CHBONDO2DLYLH = 0:0:0, CHBONDO2DLYHL = 0:0:0;
	specparam CHBONDO3DLYLH = 0:0:0, CHBONDO3DLYHL = 0:0:0;
	specparam CHBONDO4DLYLH = 0:0:0, CHBONDO4DLYHL = 0:0:0;
	specparam ENCHANSYNCDLYLH = 0:0:0, ENCHANSYNCDLYHL = 0:0:0;
	specparam ENMCOMMAALIGNDLYLH = 0:0:0, ENMCOMMAALIGNDLYHL = 0:0:0;
	specparam ENPCOMMAALIGNDLYLH = 0:0:0, ENPCOMMAALIGNDLYHL = 0:0:0;
	specparam GSRDLYLH = 0:0:0, GSRDLYHL = 0:0:0;
	specparam LOOPBACK0DLYLH = 0:0:0, LOOPBACK0DLYHL = 0:0:0;
	specparam LOOPBACK1DLYLH = 0:0:0, LOOPBACK1DLYHL = 0:0:0;
	specparam MINPERBREFCLKNIN = 0:0:0;
	specparam MINPERBREFCLKPIN = 0:0:0;
	specparam MINPERREFCLK = 0:0:0;
	specparam MINPERREFCLK2 = 0:0:0;
	specparam PATHPULSE$ = 0;
	specparam PMAINITDLYLH = 0:0:0, PMAINITDLYHL = 0:0:0;
	specparam PMAREGADDR0DLYLH = 0:0:0, PMAREGADDR0DLYHL = 0:0:0;
	specparam PMAREGADDR1DLYLH = 0:0:0, PMAREGADDR1DLYHL = 0:0:0;
	specparam PMAREGADDR2DLYLH = 0:0:0, PMAREGADDR2DLYHL = 0:0:0;
	specparam PMAREGADDR3DLYLH = 0:0:0, PMAREGADDR3DLYHL = 0:0:0;
	specparam PMAREGADDR4DLYLH = 0:0:0, PMAREGADDR4DLYHL = 0:0:0;
	specparam PMAREGADDR5DLYLH = 0:0:0, PMAREGADDR5DLYHL = 0:0:0;
	specparam PMAREGDATAIN0DLYLH = 0:0:0, PMAREGDATAIN0DLYHL = 0:0:0;
	specparam PMAREGDATAIN1DLYLH = 0:0:0, PMAREGDATAIN1DLYHL = 0:0:0;
	specparam PMAREGDATAIN2DLYLH = 0:0:0, PMAREGDATAIN2DLYHL = 0:0:0;
	specparam PMAREGDATAIN3DLYLH = 0:0:0, PMAREGDATAIN3DLYHL = 0:0:0;
	specparam PMAREGDATAIN4DLYLH = 0:0:0, PMAREGDATAIN4DLYHL = 0:0:0;
	specparam PMAREGDATAIN5DLYLH = 0:0:0, PMAREGDATAIN5DLYHL = 0:0:0;
	specparam PMAREGDATAIN6DLYLH = 0:0:0, PMAREGDATAIN6DLYHL = 0:0:0;
	specparam PMAREGDATAIN7DLYLH = 0:0:0, PMAREGDATAIN7DLYHL = 0:0:0;
	specparam PMAREGRWDLYLH = 0:0:0, PMAREGRWDLYHL = 0:0:0;
	specparam PMAREGSTROBEDLYLH = 0:0:0, PMAREGSTROBEDLYHL = 0:0:0;
	specparam PMARXLOCKDLYLH = 0:0:0, PMARXLOCKDLYHL = 0:0:0;
	specparam PMARXLOCKSEL0DLYLH = 0:0:0, PMARXLOCKSEL0DLYHL = 0:0:0;
	specparam PMARXLOCKSEL1DLYLH = 0:0:0, PMARXLOCKSEL1DLYHL = 0:0:0;
	specparam POWERDOWNDLYLH = 0:0:0, POWERDOWNDLYHL = 0:0:0;
	specparam PWBREFCLKNINHI = 0:0:0, PWBREFCLKNINLO = 0:0:0;
	specparam PWBREFCLKPINHI = 0:0:0, PWBREFCLKPINLO = 0:0:0;
	specparam PWREFCLK2HI = 0:0:0, PWREFCLK2LO = 0:0:0;
	specparam PWREFCLKHI = 0:0:0, PWREFCLKLO = 0:0:0;
	specparam REFCLK2DLYLH = 0:0:0, REFCLK2DLYHL = 0:0:0;
	specparam REFCLKBSELDLYLH = 0:0:0, REFCLKBSELDLYHL = 0:0:0;
	specparam REFCLKDLYLH = 0:0:0, REFCLKDLYHL = 0:0:0;
	specparam REFCLKSELDLYLH = 0:0:0, REFCLKSELDLYHL = 0:0:0;
	specparam RXBLOCKSYNC64B66BUSEDLYLH = 0:0:0, RXBLOCKSYNC64B66BUSEDLYHL = 0:0:0;
	specparam RXBUFSTATUS0DLYLH = 0:0:0, RXBUFSTATUS0DLYHL = 0:0:0;
	specparam RXBUFSTATUS1DLYLH = 0:0:0, RXBUFSTATUS1DLYHL = 0:0:0;
	specparam RXCHARISCOMMA0DLYLH = 0:0:0, RXCHARISCOMMA0DLYHL = 0:0:0;
	specparam RXCHARISCOMMA1DLYLH = 0:0:0, RXCHARISCOMMA1DLYHL = 0:0:0;
	specparam RXCHARISCOMMA2DLYLH = 0:0:0, RXCHARISCOMMA2DLYHL = 0:0:0;
	specparam RXCHARISCOMMA3DLYLH = 0:0:0, RXCHARISCOMMA3DLYHL = 0:0:0;
	specparam RXCHARISCOMMA4DLYLH = 0:0:0, RXCHARISCOMMA4DLYHL = 0:0:0;
	specparam RXCHARISCOMMA5DLYLH = 0:0:0, RXCHARISCOMMA5DLYHL = 0:0:0;
	specparam RXCHARISCOMMA6DLYLH = 0:0:0, RXCHARISCOMMA6DLYHL = 0:0:0;
	specparam RXCHARISCOMMA7DLYLH = 0:0:0, RXCHARISCOMMA7DLYHL = 0:0:0;
	specparam RXCHARISK0DLYLH = 0:0:0, RXCHARISK0DLYHL = 0:0:0;
	specparam RXCHARISK1DLYLH = 0:0:0, RXCHARISK1DLYHL = 0:0:0;
	specparam RXCHARISK2DLYLH = 0:0:0, RXCHARISK2DLYHL = 0:0:0;
	specparam RXCHARISK3DLYLH = 0:0:0, RXCHARISK3DLYHL = 0:0:0;
	specparam RXCHARISK4DLYLH = 0:0:0, RXCHARISK4DLYHL = 0:0:0;
	specparam RXCHARISK5DLYLH = 0:0:0, RXCHARISK5DLYHL = 0:0:0;
	specparam RXCHARISK6DLYLH = 0:0:0, RXCHARISK6DLYHL = 0:0:0;
	specparam RXCHARISK7DLYLH = 0:0:0, RXCHARISK7DLYHL = 0:0:0;
	specparam RXCLKCORCNT0DLYLH = 0:0:0, RXCLKCORCNT0DLYHL = 0:0:0;
	specparam RXCLKCORCNT1DLYLH = 0:0:0, RXCLKCORCNT1DLYHL = 0:0:0;
	specparam RXCLKCORCNT2DLYLH = 0:0:0, RXCLKCORCNT2DLYHL = 0:0:0;
	specparam RXCOMMADETDLYLH = 0:0:0, RXCOMMADETDLYHL = 0:0:0;
	specparam RXCOMMADETUSEDLYLH = 0:0:0, RXCOMMADETUSEDLYHL = 0:0:0;
	specparam RXDATA0DLYLH = 0:0:0, RXDATA0DLYHL = 0:0:0;
	specparam RXDATA10DLYLH = 0:0:0, RXDATA10DLYHL = 0:0:0;
	specparam RXDATA11DLYLH = 0:0:0, RXDATA11DLYHL = 0:0:0;
	specparam RXDATA12DLYLH = 0:0:0, RXDATA12DLYHL = 0:0:0;
	specparam RXDATA13DLYLH = 0:0:0, RXDATA13DLYHL = 0:0:0;
	specparam RXDATA14DLYLH = 0:0:0, RXDATA14DLYHL = 0:0:0;
	specparam RXDATA15DLYLH = 0:0:0, RXDATA15DLYHL = 0:0:0;
	specparam RXDATA16DLYLH = 0:0:0, RXDATA16DLYHL = 0:0:0;
	specparam RXDATA17DLYLH = 0:0:0, RXDATA17DLYHL = 0:0:0;
	specparam RXDATA18DLYLH = 0:0:0, RXDATA18DLYHL = 0:0:0;
	specparam RXDATA19DLYLH = 0:0:0, RXDATA19DLYHL = 0:0:0;
	specparam RXDATA1DLYLH = 0:0:0, RXDATA1DLYHL = 0:0:0;
	specparam RXDATA20DLYLH = 0:0:0, RXDATA20DLYHL = 0:0:0;
	specparam RXDATA21DLYLH = 0:0:0, RXDATA21DLYHL = 0:0:0;
	specparam RXDATA22DLYLH = 0:0:0, RXDATA22DLYHL = 0:0:0;
	specparam RXDATA23DLYLH = 0:0:0, RXDATA23DLYHL = 0:0:0;
	specparam RXDATA24DLYLH = 0:0:0, RXDATA24DLYHL = 0:0:0;
	specparam RXDATA25DLYLH = 0:0:0, RXDATA25DLYHL = 0:0:0;
	specparam RXDATA26DLYLH = 0:0:0, RXDATA26DLYHL = 0:0:0;
	specparam RXDATA27DLYLH = 0:0:0, RXDATA27DLYHL = 0:0:0;
	specparam RXDATA28DLYLH = 0:0:0, RXDATA28DLYHL = 0:0:0;
	specparam RXDATA29DLYLH = 0:0:0, RXDATA29DLYHL = 0:0:0;
	specparam RXDATA2DLYLH = 0:0:0, RXDATA2DLYHL = 0:0:0;
	specparam RXDATA30DLYLH = 0:0:0, RXDATA30DLYHL = 0:0:0;
	specparam RXDATA31DLYLH = 0:0:0, RXDATA31DLYHL = 0:0:0;
	specparam RXDATA32DLYLH = 0:0:0, RXDATA32DLYHL = 0:0:0;
	specparam RXDATA33DLYLH = 0:0:0, RXDATA33DLYHL = 0:0:0;
	specparam RXDATA34DLYLH = 0:0:0, RXDATA34DLYHL = 0:0:0;
	specparam RXDATA35DLYLH = 0:0:0, RXDATA35DLYHL = 0:0:0;
	specparam RXDATA36DLYLH = 0:0:0, RXDATA36DLYHL = 0:0:0;
	specparam RXDATA37DLYLH = 0:0:0, RXDATA37DLYHL = 0:0:0;
	specparam RXDATA38DLYLH = 0:0:0, RXDATA38DLYHL = 0:0:0;
	specparam RXDATA39DLYLH = 0:0:0, RXDATA39DLYHL = 0:0:0;
	specparam RXDATA3DLYLH = 0:0:0, RXDATA3DLYHL = 0:0:0;
	specparam RXDATA40DLYLH = 0:0:0, RXDATA40DLYHL = 0:0:0;
	specparam RXDATA41DLYLH = 0:0:0, RXDATA41DLYHL = 0:0:0;
	specparam RXDATA42DLYLH = 0:0:0, RXDATA42DLYHL = 0:0:0;
	specparam RXDATA43DLYLH = 0:0:0, RXDATA43DLYHL = 0:0:0;
	specparam RXDATA44DLYLH = 0:0:0, RXDATA44DLYHL = 0:0:0;
	specparam RXDATA45DLYLH = 0:0:0, RXDATA45DLYHL = 0:0:0;
	specparam RXDATA46DLYLH = 0:0:0, RXDATA46DLYHL = 0:0:0;
	specparam RXDATA47DLYLH = 0:0:0, RXDATA47DLYHL = 0:0:0;
	specparam RXDATA48DLYLH = 0:0:0, RXDATA48DLYHL = 0:0:0;
	specparam RXDATA49DLYLH = 0:0:0, RXDATA49DLYHL = 0:0:0;
	specparam RXDATA4DLYLH = 0:0:0, RXDATA4DLYHL = 0:0:0;
	specparam RXDATA50DLYLH = 0:0:0, RXDATA50DLYHL = 0:0:0;
	specparam RXDATA51DLYLH = 0:0:0, RXDATA51DLYHL = 0:0:0;
	specparam RXDATA52DLYLH = 0:0:0, RXDATA52DLYHL = 0:0:0;
	specparam RXDATA53DLYLH = 0:0:0, RXDATA53DLYHL = 0:0:0;
	specparam RXDATA54DLYLH = 0:0:0, RXDATA54DLYHL = 0:0:0;
	specparam RXDATA55DLYLH = 0:0:0, RXDATA55DLYHL = 0:0:0;
	specparam RXDATA56DLYLH = 0:0:0, RXDATA56DLYHL = 0:0:0;
	specparam RXDATA57DLYLH = 0:0:0, RXDATA57DLYHL = 0:0:0;
	specparam RXDATA58DLYLH = 0:0:0, RXDATA58DLYHL = 0:0:0;
	specparam RXDATA59DLYLH = 0:0:0, RXDATA59DLYHL = 0:0:0;
	specparam RXDATA5DLYLH = 0:0:0, RXDATA5DLYHL = 0:0:0;
	specparam RXDATA60DLYLH = 0:0:0, RXDATA60DLYHL = 0:0:0;
	specparam RXDATA61DLYLH = 0:0:0, RXDATA61DLYHL = 0:0:0;
	specparam RXDATA62DLYLH = 0:0:0, RXDATA62DLYHL = 0:0:0;
	specparam RXDATA63DLYLH = 0:0:0, RXDATA63DLYHL = 0:0:0;
	specparam RXDATA6DLYLH = 0:0:0, RXDATA6DLYHL = 0:0:0;
	specparam RXDATA7DLYLH = 0:0:0, RXDATA7DLYHL = 0:0:0;
	specparam RXDATA8DLYLH = 0:0:0, RXDATA8DLYHL = 0:0:0;
	specparam RXDATA9DLYLH = 0:0:0, RXDATA9DLYHL = 0:0:0;
	specparam RXDATAWIDTH0DLYLH = 0:0:0, RXDATAWIDTH0DLYHL = 0:0:0;
	specparam RXDATAWIDTH1DLYLH = 0:0:0, RXDATAWIDTH1DLYHL = 0:0:0;
	specparam RXDEC64B66BUSEDLYLH = 0:0:0, RXDEC64B66BUSEDLYHL = 0:0:0;
	specparam RXDEC8B10BUSEDLYLH = 0:0:0, RXDEC8B10BUSEDLYHL = 0:0:0;
	specparam RXDESCRAM64B66BUSEDLYLH = 0:0:0, RXDESCRAM64B66BUSEDLYHL = 0:0:0;
	specparam RXDISPERR0DLYLH = 0:0:0, RXDISPERR0DLYHL = 0:0:0;
	specparam RXDISPERR1DLYLH = 0:0:0, RXDISPERR1DLYHL = 0:0:0;
	specparam RXDISPERR2DLYLH = 0:0:0, RXDISPERR2DLYHL = 0:0:0;
	specparam RXDISPERR3DLYLH = 0:0:0, RXDISPERR3DLYHL = 0:0:0;
	specparam RXDISPERR4DLYLH = 0:0:0, RXDISPERR4DLYHL = 0:0:0;
	specparam RXDISPERR5DLYLH = 0:0:0, RXDISPERR5DLYHL = 0:0:0;
	specparam RXDISPERR6DLYLH = 0:0:0, RXDISPERR6DLYHL = 0:0:0;
	specparam RXDISPERR7DLYLH = 0:0:0, RXDISPERR7DLYHL = 0:0:0;
	specparam RXIGNOREBTFDLYLH = 0:0:0, RXIGNOREBTFDLYHL = 0:0:0;
	specparam RXINTDATAWIDTH0DLYLH = 0:0:0, RXINTDATAWIDTH0DLYHL = 0:0:0;
	specparam RXINTDATAWIDTH1DLYLH = 0:0:0, RXINTDATAWIDTH1DLYHL = 0:0:0;
	specparam RXLOSSOFSYNC0DLYLH = 0:0:0, RXLOSSOFSYNC0DLYHL = 0:0:0;
	specparam RXLOSSOFSYNC1DLYLH = 0:0:0, RXLOSSOFSYNC1DLYHL = 0:0:0;
	specparam RXNDLYLH = 0:0:0, RXNDLYHL = 0:0:0;
	specparam RXNOTINTABLE0DLYLH = 0:0:0, RXNOTINTABLE0DLYHL = 0:0:0;
	specparam RXNOTINTABLE1DLYLH = 0:0:0, RXNOTINTABLE1DLYHL = 0:0:0;
	specparam RXNOTINTABLE2DLYLH = 0:0:0, RXNOTINTABLE2DLYHL = 0:0:0;
	specparam RXNOTINTABLE3DLYLH = 0:0:0, RXNOTINTABLE3DLYHL = 0:0:0;
	specparam RXNOTINTABLE4DLYLH = 0:0:0, RXNOTINTABLE4DLYHL = 0:0:0;
	specparam RXNOTINTABLE5DLYLH = 0:0:0, RXNOTINTABLE5DLYHL = 0:0:0;
	specparam RXNOTINTABLE6DLYLH = 0:0:0, RXNOTINTABLE6DLYHL = 0:0:0;
	specparam RXNOTINTABLE7DLYLH = 0:0:0, RXNOTINTABLE7DLYHL = 0:0:0;
	specparam RXPDLYLH = 0:0:0, RXPDLYHL = 0:0:0;
	specparam RXPOLARITYDLYLH = 0:0:0, RXPOLARITYDLYHL = 0:0:0;
	specparam RXREALIGNDLYLH = 0:0:0, RXREALIGNDLYHL = 0:0:0;
	specparam RXRECCLKDLYLH = 0:0:0, RXRECCLKDLYHL = 0:0:0;
	specparam RXRESETDLYLH = 0:0:0, RXRESETDLYHL = 0:0:0;
	specparam RXRUNDISP0DLYLH = 0:0:0, RXRUNDISP0DLYHL = 0:0:0;
	specparam RXRUNDISP1DLYLH = 0:0:0, RXRUNDISP1DLYHL = 0:0:0;
	specparam RXRUNDISP2DLYLH = 0:0:0, RXRUNDISP2DLYHL = 0:0:0;
	specparam RXRUNDISP3DLYLH = 0:0:0, RXRUNDISP3DLYHL = 0:0:0;
	specparam RXRUNDISP4DLYLH = 0:0:0, RXRUNDISP4DLYHL = 0:0:0;
	specparam RXRUNDISP5DLYLH = 0:0:0, RXRUNDISP5DLYHL = 0:0:0;
	specparam RXRUNDISP6DLYLH = 0:0:0, RXRUNDISP6DLYHL = 0:0:0;
	specparam RXRUNDISP7DLYLH = 0:0:0, RXRUNDISP7DLYHL = 0:0:0;
	specparam RXSLIDEDLYLH = 0:0:0, RXSLIDEDLYHL = 0:0:0;
	specparam RXUSRCLK2DLYLH = 0:0:0, RXUSRCLK2DLYHL = 0:0:0;
	specparam RXUSRCLKDLYLH = 0:0:0, RXUSRCLKDLYHL = 0:0:0;
	specparam SUCHBONDI0HIRXUSRCLK = 0:0:0, HOLDCHBONDI0HIRXUSRCLK = 0:0:0;
	specparam SUCHBONDI0LORXUSRCLK = 0:0:0, HOLDCHBONDI0LORXUSRCLK = 0:0:0;
	specparam SUCHBONDI1HIRXUSRCLK = 0:0:0, HOLDCHBONDI1HIRXUSRCLK = 0:0:0;
	specparam SUCHBONDI1LORXUSRCLK = 0:0:0, HOLDCHBONDI1LORXUSRCLK = 0:0:0;
	specparam SUCHBONDI2HIRXUSRCLK = 0:0:0, HOLDCHBONDI2HIRXUSRCLK = 0:0:0;
	specparam SUCHBONDI2LORXUSRCLK = 0:0:0, HOLDCHBONDI2LORXUSRCLK = 0:0:0;
	specparam SUCHBONDI3HIRXUSRCLK = 0:0:0, HOLDCHBONDI3HIRXUSRCLK = 0:0:0;
	specparam SUCHBONDI3LORXUSRCLK = 0:0:0, HOLDCHBONDI3LORXUSRCLK = 0:0:0;
	specparam SUCHBONDI4HIRXUSRCLK = 0:0:0, HOLDCHBONDI4HIRXUSRCLK = 0:0:0;
	specparam SUCHBONDI4LORXUSRCLK = 0:0:0, HOLDCHBONDI4LORXUSRCLK = 0:0:0;
	specparam SUENCHANSYNCHIRXUSRCLK2 = 0:0:0, HOLDENCHANSYNCHIRXUSRCLK2 = 0:0:0;
	specparam SUENCHANSYNCLORXUSRCLK2 = 0:0:0, HOLDENCHANSYNCLORXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR0HITXUSRCLK2 = 0:0:0, HOLDPMAREGADDR0HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR0LOTXUSRCLK2 = 0:0:0, HOLDPMAREGADDR0LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR1HITXUSRCLK2 = 0:0:0, HOLDPMAREGADDR1HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR1LOTXUSRCLK2 = 0:0:0, HOLDPMAREGADDR1LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR2HITXUSRCLK2 = 0:0:0, HOLDPMAREGADDR2HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR2LOTXUSRCLK2 = 0:0:0, HOLDPMAREGADDR2LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR3HITXUSRCLK2 = 0:0:0, HOLDPMAREGADDR3HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR3LOTXUSRCLK2 = 0:0:0, HOLDPMAREGADDR3LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR4HITXUSRCLK2 = 0:0:0, HOLDPMAREGADDR4HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR4LOTXUSRCLK2 = 0:0:0, HOLDPMAREGADDR4LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR5HITXUSRCLK2 = 0:0:0, HOLDPMAREGADDR5HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGADDR5LOTXUSRCLK2 = 0:0:0, HOLDPMAREGADDR5LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN0HITXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN0HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN0LOTXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN0LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN1HITXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN1HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN1LOTXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN1LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN2HITXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN2HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN2LOTXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN2LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN3HITXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN3HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN3LOTXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN3LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN4HITXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN4HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN4LOTXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN4LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN5HITXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN5HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN5LOTXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN5LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN6HITXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN6HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN6LOTXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN6LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN7HITXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN7HITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGDATAIN7LOTXUSRCLK2 = 0:0:0, HOLDPMAREGDATAIN7LOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGRWHITXUSRCLK2 = 0:0:0, HOLDPMAREGRWHITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGRWLOTXUSRCLK2 = 0:0:0, HOLDPMAREGRWLOTXUSRCLK2 = 0:0:0;
	specparam SUPMAREGSTROBEHITXUSRCLK2 = 0:0:0, HOLDPMAREGSTROBEHITXUSRCLK2 = 0:0:0;
	specparam SUPMAREGSTROBELOTXUSRCLK2 = 0:0:0, HOLDPMAREGSTROBELOTXUSRCLK2 = 0:0:0;
	specparam SUREFCLKBSELHITXUSRCLK2 = 0:0:0, HOLDREFCLKBSELHITXUSRCLK2 = 0:0:0;
	specparam SUREFCLKBSELLOTXUSRCLK2 = 0:0:0, HOLDREFCLKBSELLOTXUSRCLK2 = 0:0:0;
	specparam SUREFCLKSELHIREFCLK = 0:0:0, HOLDREFCLKSELHIREFCLK = 0:0:0;
	specparam SUREFCLKSELLOREFCLK = 0:0:0, HOLDREFCLKSELLOREFCLK = 0:0:0;
	specparam SURXDEC64B66BUSEHIRXUSRCLK2 = 0:0:0, HOLDRXDEC64B66BUSEHIRXUSRCLK2 = 0:0:0;
	specparam SURXDEC64B66BUSELORXUSRCLK2 = 0:0:0, HOLDRXDEC64B66BUSELORXUSRCLK2 = 0:0:0;
	specparam SURXIGNOREBTFHIRXUSRCLK2 = 0:0:0, HOLDRXIGNOREBTFHIRXUSRCLK2 = 0:0:0;
	specparam SURXIGNOREBTFLORXUSRCLK2 = 0:0:0, HOLDRXIGNOREBTFLORXUSRCLK2 = 0:0:0;
	specparam SURXSLIDEHIRXUSRCLK2 = 0:0:0, HOLDRXSLIDEHIRXUSRCLK2 = 0:0:0;
	specparam SURXSLIDELORXUSRCLK2 = 0:0:0, HOLDRXSLIDELORXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B0HITXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B0HITXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B0LOTXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B0LOTXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B1HITXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B1HITXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B1LOTXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B1LOTXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B2HITXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B2HITXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B2LOTXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B2LOTXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B3HITXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B3HITXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B3LOTXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B3LOTXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B4HITXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B4HITXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B4LOTXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B4LOTXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B5HITXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B5HITXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B5LOTXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B5LOTXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B6HITXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B6HITXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B6LOTXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B6LOTXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B7HITXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B7HITXUSRCLK2 = 0:0:0;
	specparam SUTXBYPASS8B10B7LOTXUSRCLK2 = 0:0:0, HOLDTXBYPASS8B10B7LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE0HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE0HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE0LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE0LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE1HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE1HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE1LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE1LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE2HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE2HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE2LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE2LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE3HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE3HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE3LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE3LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE4HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE4HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE4LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE4LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE5HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE5HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE5LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE5LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE6HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE6HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE6LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE6LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE7HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE7HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPMODE7LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPMODE7LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL0HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL0HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL0LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL0LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL1HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL1HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL1LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL1LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL2HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL2HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL2LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL2LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL3HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL3HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL3LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL3LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL4HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL4HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL4LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL4LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL5HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL5HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL5LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL5LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL6HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL6HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL6LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL6LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL7HITXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL7HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARDISPVAL7LOTXUSRCLK2 = 0:0:0, HOLDTXCHARDISPVAL7LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK0HITXUSRCLK2 = 0:0:0, HOLDTXCHARISK0HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK0LOTXUSRCLK2 = 0:0:0, HOLDTXCHARISK0LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK1HITXUSRCLK2 = 0:0:0, HOLDTXCHARISK1HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK1LOTXUSRCLK2 = 0:0:0, HOLDTXCHARISK1LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK2HITXUSRCLK2 = 0:0:0, HOLDTXCHARISK2HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK2LOTXUSRCLK2 = 0:0:0, HOLDTXCHARISK2LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK3HITXUSRCLK2 = 0:0:0, HOLDTXCHARISK3HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK3LOTXUSRCLK2 = 0:0:0, HOLDTXCHARISK3LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK4HITXUSRCLK2 = 0:0:0, HOLDTXCHARISK4HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK4LOTXUSRCLK2 = 0:0:0, HOLDTXCHARISK4LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK5HITXUSRCLK2 = 0:0:0, HOLDTXCHARISK5HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK5LOTXUSRCLK2 = 0:0:0, HOLDTXCHARISK5LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK6HITXUSRCLK2 = 0:0:0, HOLDTXCHARISK6HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK6LOTXUSRCLK2 = 0:0:0, HOLDTXCHARISK6LOTXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK7HITXUSRCLK2 = 0:0:0, HOLDTXCHARISK7HITXUSRCLK2 = 0:0:0;
	specparam SUTXCHARISK7LOTXUSRCLK2 = 0:0:0, HOLDTXCHARISK7LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA0HITXUSRCLK2 = 0:0:0, HOLDTXDATA0HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA0LOTXUSRCLK2 = 0:0:0, HOLDTXDATA0LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA10HITXUSRCLK2 = 0:0:0, HOLDTXDATA10HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA10LOTXUSRCLK2 = 0:0:0, HOLDTXDATA10LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA11HITXUSRCLK2 = 0:0:0, HOLDTXDATA11HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA11LOTXUSRCLK2 = 0:0:0, HOLDTXDATA11LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA12HITXUSRCLK2 = 0:0:0, HOLDTXDATA12HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA12LOTXUSRCLK2 = 0:0:0, HOLDTXDATA12LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA13HITXUSRCLK2 = 0:0:0, HOLDTXDATA13HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA13LOTXUSRCLK2 = 0:0:0, HOLDTXDATA13LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA14HITXUSRCLK2 = 0:0:0, HOLDTXDATA14HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA14LOTXUSRCLK2 = 0:0:0, HOLDTXDATA14LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA15HITXUSRCLK2 = 0:0:0, HOLDTXDATA15HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA15LOTXUSRCLK2 = 0:0:0, HOLDTXDATA15LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA16HITXUSRCLK2 = 0:0:0, HOLDTXDATA16HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA16LOTXUSRCLK2 = 0:0:0, HOLDTXDATA16LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA17HITXUSRCLK2 = 0:0:0, HOLDTXDATA17HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA17LOTXUSRCLK2 = 0:0:0, HOLDTXDATA17LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA18HITXUSRCLK2 = 0:0:0, HOLDTXDATA18HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA18LOTXUSRCLK2 = 0:0:0, HOLDTXDATA18LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA19HITXUSRCLK2 = 0:0:0, HOLDTXDATA19HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA19LOTXUSRCLK2 = 0:0:0, HOLDTXDATA19LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA1HITXUSRCLK2 = 0:0:0, HOLDTXDATA1HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA1LOTXUSRCLK2 = 0:0:0, HOLDTXDATA1LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA20HITXUSRCLK2 = 0:0:0, HOLDTXDATA20HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA20LOTXUSRCLK2 = 0:0:0, HOLDTXDATA20LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA21HITXUSRCLK2 = 0:0:0, HOLDTXDATA21HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA21LOTXUSRCLK2 = 0:0:0, HOLDTXDATA21LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA22HITXUSRCLK2 = 0:0:0, HOLDTXDATA22HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA22LOTXUSRCLK2 = 0:0:0, HOLDTXDATA22LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA23HITXUSRCLK2 = 0:0:0, HOLDTXDATA23HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA23LOTXUSRCLK2 = 0:0:0, HOLDTXDATA23LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA24HITXUSRCLK2 = 0:0:0, HOLDTXDATA24HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA24LOTXUSRCLK2 = 0:0:0, HOLDTXDATA24LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA25HITXUSRCLK2 = 0:0:0, HOLDTXDATA25HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA25LOTXUSRCLK2 = 0:0:0, HOLDTXDATA25LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA26HITXUSRCLK2 = 0:0:0, HOLDTXDATA26HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA26LOTXUSRCLK2 = 0:0:0, HOLDTXDATA26LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA27HITXUSRCLK2 = 0:0:0, HOLDTXDATA27HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA27LOTXUSRCLK2 = 0:0:0, HOLDTXDATA27LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA28HITXUSRCLK2 = 0:0:0, HOLDTXDATA28HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA28LOTXUSRCLK2 = 0:0:0, HOLDTXDATA28LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA29HITXUSRCLK2 = 0:0:0, HOLDTXDATA29HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA29LOTXUSRCLK2 = 0:0:0, HOLDTXDATA29LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA2HITXUSRCLK2 = 0:0:0, HOLDTXDATA2HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA2LOTXUSRCLK2 = 0:0:0, HOLDTXDATA2LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA30HITXUSRCLK2 = 0:0:0, HOLDTXDATA30HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA30LOTXUSRCLK2 = 0:0:0, HOLDTXDATA30LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA31HITXUSRCLK2 = 0:0:0, HOLDTXDATA31HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA31LOTXUSRCLK2 = 0:0:0, HOLDTXDATA31LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA32HITXUSRCLK2 = 0:0:0, HOLDTXDATA32HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA32LOTXUSRCLK2 = 0:0:0, HOLDTXDATA32LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA33HITXUSRCLK2 = 0:0:0, HOLDTXDATA33HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA33LOTXUSRCLK2 = 0:0:0, HOLDTXDATA33LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA34HITXUSRCLK2 = 0:0:0, HOLDTXDATA34HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA34LOTXUSRCLK2 = 0:0:0, HOLDTXDATA34LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA35HITXUSRCLK2 = 0:0:0, HOLDTXDATA35HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA35LOTXUSRCLK2 = 0:0:0, HOLDTXDATA35LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA36HITXUSRCLK2 = 0:0:0, HOLDTXDATA36HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA36LOTXUSRCLK2 = 0:0:0, HOLDTXDATA36LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA37HITXUSRCLK2 = 0:0:0, HOLDTXDATA37HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA37LOTXUSRCLK2 = 0:0:0, HOLDTXDATA37LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA38HITXUSRCLK2 = 0:0:0, HOLDTXDATA38HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA38LOTXUSRCLK2 = 0:0:0, HOLDTXDATA38LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA39HITXUSRCLK2 = 0:0:0, HOLDTXDATA39HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA39LOTXUSRCLK2 = 0:0:0, HOLDTXDATA39LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA3HITXUSRCLK2 = 0:0:0, HOLDTXDATA3HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA3LOTXUSRCLK2 = 0:0:0, HOLDTXDATA3LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA40HITXUSRCLK2 = 0:0:0, HOLDTXDATA40HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA40LOTXUSRCLK2 = 0:0:0, HOLDTXDATA40LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA41HITXUSRCLK2 = 0:0:0, HOLDTXDATA41HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA41LOTXUSRCLK2 = 0:0:0, HOLDTXDATA41LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA42HITXUSRCLK2 = 0:0:0, HOLDTXDATA42HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA42LOTXUSRCLK2 = 0:0:0, HOLDTXDATA42LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA43HITXUSRCLK2 = 0:0:0, HOLDTXDATA43HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA43LOTXUSRCLK2 = 0:0:0, HOLDTXDATA43LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA44HITXUSRCLK2 = 0:0:0, HOLDTXDATA44HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA44LOTXUSRCLK2 = 0:0:0, HOLDTXDATA44LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA45HITXUSRCLK2 = 0:0:0, HOLDTXDATA45HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA45LOTXUSRCLK2 = 0:0:0, HOLDTXDATA45LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA46HITXUSRCLK2 = 0:0:0, HOLDTXDATA46HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA46LOTXUSRCLK2 = 0:0:0, HOLDTXDATA46LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA47HITXUSRCLK2 = 0:0:0, HOLDTXDATA47HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA47LOTXUSRCLK2 = 0:0:0, HOLDTXDATA47LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA48HITXUSRCLK2 = 0:0:0, HOLDTXDATA48HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA48LOTXUSRCLK2 = 0:0:0, HOLDTXDATA48LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA49HITXUSRCLK2 = 0:0:0, HOLDTXDATA49HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA49LOTXUSRCLK2 = 0:0:0, HOLDTXDATA49LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA4HITXUSRCLK2 = 0:0:0, HOLDTXDATA4HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA4LOTXUSRCLK2 = 0:0:0, HOLDTXDATA4LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA50HITXUSRCLK2 = 0:0:0, HOLDTXDATA50HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA50LOTXUSRCLK2 = 0:0:0, HOLDTXDATA50LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA51HITXUSRCLK2 = 0:0:0, HOLDTXDATA51HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA51LOTXUSRCLK2 = 0:0:0, HOLDTXDATA51LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA52HITXUSRCLK2 = 0:0:0, HOLDTXDATA52HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA52LOTXUSRCLK2 = 0:0:0, HOLDTXDATA52LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA53HITXUSRCLK2 = 0:0:0, HOLDTXDATA53HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA53LOTXUSRCLK2 = 0:0:0, HOLDTXDATA53LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA54HITXUSRCLK2 = 0:0:0, HOLDTXDATA54HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA54LOTXUSRCLK2 = 0:0:0, HOLDTXDATA54LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA55HITXUSRCLK2 = 0:0:0, HOLDTXDATA55HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA55LOTXUSRCLK2 = 0:0:0, HOLDTXDATA55LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA56HITXUSRCLK2 = 0:0:0, HOLDTXDATA56HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA56LOTXUSRCLK2 = 0:0:0, HOLDTXDATA56LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA57HITXUSRCLK2 = 0:0:0, HOLDTXDATA57HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA57LOTXUSRCLK2 = 0:0:0, HOLDTXDATA57LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA58HITXUSRCLK2 = 0:0:0, HOLDTXDATA58HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA58LOTXUSRCLK2 = 0:0:0, HOLDTXDATA58LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA59HITXUSRCLK2 = 0:0:0, HOLDTXDATA59HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA59LOTXUSRCLK2 = 0:0:0, HOLDTXDATA59LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA5HITXUSRCLK2 = 0:0:0, HOLDTXDATA5HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA5LOTXUSRCLK2 = 0:0:0, HOLDTXDATA5LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA60HITXUSRCLK2 = 0:0:0, HOLDTXDATA60HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA60LOTXUSRCLK2 = 0:0:0, HOLDTXDATA60LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA61HITXUSRCLK2 = 0:0:0, HOLDTXDATA61HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA61LOTXUSRCLK2 = 0:0:0, HOLDTXDATA61LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA62HITXUSRCLK2 = 0:0:0, HOLDTXDATA62HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA62LOTXUSRCLK2 = 0:0:0, HOLDTXDATA62LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA63HITXUSRCLK2 = 0:0:0, HOLDTXDATA63HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA63LOTXUSRCLK2 = 0:0:0, HOLDTXDATA63LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA6HITXUSRCLK2 = 0:0:0, HOLDTXDATA6HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA6LOTXUSRCLK2 = 0:0:0, HOLDTXDATA6LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA7HITXUSRCLK2 = 0:0:0, HOLDTXDATA7HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA7LOTXUSRCLK2 = 0:0:0, HOLDTXDATA7LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA8HITXUSRCLK2 = 0:0:0, HOLDTXDATA8HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA8LOTXUSRCLK2 = 0:0:0, HOLDTXDATA8LOTXUSRCLK2 = 0:0:0;
	specparam SUTXDATA9HITXUSRCLK2 = 0:0:0, HOLDTXDATA9HITXUSRCLK2 = 0:0:0;
	specparam SUTXDATA9LOTXUSRCLK2 = 0:0:0, HOLDTXDATA9LOTXUSRCLK2 = 0:0:0;
	specparam SUTXENC64B66BUSEHITXUSRCLK2 = 0:0:0, HOLDTXENC64B66BUSEHITXUSRCLK2 = 0:0:0;
	specparam SUTXENC64B66BUSELOTXUSRCLK2 = 0:0:0, HOLDTXENC64B66BUSELOTXUSRCLK2 = 0:0:0;
	specparam SUTXENC8B10BUSEHITXUSRCLK2 = 0:0:0, HOLDTXENC8B10BUSEHITXUSRCLK2 = 0:0:0;
	specparam SUTXENC8B10BUSELOTXUSRCLK2 = 0:0:0, HOLDTXENC8B10BUSELOTXUSRCLK2 = 0:0:0;
	specparam TXBUFERRDLYLH = 0:0:0, TXBUFERRDLYHL = 0:0:0;
	specparam TXBYPASS8B10B0DLYLH = 0:0:0, TXBYPASS8B10B0DLYHL = 0:0:0;
	specparam TXBYPASS8B10B1DLYLH = 0:0:0, TXBYPASS8B10B1DLYHL = 0:0:0;
	specparam TXBYPASS8B10B2DLYLH = 0:0:0, TXBYPASS8B10B2DLYHL = 0:0:0;
	specparam TXBYPASS8B10B3DLYLH = 0:0:0, TXBYPASS8B10B3DLYHL = 0:0:0;
	specparam TXBYPASS8B10B4DLYLH = 0:0:0, TXBYPASS8B10B4DLYHL = 0:0:0;
	specparam TXBYPASS8B10B5DLYLH = 0:0:0, TXBYPASS8B10B5DLYHL = 0:0:0;
	specparam TXBYPASS8B10B6DLYLH = 0:0:0, TXBYPASS8B10B6DLYHL = 0:0:0;
	specparam TXBYPASS8B10B7DLYLH = 0:0:0, TXBYPASS8B10B7DLYHL = 0:0:0;
	specparam TXCHARDISPMODE0DLYLH = 0:0:0, TXCHARDISPMODE0DLYHL = 0:0:0;
	specparam TXCHARDISPMODE1DLYLH = 0:0:0, TXCHARDISPMODE1DLYHL = 0:0:0;
	specparam TXCHARDISPMODE2DLYLH = 0:0:0, TXCHARDISPMODE2DLYHL = 0:0:0;
	specparam TXCHARDISPMODE3DLYLH = 0:0:0, TXCHARDISPMODE3DLYHL = 0:0:0;
	specparam TXCHARDISPMODE4DLYLH = 0:0:0, TXCHARDISPMODE4DLYHL = 0:0:0;
	specparam TXCHARDISPMODE5DLYLH = 0:0:0, TXCHARDISPMODE5DLYHL = 0:0:0;
	specparam TXCHARDISPMODE6DLYLH = 0:0:0, TXCHARDISPMODE6DLYHL = 0:0:0;
	specparam TXCHARDISPMODE7DLYLH = 0:0:0, TXCHARDISPMODE7DLYHL = 0:0:0;
	specparam TXCHARDISPVAL0DLYLH = 0:0:0, TXCHARDISPVAL0DLYHL = 0:0:0;
	specparam TXCHARDISPVAL1DLYLH = 0:0:0, TXCHARDISPVAL1DLYHL = 0:0:0;
	specparam TXCHARDISPVAL2DLYLH = 0:0:0, TXCHARDISPVAL2DLYHL = 0:0:0;
	specparam TXCHARDISPVAL3DLYLH = 0:0:0, TXCHARDISPVAL3DLYHL = 0:0:0;
	specparam TXCHARDISPVAL4DLYLH = 0:0:0, TXCHARDISPVAL4DLYHL = 0:0:0;
	specparam TXCHARDISPVAL5DLYLH = 0:0:0, TXCHARDISPVAL5DLYHL = 0:0:0;
	specparam TXCHARDISPVAL6DLYLH = 0:0:0, TXCHARDISPVAL6DLYHL = 0:0:0;
	specparam TXCHARDISPVAL7DLYLH = 0:0:0, TXCHARDISPVAL7DLYHL = 0:0:0;
	specparam TXCHARISK0DLYLH = 0:0:0, TXCHARISK0DLYHL = 0:0:0;
	specparam TXCHARISK1DLYLH = 0:0:0, TXCHARISK1DLYHL = 0:0:0;
	specparam TXCHARISK2DLYLH = 0:0:0, TXCHARISK2DLYHL = 0:0:0;
	specparam TXCHARISK3DLYLH = 0:0:0, TXCHARISK3DLYHL = 0:0:0;
	specparam TXCHARISK4DLYLH = 0:0:0, TXCHARISK4DLYHL = 0:0:0;
	specparam TXCHARISK5DLYLH = 0:0:0, TXCHARISK5DLYHL = 0:0:0;
	specparam TXCHARISK6DLYLH = 0:0:0, TXCHARISK6DLYHL = 0:0:0;
	specparam TXCHARISK7DLYLH = 0:0:0, TXCHARISK7DLYHL = 0:0:0;
	specparam TXDATA0DLYLH = 0:0:0, TXDATA0DLYHL = 0:0:0;
	specparam TXDATA10DLYLH = 0:0:0, TXDATA10DLYHL = 0:0:0;
	specparam TXDATA11DLYLH = 0:0:0, TXDATA11DLYHL = 0:0:0;
	specparam TXDATA12DLYLH = 0:0:0, TXDATA12DLYHL = 0:0:0;
	specparam TXDATA13DLYLH = 0:0:0, TXDATA13DLYHL = 0:0:0;
	specparam TXDATA14DLYLH = 0:0:0, TXDATA14DLYHL = 0:0:0;
	specparam TXDATA15DLYLH = 0:0:0, TXDATA15DLYHL = 0:0:0;
	specparam TXDATA16DLYLH = 0:0:0, TXDATA16DLYHL = 0:0:0;
	specparam TXDATA17DLYLH = 0:0:0, TXDATA17DLYHL = 0:0:0;
	specparam TXDATA18DLYLH = 0:0:0, TXDATA18DLYHL = 0:0:0;
	specparam TXDATA19DLYLH = 0:0:0, TXDATA19DLYHL = 0:0:0;
	specparam TXDATA1DLYLH = 0:0:0, TXDATA1DLYHL = 0:0:0;
	specparam TXDATA20DLYLH = 0:0:0, TXDATA20DLYHL = 0:0:0;
	specparam TXDATA21DLYLH = 0:0:0, TXDATA21DLYHL = 0:0:0;
	specparam TXDATA22DLYLH = 0:0:0, TXDATA22DLYHL = 0:0:0;
	specparam TXDATA23DLYLH = 0:0:0, TXDATA23DLYHL = 0:0:0;
	specparam TXDATA24DLYLH = 0:0:0, TXDATA24DLYHL = 0:0:0;
	specparam TXDATA25DLYLH = 0:0:0, TXDATA25DLYHL = 0:0:0;
	specparam TXDATA26DLYLH = 0:0:0, TXDATA26DLYHL = 0:0:0;
	specparam TXDATA27DLYLH = 0:0:0, TXDATA27DLYHL = 0:0:0;
	specparam TXDATA28DLYLH = 0:0:0, TXDATA28DLYHL = 0:0:0;
	specparam TXDATA29DLYLH = 0:0:0, TXDATA29DLYHL = 0:0:0;
	specparam TXDATA2DLYLH = 0:0:0, TXDATA2DLYHL = 0:0:0;
	specparam TXDATA30DLYLH = 0:0:0, TXDATA30DLYHL = 0:0:0;
	specparam TXDATA31DLYLH = 0:0:0, TXDATA31DLYHL = 0:0:0;
	specparam TXDATA32DLYLH = 0:0:0, TXDATA32DLYHL = 0:0:0;
	specparam TXDATA33DLYLH = 0:0:0, TXDATA33DLYHL = 0:0:0;
	specparam TXDATA34DLYLH = 0:0:0, TXDATA34DLYHL = 0:0:0;
	specparam TXDATA35DLYLH = 0:0:0, TXDATA35DLYHL = 0:0:0;
	specparam TXDATA36DLYLH = 0:0:0, TXDATA36DLYHL = 0:0:0;
	specparam TXDATA37DLYLH = 0:0:0, TXDATA37DLYHL = 0:0:0;
	specparam TXDATA38DLYLH = 0:0:0, TXDATA38DLYHL = 0:0:0;
	specparam TXDATA39DLYLH = 0:0:0, TXDATA39DLYHL = 0:0:0;
	specparam TXDATA3DLYLH = 0:0:0, TXDATA3DLYHL = 0:0:0;
	specparam TXDATA40DLYLH = 0:0:0, TXDATA40DLYHL = 0:0:0;
	specparam TXDATA41DLYLH = 0:0:0, TXDATA41DLYHL = 0:0:0;
	specparam TXDATA42DLYLH = 0:0:0, TXDATA42DLYHL = 0:0:0;
	specparam TXDATA43DLYLH = 0:0:0, TXDATA43DLYHL = 0:0:0;
	specparam TXDATA44DLYLH = 0:0:0, TXDATA44DLYHL = 0:0:0;
	specparam TXDATA45DLYLH = 0:0:0, TXDATA45DLYHL = 0:0:0;
	specparam TXDATA46DLYLH = 0:0:0, TXDATA46DLYHL = 0:0:0;
	specparam TXDATA47DLYLH = 0:0:0, TXDATA47DLYHL = 0:0:0;
	specparam TXDATA48DLYLH = 0:0:0, TXDATA48DLYHL = 0:0:0;
	specparam TXDATA49DLYLH = 0:0:0, TXDATA49DLYHL = 0:0:0;
	specparam TXDATA4DLYLH = 0:0:0, TXDATA4DLYHL = 0:0:0;
	specparam TXDATA50DLYLH = 0:0:0, TXDATA50DLYHL = 0:0:0;
	specparam TXDATA51DLYLH = 0:0:0, TXDATA51DLYHL = 0:0:0;
	specparam TXDATA52DLYLH = 0:0:0, TXDATA52DLYHL = 0:0:0;
	specparam TXDATA53DLYLH = 0:0:0, TXDATA53DLYHL = 0:0:0;
	specparam TXDATA54DLYLH = 0:0:0, TXDATA54DLYHL = 0:0:0;
	specparam TXDATA55DLYLH = 0:0:0, TXDATA55DLYHL = 0:0:0;
	specparam TXDATA56DLYLH = 0:0:0, TXDATA56DLYHL = 0:0:0;
	specparam TXDATA57DLYLH = 0:0:0, TXDATA57DLYHL = 0:0:0;
	specparam TXDATA58DLYLH = 0:0:0, TXDATA58DLYHL = 0:0:0;
	specparam TXDATA59DLYLH = 0:0:0, TXDATA59DLYHL = 0:0:0;
	specparam TXDATA5DLYLH = 0:0:0, TXDATA5DLYHL = 0:0:0;
	specparam TXDATA60DLYLH = 0:0:0, TXDATA60DLYHL = 0:0:0;
	specparam TXDATA61DLYLH = 0:0:0, TXDATA61DLYHL = 0:0:0;
	specparam TXDATA62DLYLH = 0:0:0, TXDATA62DLYHL = 0:0:0;
	specparam TXDATA63DLYLH = 0:0:0, TXDATA63DLYHL = 0:0:0;
	specparam TXDATA6DLYLH = 0:0:0, TXDATA6DLYHL = 0:0:0;
	specparam TXDATA7DLYLH = 0:0:0, TXDATA7DLYHL = 0:0:0;
	specparam TXDATA8DLYLH = 0:0:0, TXDATA8DLYHL = 0:0:0;
	specparam TXDATA9DLYLH = 0:0:0, TXDATA9DLYHL = 0:0:0;
	specparam TXDATAWIDTH0DLYLH = 0:0:0, TXDATAWIDTH0DLYHL = 0:0:0;
	specparam TXDATAWIDTH1DLYLH = 0:0:0, TXDATAWIDTH1DLYHL = 0:0:0;
	specparam TXENC64B66BUSEDLYLH = 0:0:0, TXENC64B66BUSEDLYHL = 0:0:0;
	specparam TXENC8B10BUSEDLYLH = 0:0:0, TXENC8B10BUSEDLYHL = 0:0:0;
	specparam TXGEARBOX64B66BUSEDLYLH = 0:0:0, TXGEARBOX64B66BUSEDLYHL = 0:0:0;
	specparam TXINHIBITDLYLH = 0:0:0, TXINHIBITDLYHL = 0:0:0;
	specparam TXINTDATAWIDTH0DLYLH = 0:0:0, TXINTDATAWIDTH0DLYHL = 0:0:0;
	specparam TXINTDATAWIDTH1DLYLH = 0:0:0, TXINTDATAWIDTH1DLYHL = 0:0:0;
	specparam TXKERR0DLYLH = 0:0:0, TXKERR0DLYHL = 0:0:0;
	specparam TXKERR1DLYLH = 0:0:0, TXKERR1DLYHL = 0:0:0;
	specparam TXKERR2DLYLH = 0:0:0, TXKERR2DLYHL = 0:0:0;
	specparam TXKERR3DLYLH = 0:0:0, TXKERR3DLYHL = 0:0:0;
	specparam TXKERR4DLYLH = 0:0:0, TXKERR4DLYHL = 0:0:0;
	specparam TXKERR5DLYLH = 0:0:0, TXKERR5DLYHL = 0:0:0;
	specparam TXKERR6DLYLH = 0:0:0, TXKERR6DLYHL = 0:0:0;
	specparam TXKERR7DLYLH = 0:0:0, TXKERR7DLYHL = 0:0:0;
	specparam TXOUTCLKDLYLH = 0:0:0, TXOUTCLKDLYHL = 0:0:0;
	specparam TXPOLARITYDLYLH = 0:0:0, TXPOLARITYDLYHL = 0:0:0;
	specparam TXRESETDLYLH = 0:0:0, TXRESETDLYHL = 0:0:0;
	specparam TXRUNDISP0DLYLH = 0:0:0, TXRUNDISP0DLYHL = 0:0:0;
	specparam TXRUNDISP1DLYLH = 0:0:0, TXRUNDISP1DLYHL = 0:0:0;
	specparam TXRUNDISP2DLYLH = 0:0:0, TXRUNDISP2DLYHL = 0:0:0;
	specparam TXRUNDISP3DLYLH = 0:0:0, TXRUNDISP3DLYHL = 0:0:0;
	specparam TXRUNDISP4DLYLH = 0:0:0, TXRUNDISP4DLYHL = 0:0:0;
	specparam TXRUNDISP5DLYLH = 0:0:0, TXRUNDISP5DLYHL = 0:0:0;
	specparam TXRUNDISP6DLYLH = 0:0:0, TXRUNDISP6DLYHL = 0:0:0;
	specparam TXRUNDISP7DLYLH = 0:0:0, TXRUNDISP7DLYHL = 0:0:0;
	specparam TXSCRAM64B66BUSEDLYLH = 0:0:0, TXSCRAM64B66BUSEDLYHL = 0:0:0;
	specparam TXUSRCLK2DLYLH = 0:0:0, TXUSRCLK2DLYHL = 0:0:0;
	specparam TXUSRCLKDLYLH = 0:0:0, TXUSRCLKDLYHL = 0:0:0;


	$period (posedge BREFCLKNIN, MINPERBREFCLKNIN, notifier);
	$period (posedge BREFCLKPIN, MINPERBREFCLKPIN, notifier);
	$period (posedge REFCLK, MINPERREFCLK, notifier);
	$period (posedge REFCLK2, MINPERREFCLK2, notifier);
	$setuphold (posedge REFCLK, negedge REFCLKSEL, SUREFCLKSELLOREFCLK, HOLDREFCLKSELLOREFCLK);
	$setuphold (posedge REFCLK, posedge REFCLKSEL, SUREFCLKSELHIREFCLK, HOLDREFCLKSELHIREFCLK);
	$setuphold (posedge RXUSRCLK, negedge CHBONDI[0], SUCHBONDI0LORXUSRCLK, HOLDCHBONDI0LORXUSRCLK);
	$setuphold (posedge RXUSRCLK, negedge CHBONDI[1], SUCHBONDI1LORXUSRCLK, HOLDCHBONDI1LORXUSRCLK);
	$setuphold (posedge RXUSRCLK, negedge CHBONDI[2], SUCHBONDI2LORXUSRCLK, HOLDCHBONDI2LORXUSRCLK);
	$setuphold (posedge RXUSRCLK, negedge CHBONDI[3], SUCHBONDI3LORXUSRCLK, HOLDCHBONDI3LORXUSRCLK);
	$setuphold (posedge RXUSRCLK, negedge CHBONDI[4], SUCHBONDI4LORXUSRCLK, HOLDCHBONDI4LORXUSRCLK);
	$setuphold (posedge RXUSRCLK, posedge CHBONDI[0], SUCHBONDI0HIRXUSRCLK, HOLDCHBONDI0HIRXUSRCLK);
	$setuphold (posedge RXUSRCLK, posedge CHBONDI[1], SUCHBONDI1HIRXUSRCLK, HOLDCHBONDI1HIRXUSRCLK);
	$setuphold (posedge RXUSRCLK, posedge CHBONDI[2], SUCHBONDI2HIRXUSRCLK, HOLDCHBONDI2HIRXUSRCLK);
	$setuphold (posedge RXUSRCLK, posedge CHBONDI[3], SUCHBONDI3HIRXUSRCLK, HOLDCHBONDI3HIRXUSRCLK);
	$setuphold (posedge RXUSRCLK, posedge CHBONDI[4], SUCHBONDI4HIRXUSRCLK, HOLDCHBONDI4HIRXUSRCLK);
	$setuphold (posedge RXUSRCLK2, negedge ENCHANSYNC, SUENCHANSYNCLORXUSRCLK2, HOLDENCHANSYNCLORXUSRCLK2);
	$setuphold (posedge RXUSRCLK2, negedge RXDEC64B66BUSE, SURXDEC64B66BUSELORXUSRCLK2, HOLDRXDEC64B66BUSELORXUSRCLK2);
	$setuphold (posedge RXUSRCLK2, negedge RXIGNOREBTF, SURXIGNOREBTFLORXUSRCLK2, HOLDRXIGNOREBTFLORXUSRCLK2);
	$setuphold (posedge RXUSRCLK2, negedge RXSLIDE, SURXSLIDELORXUSRCLK2, HOLDRXSLIDELORXUSRCLK2);
	$setuphold (posedge RXUSRCLK2, posedge ENCHANSYNC, SUENCHANSYNCHIRXUSRCLK2, HOLDENCHANSYNCHIRXUSRCLK2);
	$setuphold (posedge RXUSRCLK2, posedge RXDEC64B66BUSE, SURXDEC64B66BUSEHIRXUSRCLK2, HOLDRXDEC64B66BUSEHIRXUSRCLK2);
	$setuphold (posedge RXUSRCLK2, posedge RXIGNOREBTF, SURXIGNOREBTFHIRXUSRCLK2, HOLDRXIGNOREBTFHIRXUSRCLK2);
	$setuphold (posedge RXUSRCLK2, posedge RXSLIDE, SURXSLIDEHIRXUSRCLK2, HOLDRXSLIDEHIRXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGADDR[0], SUPMAREGADDR0LOTXUSRCLK2, HOLDPMAREGADDR0LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGADDR[1], SUPMAREGADDR1LOTXUSRCLK2, HOLDPMAREGADDR1LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGADDR[2], SUPMAREGADDR2LOTXUSRCLK2, HOLDPMAREGADDR2LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGADDR[3], SUPMAREGADDR3LOTXUSRCLK2, HOLDPMAREGADDR3LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGADDR[4], SUPMAREGADDR4LOTXUSRCLK2, HOLDPMAREGADDR4LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGADDR[5], SUPMAREGADDR5LOTXUSRCLK2, HOLDPMAREGADDR5LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGDATAIN[0], SUPMAREGDATAIN0LOTXUSRCLK2, HOLDPMAREGDATAIN0LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGDATAIN[1], SUPMAREGDATAIN1LOTXUSRCLK2, HOLDPMAREGDATAIN1LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGDATAIN[2], SUPMAREGDATAIN2LOTXUSRCLK2, HOLDPMAREGDATAIN2LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGDATAIN[3], SUPMAREGDATAIN3LOTXUSRCLK2, HOLDPMAREGDATAIN3LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGDATAIN[4], SUPMAREGDATAIN4LOTXUSRCLK2, HOLDPMAREGDATAIN4LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGDATAIN[5], SUPMAREGDATAIN5LOTXUSRCLK2, HOLDPMAREGDATAIN5LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGDATAIN[6], SUPMAREGDATAIN6LOTXUSRCLK2, HOLDPMAREGDATAIN6LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGDATAIN[7], SUPMAREGDATAIN7LOTXUSRCLK2, HOLDPMAREGDATAIN7LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGRW, SUPMAREGRWLOTXUSRCLK2, HOLDPMAREGRWLOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge PMAREGSTROBE, SUPMAREGSTROBELOTXUSRCLK2, HOLDPMAREGSTROBELOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge REFCLKBSEL, SUREFCLKBSELLOTXUSRCLK2, HOLDREFCLKBSELLOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXBYPASS8B10B[0], SUTXBYPASS8B10B0LOTXUSRCLK2, HOLDTXBYPASS8B10B0LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXBYPASS8B10B[1], SUTXBYPASS8B10B1LOTXUSRCLK2, HOLDTXBYPASS8B10B1LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXBYPASS8B10B[2], SUTXBYPASS8B10B2LOTXUSRCLK2, HOLDTXBYPASS8B10B2LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXBYPASS8B10B[3], SUTXBYPASS8B10B3LOTXUSRCLK2, HOLDTXBYPASS8B10B3LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXBYPASS8B10B[4], SUTXBYPASS8B10B4LOTXUSRCLK2, HOLDTXBYPASS8B10B4LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXBYPASS8B10B[5], SUTXBYPASS8B10B5LOTXUSRCLK2, HOLDTXBYPASS8B10B5LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXBYPASS8B10B[6], SUTXBYPASS8B10B6LOTXUSRCLK2, HOLDTXBYPASS8B10B6LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXBYPASS8B10B[7], SUTXBYPASS8B10B7LOTXUSRCLK2, HOLDTXBYPASS8B10B7LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPMODE[0], SUTXCHARDISPMODE0LOTXUSRCLK2, HOLDTXCHARDISPMODE0LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPMODE[1], SUTXCHARDISPMODE1LOTXUSRCLK2, HOLDTXCHARDISPMODE1LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPMODE[2], SUTXCHARDISPMODE2LOTXUSRCLK2, HOLDTXCHARDISPMODE2LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPMODE[3], SUTXCHARDISPMODE3LOTXUSRCLK2, HOLDTXCHARDISPMODE3LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPMODE[4], SUTXCHARDISPMODE4LOTXUSRCLK2, HOLDTXCHARDISPMODE4LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPMODE[5], SUTXCHARDISPMODE5LOTXUSRCLK2, HOLDTXCHARDISPMODE5LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPMODE[6], SUTXCHARDISPMODE6LOTXUSRCLK2, HOLDTXCHARDISPMODE6LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPMODE[7], SUTXCHARDISPMODE7LOTXUSRCLK2, HOLDTXCHARDISPMODE7LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPVAL[0], SUTXCHARDISPVAL0LOTXUSRCLK2, HOLDTXCHARDISPVAL0LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPVAL[1], SUTXCHARDISPVAL1LOTXUSRCLK2, HOLDTXCHARDISPVAL1LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPVAL[2], SUTXCHARDISPVAL2LOTXUSRCLK2, HOLDTXCHARDISPVAL2LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPVAL[3], SUTXCHARDISPVAL3LOTXUSRCLK2, HOLDTXCHARDISPVAL3LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPVAL[4], SUTXCHARDISPVAL4LOTXUSRCLK2, HOLDTXCHARDISPVAL4LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPVAL[5], SUTXCHARDISPVAL5LOTXUSRCLK2, HOLDTXCHARDISPVAL5LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPVAL[6], SUTXCHARDISPVAL6LOTXUSRCLK2, HOLDTXCHARDISPVAL6LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARDISPVAL[7], SUTXCHARDISPVAL7LOTXUSRCLK2, HOLDTXCHARDISPVAL7LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARISK[0], SUTXCHARISK0LOTXUSRCLK2, HOLDTXCHARISK0LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARISK[1], SUTXCHARISK1LOTXUSRCLK2, HOLDTXCHARISK1LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARISK[2], SUTXCHARISK2LOTXUSRCLK2, HOLDTXCHARISK2LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARISK[3], SUTXCHARISK3LOTXUSRCLK2, HOLDTXCHARISK3LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARISK[4], SUTXCHARISK4LOTXUSRCLK2, HOLDTXCHARISK4LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARISK[5], SUTXCHARISK5LOTXUSRCLK2, HOLDTXCHARISK5LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARISK[6], SUTXCHARISK6LOTXUSRCLK2, HOLDTXCHARISK6LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXCHARISK[7], SUTXCHARISK7LOTXUSRCLK2, HOLDTXCHARISK7LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[0], SUTXDATA0LOTXUSRCLK2, HOLDTXDATA0LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[10], SUTXDATA10LOTXUSRCLK2, HOLDTXDATA10LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[11], SUTXDATA11LOTXUSRCLK2, HOLDTXDATA11LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[12], SUTXDATA12LOTXUSRCLK2, HOLDTXDATA12LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[13], SUTXDATA13LOTXUSRCLK2, HOLDTXDATA13LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[14], SUTXDATA14LOTXUSRCLK2, HOLDTXDATA14LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[15], SUTXDATA15LOTXUSRCLK2, HOLDTXDATA15LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[16], SUTXDATA16LOTXUSRCLK2, HOLDTXDATA16LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[17], SUTXDATA17LOTXUSRCLK2, HOLDTXDATA17LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[18], SUTXDATA18LOTXUSRCLK2, HOLDTXDATA18LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[19], SUTXDATA19LOTXUSRCLK2, HOLDTXDATA19LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[1], SUTXDATA1LOTXUSRCLK2, HOLDTXDATA1LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[20], SUTXDATA20LOTXUSRCLK2, HOLDTXDATA20LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[21], SUTXDATA21LOTXUSRCLK2, HOLDTXDATA21LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[22], SUTXDATA22LOTXUSRCLK2, HOLDTXDATA22LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[23], SUTXDATA23LOTXUSRCLK2, HOLDTXDATA23LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[24], SUTXDATA24LOTXUSRCLK2, HOLDTXDATA24LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[25], SUTXDATA25LOTXUSRCLK2, HOLDTXDATA25LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[26], SUTXDATA26LOTXUSRCLK2, HOLDTXDATA26LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[27], SUTXDATA27LOTXUSRCLK2, HOLDTXDATA27LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[28], SUTXDATA28LOTXUSRCLK2, HOLDTXDATA28LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[29], SUTXDATA29LOTXUSRCLK2, HOLDTXDATA29LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[2], SUTXDATA2LOTXUSRCLK2, HOLDTXDATA2LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[30], SUTXDATA30LOTXUSRCLK2, HOLDTXDATA30LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[31], SUTXDATA31LOTXUSRCLK2, HOLDTXDATA31LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[32], SUTXDATA32LOTXUSRCLK2, HOLDTXDATA32LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[33], SUTXDATA33LOTXUSRCLK2, HOLDTXDATA33LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[34], SUTXDATA34LOTXUSRCLK2, HOLDTXDATA34LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[35], SUTXDATA35LOTXUSRCLK2, HOLDTXDATA35LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[36], SUTXDATA36LOTXUSRCLK2, HOLDTXDATA36LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[37], SUTXDATA37LOTXUSRCLK2, HOLDTXDATA37LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[38], SUTXDATA38LOTXUSRCLK2, HOLDTXDATA38LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[39], SUTXDATA39LOTXUSRCLK2, HOLDTXDATA39LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[3], SUTXDATA3LOTXUSRCLK2, HOLDTXDATA3LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[40], SUTXDATA40LOTXUSRCLK2, HOLDTXDATA40LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[41], SUTXDATA41LOTXUSRCLK2, HOLDTXDATA41LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[42], SUTXDATA42LOTXUSRCLK2, HOLDTXDATA42LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[43], SUTXDATA43LOTXUSRCLK2, HOLDTXDATA43LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[44], SUTXDATA44LOTXUSRCLK2, HOLDTXDATA44LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[45], SUTXDATA45LOTXUSRCLK2, HOLDTXDATA45LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[46], SUTXDATA46LOTXUSRCLK2, HOLDTXDATA46LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[47], SUTXDATA47LOTXUSRCLK2, HOLDTXDATA47LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[48], SUTXDATA48LOTXUSRCLK2, HOLDTXDATA48LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[49], SUTXDATA49LOTXUSRCLK2, HOLDTXDATA49LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[4], SUTXDATA4LOTXUSRCLK2, HOLDTXDATA4LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[50], SUTXDATA50LOTXUSRCLK2, HOLDTXDATA50LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[51], SUTXDATA51LOTXUSRCLK2, HOLDTXDATA51LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[52], SUTXDATA52LOTXUSRCLK2, HOLDTXDATA52LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[53], SUTXDATA53LOTXUSRCLK2, HOLDTXDATA53LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[54], SUTXDATA54LOTXUSRCLK2, HOLDTXDATA54LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[55], SUTXDATA55LOTXUSRCLK2, HOLDTXDATA55LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[56], SUTXDATA56LOTXUSRCLK2, HOLDTXDATA56LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[57], SUTXDATA57LOTXUSRCLK2, HOLDTXDATA57LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[58], SUTXDATA58LOTXUSRCLK2, HOLDTXDATA58LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[59], SUTXDATA59LOTXUSRCLK2, HOLDTXDATA59LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[5], SUTXDATA5LOTXUSRCLK2, HOLDTXDATA5LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[60], SUTXDATA60LOTXUSRCLK2, HOLDTXDATA60LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[61], SUTXDATA61LOTXUSRCLK2, HOLDTXDATA61LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[62], SUTXDATA62LOTXUSRCLK2, HOLDTXDATA62LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[63], SUTXDATA63LOTXUSRCLK2, HOLDTXDATA63LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[6], SUTXDATA6LOTXUSRCLK2, HOLDTXDATA6LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[7], SUTXDATA7LOTXUSRCLK2, HOLDTXDATA7LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[8], SUTXDATA8LOTXUSRCLK2, HOLDTXDATA8LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXDATA[9], SUTXDATA9LOTXUSRCLK2, HOLDTXDATA9LOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXENC64B66BUSE, SUTXENC64B66BUSELOTXUSRCLK2, HOLDTXENC64B66BUSELOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, negedge TXENC8B10BUSE, SUTXENC8B10BUSELOTXUSRCLK2, HOLDTXENC8B10BUSELOTXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGADDR[0], SUPMAREGADDR0HITXUSRCLK2, HOLDPMAREGADDR0HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGADDR[1], SUPMAREGADDR1HITXUSRCLK2, HOLDPMAREGADDR1HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGADDR[2], SUPMAREGADDR2HITXUSRCLK2, HOLDPMAREGADDR2HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGADDR[3], SUPMAREGADDR3HITXUSRCLK2, HOLDPMAREGADDR3HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGADDR[4], SUPMAREGADDR4HITXUSRCLK2, HOLDPMAREGADDR4HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGADDR[5], SUPMAREGADDR5HITXUSRCLK2, HOLDPMAREGADDR5HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGDATAIN[0], SUPMAREGDATAIN0HITXUSRCLK2, HOLDPMAREGDATAIN0HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGDATAIN[1], SUPMAREGDATAIN1HITXUSRCLK2, HOLDPMAREGDATAIN1HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGDATAIN[2], SUPMAREGDATAIN2HITXUSRCLK2, HOLDPMAREGDATAIN2HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGDATAIN[3], SUPMAREGDATAIN3HITXUSRCLK2, HOLDPMAREGDATAIN3HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGDATAIN[4], SUPMAREGDATAIN4HITXUSRCLK2, HOLDPMAREGDATAIN4HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGDATAIN[5], SUPMAREGDATAIN5HITXUSRCLK2, HOLDPMAREGDATAIN5HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGDATAIN[6], SUPMAREGDATAIN6HITXUSRCLK2, HOLDPMAREGDATAIN6HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGDATAIN[7], SUPMAREGDATAIN7HITXUSRCLK2, HOLDPMAREGDATAIN7HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGRW, SUPMAREGRWHITXUSRCLK2, HOLDPMAREGRWHITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge PMAREGSTROBE, SUPMAREGSTROBEHITXUSRCLK2, HOLDPMAREGSTROBEHITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge REFCLKBSEL, SUREFCLKBSELHITXUSRCLK2, HOLDREFCLKBSELHITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXBYPASS8B10B[0], SUTXBYPASS8B10B0HITXUSRCLK2, HOLDTXBYPASS8B10B0HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXBYPASS8B10B[1], SUTXBYPASS8B10B1HITXUSRCLK2, HOLDTXBYPASS8B10B1HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXBYPASS8B10B[2], SUTXBYPASS8B10B2HITXUSRCLK2, HOLDTXBYPASS8B10B2HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXBYPASS8B10B[3], SUTXBYPASS8B10B3HITXUSRCLK2, HOLDTXBYPASS8B10B3HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXBYPASS8B10B[4], SUTXBYPASS8B10B4HITXUSRCLK2, HOLDTXBYPASS8B10B4HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXBYPASS8B10B[5], SUTXBYPASS8B10B5HITXUSRCLK2, HOLDTXBYPASS8B10B5HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXBYPASS8B10B[6], SUTXBYPASS8B10B6HITXUSRCLK2, HOLDTXBYPASS8B10B6HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXBYPASS8B10B[7], SUTXBYPASS8B10B7HITXUSRCLK2, HOLDTXBYPASS8B10B7HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPMODE[0], SUTXCHARDISPMODE0HITXUSRCLK2, HOLDTXCHARDISPMODE0HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPMODE[1], SUTXCHARDISPMODE1HITXUSRCLK2, HOLDTXCHARDISPMODE1HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPMODE[2], SUTXCHARDISPMODE2HITXUSRCLK2, HOLDTXCHARDISPMODE2HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPMODE[3], SUTXCHARDISPMODE3HITXUSRCLK2, HOLDTXCHARDISPMODE3HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPMODE[4], SUTXCHARDISPMODE4HITXUSRCLK2, HOLDTXCHARDISPMODE4HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPMODE[5], SUTXCHARDISPMODE5HITXUSRCLK2, HOLDTXCHARDISPMODE5HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPMODE[6], SUTXCHARDISPMODE6HITXUSRCLK2, HOLDTXCHARDISPMODE6HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPMODE[7], SUTXCHARDISPMODE7HITXUSRCLK2, HOLDTXCHARDISPMODE7HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPVAL[0], SUTXCHARDISPVAL0HITXUSRCLK2, HOLDTXCHARDISPVAL0HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPVAL[1], SUTXCHARDISPVAL1HITXUSRCLK2, HOLDTXCHARDISPVAL1HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPVAL[2], SUTXCHARDISPVAL2HITXUSRCLK2, HOLDTXCHARDISPVAL2HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPVAL[3], SUTXCHARDISPVAL3HITXUSRCLK2, HOLDTXCHARDISPVAL3HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPVAL[4], SUTXCHARDISPVAL4HITXUSRCLK2, HOLDTXCHARDISPVAL4HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPVAL[5], SUTXCHARDISPVAL5HITXUSRCLK2, HOLDTXCHARDISPVAL5HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPVAL[6], SUTXCHARDISPVAL6HITXUSRCLK2, HOLDTXCHARDISPVAL6HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARDISPVAL[7], SUTXCHARDISPVAL7HITXUSRCLK2, HOLDTXCHARDISPVAL7HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARISK[0], SUTXCHARISK0HITXUSRCLK2, HOLDTXCHARISK0HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARISK[1], SUTXCHARISK1HITXUSRCLK2, HOLDTXCHARISK1HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARISK[2], SUTXCHARISK2HITXUSRCLK2, HOLDTXCHARISK2HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARISK[3], SUTXCHARISK3HITXUSRCLK2, HOLDTXCHARISK3HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARISK[4], SUTXCHARISK4HITXUSRCLK2, HOLDTXCHARISK4HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARISK[5], SUTXCHARISK5HITXUSRCLK2, HOLDTXCHARISK5HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARISK[6], SUTXCHARISK6HITXUSRCLK2, HOLDTXCHARISK6HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXCHARISK[7], SUTXCHARISK7HITXUSRCLK2, HOLDTXCHARISK7HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[0], SUTXDATA0HITXUSRCLK2, HOLDTXDATA0HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[10], SUTXDATA10HITXUSRCLK2, HOLDTXDATA10HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[11], SUTXDATA11HITXUSRCLK2, HOLDTXDATA11HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[12], SUTXDATA12HITXUSRCLK2, HOLDTXDATA12HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[13], SUTXDATA13HITXUSRCLK2, HOLDTXDATA13HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[14], SUTXDATA14HITXUSRCLK2, HOLDTXDATA14HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[15], SUTXDATA15HITXUSRCLK2, HOLDTXDATA15HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[16], SUTXDATA16HITXUSRCLK2, HOLDTXDATA16HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[17], SUTXDATA17HITXUSRCLK2, HOLDTXDATA17HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[18], SUTXDATA18HITXUSRCLK2, HOLDTXDATA18HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[19], SUTXDATA19HITXUSRCLK2, HOLDTXDATA19HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[1], SUTXDATA1HITXUSRCLK2, HOLDTXDATA1HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[20], SUTXDATA20HITXUSRCLK2, HOLDTXDATA20HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[21], SUTXDATA21HITXUSRCLK2, HOLDTXDATA21HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[22], SUTXDATA22HITXUSRCLK2, HOLDTXDATA22HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[23], SUTXDATA23HITXUSRCLK2, HOLDTXDATA23HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[24], SUTXDATA24HITXUSRCLK2, HOLDTXDATA24HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[25], SUTXDATA25HITXUSRCLK2, HOLDTXDATA25HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[26], SUTXDATA26HITXUSRCLK2, HOLDTXDATA26HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[27], SUTXDATA27HITXUSRCLK2, HOLDTXDATA27HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[28], SUTXDATA28HITXUSRCLK2, HOLDTXDATA28HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[29], SUTXDATA29HITXUSRCLK2, HOLDTXDATA29HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[2], SUTXDATA2HITXUSRCLK2, HOLDTXDATA2HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[30], SUTXDATA30HITXUSRCLK2, HOLDTXDATA30HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[31], SUTXDATA31HITXUSRCLK2, HOLDTXDATA31HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[32], SUTXDATA32HITXUSRCLK2, HOLDTXDATA32HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[33], SUTXDATA33HITXUSRCLK2, HOLDTXDATA33HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[34], SUTXDATA34HITXUSRCLK2, HOLDTXDATA34HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[35], SUTXDATA35HITXUSRCLK2, HOLDTXDATA35HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[36], SUTXDATA36HITXUSRCLK2, HOLDTXDATA36HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[37], SUTXDATA37HITXUSRCLK2, HOLDTXDATA37HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[38], SUTXDATA38HITXUSRCLK2, HOLDTXDATA38HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[39], SUTXDATA39HITXUSRCLK2, HOLDTXDATA39HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[3], SUTXDATA3HITXUSRCLK2, HOLDTXDATA3HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[40], SUTXDATA40HITXUSRCLK2, HOLDTXDATA40HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[41], SUTXDATA41HITXUSRCLK2, HOLDTXDATA41HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[42], SUTXDATA42HITXUSRCLK2, HOLDTXDATA42HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[43], SUTXDATA43HITXUSRCLK2, HOLDTXDATA43HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[44], SUTXDATA44HITXUSRCLK2, HOLDTXDATA44HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[45], SUTXDATA45HITXUSRCLK2, HOLDTXDATA45HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[46], SUTXDATA46HITXUSRCLK2, HOLDTXDATA46HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[47], SUTXDATA47HITXUSRCLK2, HOLDTXDATA47HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[48], SUTXDATA48HITXUSRCLK2, HOLDTXDATA48HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[49], SUTXDATA49HITXUSRCLK2, HOLDTXDATA49HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[4], SUTXDATA4HITXUSRCLK2, HOLDTXDATA4HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[50], SUTXDATA50HITXUSRCLK2, HOLDTXDATA50HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[51], SUTXDATA51HITXUSRCLK2, HOLDTXDATA51HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[52], SUTXDATA52HITXUSRCLK2, HOLDTXDATA52HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[53], SUTXDATA53HITXUSRCLK2, HOLDTXDATA53HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[54], SUTXDATA54HITXUSRCLK2, HOLDTXDATA54HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[55], SUTXDATA55HITXUSRCLK2, HOLDTXDATA55HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[56], SUTXDATA56HITXUSRCLK2, HOLDTXDATA56HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[57], SUTXDATA57HITXUSRCLK2, HOLDTXDATA57HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[58], SUTXDATA58HITXUSRCLK2, HOLDTXDATA58HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[59], SUTXDATA59HITXUSRCLK2, HOLDTXDATA59HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[5], SUTXDATA5HITXUSRCLK2, HOLDTXDATA5HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[60], SUTXDATA60HITXUSRCLK2, HOLDTXDATA60HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[61], SUTXDATA61HITXUSRCLK2, HOLDTXDATA61HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[62], SUTXDATA62HITXUSRCLK2, HOLDTXDATA62HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[63], SUTXDATA63HITXUSRCLK2, HOLDTXDATA63HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[6], SUTXDATA6HITXUSRCLK2, HOLDTXDATA6HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[7], SUTXDATA7HITXUSRCLK2, HOLDTXDATA7HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[8], SUTXDATA8HITXUSRCLK2, HOLDTXDATA8HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXDATA[9], SUTXDATA9HITXUSRCLK2, HOLDTXDATA9HITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXENC64B66BUSE, SUTXENC64B66BUSEHITXUSRCLK2, HOLDTXENC64B66BUSEHITXUSRCLK2);
	$setuphold (posedge TXUSRCLK2, posedge TXENC8B10BUSE, SUTXENC8B10BUSEHITXUSRCLK2, HOLDTXENC8B10BUSEHITXUSRCLK2);
	$width (negedge BREFCLKNIN, PWBREFCLKNINLO, 0, notifier);
	$width (negedge BREFCLKPIN, PWBREFCLKPINLO, 0, notifier);
	$width (negedge REFCLK, PWREFCLKLO, 0, notifier);
	$width (negedge REFCLK2, PWREFCLK2LO, 0, notifier);
	$width (posedge BREFCLKNIN, PWBREFCLKNINHI, 0, notifier);
	$width (posedge BREFCLKPIN, PWBREFCLKPINHI, 0, notifier);
	$width (posedge REFCLK, PWREFCLKHI, 0, notifier);
	$width (posedge REFCLK2, PWREFCLK2HI, 0, notifier);
	(RXUSRCLK => CHBONDO[0]) = (RXUSRCLKDLYLH + CHBONDO0DLYLH, RXUSRCLKDLYHL + CHBONDO0DLYHL);
	(RXUSRCLK => CHBONDO[1]) = (RXUSRCLKDLYLH + CHBONDO1DLYLH, RXUSRCLKDLYHL + CHBONDO1DLYHL);
	(RXUSRCLK => CHBONDO[2]) = (RXUSRCLKDLYLH + CHBONDO2DLYLH, RXUSRCLKDLYHL + CHBONDO2DLYHL);
	(RXUSRCLK => CHBONDO[3]) = (RXUSRCLKDLYLH + CHBONDO3DLYLH, RXUSRCLKDLYHL + CHBONDO3DLYHL);
	(RXUSRCLK => CHBONDO[4]) = (RXUSRCLKDLYLH + CHBONDO4DLYLH, RXUSRCLKDLYHL + CHBONDO4DLYHL);
	(RXUSRCLK2 => CHBONDDONE) = (RXUSRCLK2DLYLH + CHBONDDONEDLYLH, RXUSRCLK2DLYHL + CHBONDDONEDLYHL);
	(RXUSRCLK2 => RXBUFSTATUS[0]) = (RXUSRCLK2DLYLH + RXBUFSTATUS0DLYLH, RXUSRCLK2DLYHL + RXBUFSTATUS0DLYHL);
	(RXUSRCLK2 => RXBUFSTATUS[1]) = (RXUSRCLK2DLYLH + RXBUFSTATUS1DLYLH, RXUSRCLK2DLYHL + RXBUFSTATUS1DLYHL);
	(RXUSRCLK2 => RXCHARISCOMMA[0]) = (RXUSRCLK2DLYLH + RXCHARISCOMMA0DLYLH, RXUSRCLK2DLYHL + RXCHARISCOMMA0DLYHL);
	(RXUSRCLK2 => RXCHARISCOMMA[1]) = (RXUSRCLK2DLYLH + RXCHARISCOMMA1DLYLH, RXUSRCLK2DLYHL + RXCHARISCOMMA1DLYHL);
	(RXUSRCLK2 => RXCHARISCOMMA[2]) = (RXUSRCLK2DLYLH + RXCHARISCOMMA2DLYLH, RXUSRCLK2DLYHL + RXCHARISCOMMA2DLYHL);
	(RXUSRCLK2 => RXCHARISCOMMA[3]) = (RXUSRCLK2DLYLH + RXCHARISCOMMA3DLYLH, RXUSRCLK2DLYHL + RXCHARISCOMMA3DLYHL);
	(RXUSRCLK2 => RXCHARISCOMMA[4]) = (RXUSRCLK2DLYLH + RXCHARISCOMMA4DLYLH, RXUSRCLK2DLYHL + RXCHARISCOMMA4DLYHL);
	(RXUSRCLK2 => RXCHARISCOMMA[5]) = (RXUSRCLK2DLYLH + RXCHARISCOMMA5DLYLH, RXUSRCLK2DLYHL + RXCHARISCOMMA5DLYHL);
	(RXUSRCLK2 => RXCHARISCOMMA[6]) = (RXUSRCLK2DLYLH + RXCHARISCOMMA6DLYLH, RXUSRCLK2DLYHL + RXCHARISCOMMA6DLYHL);
	(RXUSRCLK2 => RXCHARISCOMMA[7]) = (RXUSRCLK2DLYLH + RXCHARISCOMMA7DLYLH, RXUSRCLK2DLYHL + RXCHARISCOMMA7DLYHL);
	(RXUSRCLK2 => RXCHARISK[0]) = (RXUSRCLK2DLYLH + RXCHARISK0DLYLH, RXUSRCLK2DLYHL + RXCHARISK0DLYHL);
	(RXUSRCLK2 => RXCHARISK[1]) = (RXUSRCLK2DLYLH + RXCHARISK1DLYLH, RXUSRCLK2DLYHL + RXCHARISK1DLYHL);
	(RXUSRCLK2 => RXCHARISK[2]) = (RXUSRCLK2DLYLH + RXCHARISK2DLYLH, RXUSRCLK2DLYHL + RXCHARISK2DLYHL);
	(RXUSRCLK2 => RXCHARISK[3]) = (RXUSRCLK2DLYLH + RXCHARISK3DLYLH, RXUSRCLK2DLYHL + RXCHARISK3DLYHL);
	(RXUSRCLK2 => RXCHARISK[4]) = (RXUSRCLK2DLYLH + RXCHARISK4DLYLH, RXUSRCLK2DLYHL + RXCHARISK4DLYHL);
	(RXUSRCLK2 => RXCHARISK[5]) = (RXUSRCLK2DLYLH + RXCHARISK5DLYLH, RXUSRCLK2DLYHL + RXCHARISK5DLYHL);
	(RXUSRCLK2 => RXCHARISK[6]) = (RXUSRCLK2DLYLH + RXCHARISK6DLYLH, RXUSRCLK2DLYHL + RXCHARISK6DLYHL);
	(RXUSRCLK2 => RXCHARISK[7]) = (RXUSRCLK2DLYLH + RXCHARISK7DLYLH, RXUSRCLK2DLYHL + RXCHARISK7DLYHL);
	(RXUSRCLK2 => RXCLKCORCNT[0]) = (RXUSRCLK2DLYLH + RXCLKCORCNT0DLYLH, RXUSRCLK2DLYHL + RXCLKCORCNT0DLYHL);
	(RXUSRCLK2 => RXCLKCORCNT[1]) = (RXUSRCLK2DLYLH + RXCLKCORCNT1DLYLH, RXUSRCLK2DLYHL + RXCLKCORCNT1DLYHL);
	(RXUSRCLK2 => RXCLKCORCNT[2]) = (RXUSRCLK2DLYLH + RXCLKCORCNT2DLYLH, RXUSRCLK2DLYHL + RXCLKCORCNT2DLYHL);
	(RXUSRCLK2 => RXCOMMADET) = (RXUSRCLK2DLYLH + RXCOMMADETDLYLH, RXUSRCLK2DLYHL + RXCOMMADETDLYHL);
	(RXUSRCLK2 => RXDATA[0]) = (RXUSRCLK2DLYLH + RXDATA0DLYLH, RXUSRCLK2DLYHL + RXDATA0DLYHL);
	(RXUSRCLK2 => RXDATA[10]) = (RXUSRCLK2DLYLH + RXDATA10DLYLH, RXUSRCLK2DLYHL + RXDATA10DLYHL);
	(RXUSRCLK2 => RXDATA[11]) = (RXUSRCLK2DLYLH + RXDATA11DLYLH, RXUSRCLK2DLYHL + RXDATA11DLYHL);
	(RXUSRCLK2 => RXDATA[12]) = (RXUSRCLK2DLYLH + RXDATA12DLYLH, RXUSRCLK2DLYHL + RXDATA12DLYHL);
	(RXUSRCLK2 => RXDATA[13]) = (RXUSRCLK2DLYLH + RXDATA13DLYLH, RXUSRCLK2DLYHL + RXDATA13DLYHL);
	(RXUSRCLK2 => RXDATA[14]) = (RXUSRCLK2DLYLH + RXDATA14DLYLH, RXUSRCLK2DLYHL + RXDATA14DLYHL);
	(RXUSRCLK2 => RXDATA[15]) = (RXUSRCLK2DLYLH + RXDATA15DLYLH, RXUSRCLK2DLYHL + RXDATA15DLYHL);
	(RXUSRCLK2 => RXDATA[16]) = (RXUSRCLK2DLYLH + RXDATA16DLYLH, RXUSRCLK2DLYHL + RXDATA16DLYHL);
	(RXUSRCLK2 => RXDATA[17]) = (RXUSRCLK2DLYLH + RXDATA17DLYLH, RXUSRCLK2DLYHL + RXDATA17DLYHL);
	(RXUSRCLK2 => RXDATA[18]) = (RXUSRCLK2DLYLH + RXDATA18DLYLH, RXUSRCLK2DLYHL + RXDATA18DLYHL);
	(RXUSRCLK2 => RXDATA[19]) = (RXUSRCLK2DLYLH + RXDATA19DLYLH, RXUSRCLK2DLYHL + RXDATA19DLYHL);
	(RXUSRCLK2 => RXDATA[1]) = (RXUSRCLK2DLYLH + RXDATA1DLYLH, RXUSRCLK2DLYHL + RXDATA1DLYHL);
	(RXUSRCLK2 => RXDATA[20]) = (RXUSRCLK2DLYLH + RXDATA20DLYLH, RXUSRCLK2DLYHL + RXDATA20DLYHL);
	(RXUSRCLK2 => RXDATA[21]) = (RXUSRCLK2DLYLH + RXDATA21DLYLH, RXUSRCLK2DLYHL + RXDATA21DLYHL);
	(RXUSRCLK2 => RXDATA[22]) = (RXUSRCLK2DLYLH + RXDATA22DLYLH, RXUSRCLK2DLYHL + RXDATA22DLYHL);
	(RXUSRCLK2 => RXDATA[23]) = (RXUSRCLK2DLYLH + RXDATA23DLYLH, RXUSRCLK2DLYHL + RXDATA23DLYHL);
	(RXUSRCLK2 => RXDATA[24]) = (RXUSRCLK2DLYLH + RXDATA24DLYLH, RXUSRCLK2DLYHL + RXDATA24DLYHL);
	(RXUSRCLK2 => RXDATA[25]) = (RXUSRCLK2DLYLH + RXDATA25DLYLH, RXUSRCLK2DLYHL + RXDATA25DLYHL);
	(RXUSRCLK2 => RXDATA[26]) = (RXUSRCLK2DLYLH + RXDATA26DLYLH, RXUSRCLK2DLYHL + RXDATA26DLYHL);
	(RXUSRCLK2 => RXDATA[27]) = (RXUSRCLK2DLYLH + RXDATA27DLYLH, RXUSRCLK2DLYHL + RXDATA27DLYHL);
	(RXUSRCLK2 => RXDATA[28]) = (RXUSRCLK2DLYLH + RXDATA28DLYLH, RXUSRCLK2DLYHL + RXDATA28DLYHL);
	(RXUSRCLK2 => RXDATA[29]) = (RXUSRCLK2DLYLH + RXDATA29DLYLH, RXUSRCLK2DLYHL + RXDATA29DLYHL);
	(RXUSRCLK2 => RXDATA[2]) = (RXUSRCLK2DLYLH + RXDATA2DLYLH, RXUSRCLK2DLYHL + RXDATA2DLYHL);
	(RXUSRCLK2 => RXDATA[30]) = (RXUSRCLK2DLYLH + RXDATA30DLYLH, RXUSRCLK2DLYHL + RXDATA30DLYHL);
	(RXUSRCLK2 => RXDATA[31]) = (RXUSRCLK2DLYLH + RXDATA31DLYLH, RXUSRCLK2DLYHL + RXDATA31DLYHL);
	(RXUSRCLK2 => RXDATA[32]) = (RXUSRCLK2DLYLH + RXDATA32DLYLH, RXUSRCLK2DLYHL + RXDATA32DLYHL);
	(RXUSRCLK2 => RXDATA[33]) = (RXUSRCLK2DLYLH + RXDATA33DLYLH, RXUSRCLK2DLYHL + RXDATA33DLYHL);
	(RXUSRCLK2 => RXDATA[34]) = (RXUSRCLK2DLYLH + RXDATA34DLYLH, RXUSRCLK2DLYHL + RXDATA34DLYHL);
	(RXUSRCLK2 => RXDATA[35]) = (RXUSRCLK2DLYLH + RXDATA35DLYLH, RXUSRCLK2DLYHL + RXDATA35DLYHL);
	(RXUSRCLK2 => RXDATA[36]) = (RXUSRCLK2DLYLH + RXDATA36DLYLH, RXUSRCLK2DLYHL + RXDATA36DLYHL);
	(RXUSRCLK2 => RXDATA[37]) = (RXUSRCLK2DLYLH + RXDATA37DLYLH, RXUSRCLK2DLYHL + RXDATA37DLYHL);
	(RXUSRCLK2 => RXDATA[38]) = (RXUSRCLK2DLYLH + RXDATA38DLYLH, RXUSRCLK2DLYHL + RXDATA38DLYHL);
	(RXUSRCLK2 => RXDATA[39]) = (RXUSRCLK2DLYLH + RXDATA39DLYLH, RXUSRCLK2DLYHL + RXDATA39DLYHL);
	(RXUSRCLK2 => RXDATA[3]) = (RXUSRCLK2DLYLH + RXDATA3DLYLH, RXUSRCLK2DLYHL + RXDATA3DLYHL);
	(RXUSRCLK2 => RXDATA[40]) = (RXUSRCLK2DLYLH + RXDATA40DLYLH, RXUSRCLK2DLYHL + RXDATA40DLYHL);
	(RXUSRCLK2 => RXDATA[41]) = (RXUSRCLK2DLYLH + RXDATA41DLYLH, RXUSRCLK2DLYHL + RXDATA41DLYHL);
	(RXUSRCLK2 => RXDATA[42]) = (RXUSRCLK2DLYLH + RXDATA42DLYLH, RXUSRCLK2DLYHL + RXDATA42DLYHL);
	(RXUSRCLK2 => RXDATA[43]) = (RXUSRCLK2DLYLH + RXDATA43DLYLH, RXUSRCLK2DLYHL + RXDATA43DLYHL);
	(RXUSRCLK2 => RXDATA[44]) = (RXUSRCLK2DLYLH + RXDATA44DLYLH, RXUSRCLK2DLYHL + RXDATA44DLYHL);
	(RXUSRCLK2 => RXDATA[45]) = (RXUSRCLK2DLYLH + RXDATA45DLYLH, RXUSRCLK2DLYHL + RXDATA45DLYHL);
	(RXUSRCLK2 => RXDATA[46]) = (RXUSRCLK2DLYLH + RXDATA46DLYLH, RXUSRCLK2DLYHL + RXDATA46DLYHL);
	(RXUSRCLK2 => RXDATA[47]) = (RXUSRCLK2DLYLH + RXDATA47DLYLH, RXUSRCLK2DLYHL + RXDATA47DLYHL);
	(RXUSRCLK2 => RXDATA[48]) = (RXUSRCLK2DLYLH + RXDATA48DLYLH, RXUSRCLK2DLYHL + RXDATA48DLYHL);
	(RXUSRCLK2 => RXDATA[49]) = (RXUSRCLK2DLYLH + RXDATA49DLYLH, RXUSRCLK2DLYHL + RXDATA49DLYHL);
	(RXUSRCLK2 => RXDATA[4]) = (RXUSRCLK2DLYLH + RXDATA4DLYLH, RXUSRCLK2DLYHL + RXDATA4DLYHL);
	(RXUSRCLK2 => RXDATA[50]) = (RXUSRCLK2DLYLH + RXDATA50DLYLH, RXUSRCLK2DLYHL + RXDATA50DLYHL);
	(RXUSRCLK2 => RXDATA[51]) = (RXUSRCLK2DLYLH + RXDATA51DLYLH, RXUSRCLK2DLYHL + RXDATA51DLYHL);
	(RXUSRCLK2 => RXDATA[52]) = (RXUSRCLK2DLYLH + RXDATA52DLYLH, RXUSRCLK2DLYHL + RXDATA52DLYHL);
	(RXUSRCLK2 => RXDATA[53]) = (RXUSRCLK2DLYLH + RXDATA53DLYLH, RXUSRCLK2DLYHL + RXDATA53DLYHL);
	(RXUSRCLK2 => RXDATA[54]) = (RXUSRCLK2DLYLH + RXDATA54DLYLH, RXUSRCLK2DLYHL + RXDATA54DLYHL);
	(RXUSRCLK2 => RXDATA[55]) = (RXUSRCLK2DLYLH + RXDATA55DLYLH, RXUSRCLK2DLYHL + RXDATA55DLYHL);
	(RXUSRCLK2 => RXDATA[56]) = (RXUSRCLK2DLYLH + RXDATA56DLYLH, RXUSRCLK2DLYHL + RXDATA56DLYHL);
	(RXUSRCLK2 => RXDATA[57]) = (RXUSRCLK2DLYLH + RXDATA57DLYLH, RXUSRCLK2DLYHL + RXDATA57DLYHL);
	(RXUSRCLK2 => RXDATA[58]) = (RXUSRCLK2DLYLH + RXDATA58DLYLH, RXUSRCLK2DLYHL + RXDATA58DLYHL);
	(RXUSRCLK2 => RXDATA[59]) = (RXUSRCLK2DLYLH + RXDATA59DLYLH, RXUSRCLK2DLYHL + RXDATA59DLYHL);
	(RXUSRCLK2 => RXDATA[5]) = (RXUSRCLK2DLYLH + RXDATA5DLYLH, RXUSRCLK2DLYHL + RXDATA5DLYHL);
	(RXUSRCLK2 => RXDATA[60]) = (RXUSRCLK2DLYLH + RXDATA60DLYLH, RXUSRCLK2DLYHL + RXDATA60DLYHL);
	(RXUSRCLK2 => RXDATA[61]) = (RXUSRCLK2DLYLH + RXDATA61DLYLH, RXUSRCLK2DLYHL + RXDATA61DLYHL);
	(RXUSRCLK2 => RXDATA[62]) = (RXUSRCLK2DLYLH + RXDATA62DLYLH, RXUSRCLK2DLYHL + RXDATA62DLYHL);
	(RXUSRCLK2 => RXDATA[63]) = (RXUSRCLK2DLYLH + RXDATA63DLYLH, RXUSRCLK2DLYHL + RXDATA63DLYHL);
	(RXUSRCLK2 => RXDATA[6]) = (RXUSRCLK2DLYLH + RXDATA6DLYLH, RXUSRCLK2DLYHL + RXDATA6DLYHL);
	(RXUSRCLK2 => RXDATA[7]) = (RXUSRCLK2DLYLH + RXDATA7DLYLH, RXUSRCLK2DLYHL + RXDATA7DLYHL);
	(RXUSRCLK2 => RXDATA[8]) = (RXUSRCLK2DLYLH + RXDATA8DLYLH, RXUSRCLK2DLYHL + RXDATA8DLYHL);
	(RXUSRCLK2 => RXDATA[9]) = (RXUSRCLK2DLYLH + RXDATA9DLYLH, RXUSRCLK2DLYHL + RXDATA9DLYHL);
	(RXUSRCLK2 => RXDISPERR[0]) = (RXUSRCLK2DLYLH + RXDISPERR0DLYLH, RXUSRCLK2DLYHL + RXDISPERR0DLYHL);
	(RXUSRCLK2 => RXDISPERR[1]) = (RXUSRCLK2DLYLH + RXDISPERR1DLYLH, RXUSRCLK2DLYHL + RXDISPERR1DLYHL);
	(RXUSRCLK2 => RXDISPERR[2]) = (RXUSRCLK2DLYLH + RXDISPERR2DLYLH, RXUSRCLK2DLYHL + RXDISPERR2DLYHL);
	(RXUSRCLK2 => RXDISPERR[3]) = (RXUSRCLK2DLYLH + RXDISPERR3DLYLH, RXUSRCLK2DLYHL + RXDISPERR3DLYHL);
	(RXUSRCLK2 => RXDISPERR[4]) = (RXUSRCLK2DLYLH + RXDISPERR4DLYLH, RXUSRCLK2DLYHL + RXDISPERR4DLYHL);
	(RXUSRCLK2 => RXDISPERR[5]) = (RXUSRCLK2DLYLH + RXDISPERR5DLYLH, RXUSRCLK2DLYHL + RXDISPERR5DLYHL);
	(RXUSRCLK2 => RXDISPERR[6]) = (RXUSRCLK2DLYLH + RXDISPERR6DLYLH, RXUSRCLK2DLYHL + RXDISPERR6DLYHL);
	(RXUSRCLK2 => RXDISPERR[7]) = (RXUSRCLK2DLYLH + RXDISPERR7DLYLH, RXUSRCLK2DLYHL + RXDISPERR7DLYHL);
	(RXUSRCLK2 => RXLOSSOFSYNC[0]) = (RXUSRCLK2DLYLH + RXLOSSOFSYNC0DLYLH, RXUSRCLK2DLYHL + RXLOSSOFSYNC0DLYHL);
	(RXUSRCLK2 => RXLOSSOFSYNC[1]) = (RXUSRCLK2DLYLH + RXLOSSOFSYNC1DLYLH, RXUSRCLK2DLYHL + RXLOSSOFSYNC1DLYHL);
	(RXUSRCLK2 => RXNOTINTABLE[0]) = (RXUSRCLK2DLYLH + RXNOTINTABLE0DLYLH, RXUSRCLK2DLYHL + RXNOTINTABLE0DLYHL);
	(RXUSRCLK2 => RXNOTINTABLE[1]) = (RXUSRCLK2DLYLH + RXNOTINTABLE1DLYLH, RXUSRCLK2DLYHL + RXNOTINTABLE1DLYHL);
	(RXUSRCLK2 => RXNOTINTABLE[2]) = (RXUSRCLK2DLYLH + RXNOTINTABLE2DLYLH, RXUSRCLK2DLYHL + RXNOTINTABLE2DLYHL);
	(RXUSRCLK2 => RXNOTINTABLE[3]) = (RXUSRCLK2DLYLH + RXNOTINTABLE3DLYLH, RXUSRCLK2DLYHL + RXNOTINTABLE3DLYHL);
	(RXUSRCLK2 => RXNOTINTABLE[4]) = (RXUSRCLK2DLYLH + RXNOTINTABLE4DLYLH, RXUSRCLK2DLYHL + RXNOTINTABLE4DLYHL);
	(RXUSRCLK2 => RXNOTINTABLE[5]) = (RXUSRCLK2DLYLH + RXNOTINTABLE5DLYLH, RXUSRCLK2DLYHL + RXNOTINTABLE5DLYHL);
	(RXUSRCLK2 => RXNOTINTABLE[6]) = (RXUSRCLK2DLYLH + RXNOTINTABLE6DLYLH, RXUSRCLK2DLYHL + RXNOTINTABLE6DLYHL);
	(RXUSRCLK2 => RXNOTINTABLE[7]) = (RXUSRCLK2DLYLH + RXNOTINTABLE7DLYLH, RXUSRCLK2DLYHL + RXNOTINTABLE7DLYHL);
	(RXUSRCLK2 => RXREALIGN) = (RXUSRCLK2DLYLH + RXREALIGNDLYLH, RXUSRCLK2DLYHL + RXREALIGNDLYHL);
	(RXUSRCLK2 => RXRUNDISP[0]) = (RXUSRCLK2DLYLH + RXRUNDISP0DLYLH, RXUSRCLK2DLYHL + RXRUNDISP0DLYHL);
	(RXUSRCLK2 => RXRUNDISP[1]) = (RXUSRCLK2DLYLH + RXRUNDISP1DLYLH, RXUSRCLK2DLYHL + RXRUNDISP1DLYHL);
	(RXUSRCLK2 => RXRUNDISP[2]) = (RXUSRCLK2DLYLH + RXRUNDISP2DLYLH, RXUSRCLK2DLYHL + RXRUNDISP2DLYHL);
	(RXUSRCLK2 => RXRUNDISP[3]) = (RXUSRCLK2DLYLH + RXRUNDISP3DLYLH, RXUSRCLK2DLYHL + RXRUNDISP3DLYHL);
	(RXUSRCLK2 => RXRUNDISP[4]) = (RXUSRCLK2DLYLH + RXRUNDISP4DLYLH, RXUSRCLK2DLYHL + RXRUNDISP4DLYHL);
	(RXUSRCLK2 => RXRUNDISP[5]) = (RXUSRCLK2DLYLH + RXRUNDISP5DLYLH, RXUSRCLK2DLYHL + RXRUNDISP5DLYHL);
	(RXUSRCLK2 => RXRUNDISP[6]) = (RXUSRCLK2DLYLH + RXRUNDISP6DLYLH, RXUSRCLK2DLYHL + RXRUNDISP6DLYHL);
	(RXUSRCLK2 => RXRUNDISP[7]) = (RXUSRCLK2DLYLH + RXRUNDISP7DLYLH, RXUSRCLK2DLYHL + RXRUNDISP7DLYHL);
	(TXUSRCLK2 => TXBUFERR) = (TXUSRCLK2DLYLH + TXBUFERRDLYLH, TXUSRCLK2DLYHL + TXBUFERRDLYHL);
	(TXUSRCLK2 => TXKERR[0]) = (TXUSRCLK2DLYLH + TXKERR0DLYLH, TXUSRCLK2DLYHL + TXKERR0DLYHL);
	(TXUSRCLK2 => TXKERR[1]) = (TXUSRCLK2DLYLH + TXKERR1DLYLH, TXUSRCLK2DLYHL + TXKERR1DLYHL);
	(TXUSRCLK2 => TXKERR[2]) = (TXUSRCLK2DLYLH + TXKERR2DLYLH, TXUSRCLK2DLYHL + TXKERR2DLYHL);
	(TXUSRCLK2 => TXKERR[3]) = (TXUSRCLK2DLYLH + TXKERR3DLYLH, TXUSRCLK2DLYHL + TXKERR3DLYHL);
	(TXUSRCLK2 => TXKERR[4]) = (TXUSRCLK2DLYLH + TXKERR4DLYLH, TXUSRCLK2DLYHL + TXKERR4DLYHL);
	(TXUSRCLK2 => TXKERR[5]) = (TXUSRCLK2DLYLH + TXKERR5DLYLH, TXUSRCLK2DLYHL + TXKERR5DLYHL);
	(TXUSRCLK2 => TXKERR[6]) = (TXUSRCLK2DLYLH + TXKERR6DLYLH, TXUSRCLK2DLYHL + TXKERR6DLYHL);
	(TXUSRCLK2 => TXKERR[7]) = (TXUSRCLK2DLYLH + TXKERR7DLYLH, TXUSRCLK2DLYHL + TXKERR7DLYHL);
	(TXUSRCLK2 => TXRUNDISP[0]) = (TXUSRCLK2DLYLH + TXRUNDISP0DLYLH, TXUSRCLK2DLYHL + TXRUNDISP0DLYHL);
	(TXUSRCLK2 => TXRUNDISP[1]) = (TXUSRCLK2DLYLH + TXRUNDISP1DLYLH, TXUSRCLK2DLYHL + TXRUNDISP1DLYHL);
	(TXUSRCLK2 => TXRUNDISP[2]) = (TXUSRCLK2DLYLH + TXRUNDISP2DLYLH, TXUSRCLK2DLYHL + TXRUNDISP2DLYHL);
	(TXUSRCLK2 => TXRUNDISP[3]) = (TXUSRCLK2DLYLH + TXRUNDISP3DLYLH, TXUSRCLK2DLYHL + TXRUNDISP3DLYHL);
	(TXUSRCLK2 => TXRUNDISP[4]) = (TXUSRCLK2DLYLH + TXRUNDISP4DLYLH, TXUSRCLK2DLYHL + TXRUNDISP4DLYHL);
	(TXUSRCLK2 => TXRUNDISP[5]) = (TXUSRCLK2DLYLH + TXRUNDISP5DLYLH, TXUSRCLK2DLYHL + TXRUNDISP5DLYHL);
	(TXUSRCLK2 => TXRUNDISP[6]) = (TXUSRCLK2DLYLH + TXRUNDISP6DLYLH, TXUSRCLK2DLYHL + TXRUNDISP6DLYHL);
	(TXUSRCLK2 => TXRUNDISP[7]) = (TXUSRCLK2DLYLH + TXRUNDISP7DLYLH, TXUSRCLK2DLYHL + TXRUNDISP7DLYHL);
endspecify
endmodule
